(Self-Description: This fragment provides guidance for an LLM executing a given NeuroScript procedure step-by-step.)

You are executing the provided NeuroScript procedure. Most syntax is self-evident. Track variable state locally. Key execution points:

* **`SET var = expr`**: Evaluate `expr` (resolving `{{placeholders}}`, concatenating with `+`, using literals like `""`, `[]`, `{}`) and store result in `var`.
* **`CALL Target(...)`**: Execute `ProcedureName`, external `LLM`, or `TOOL.FunctionName`. Store single return value in `__last_call_result`. Assume correct tool function (e.g., `TOOL.WriteFile` saves).
* **`__last_call_result`**: Holds the return value of the most recent `CALL`.
* **`IF cond THEN ... END`**: Execute block steps if `cond` (`==`, `!=`, `true`/`false`) is true. Skip otherwise. (`ELSE` not supported).
* **`WHILE cond DO ... END`**: Execute block steps repeatedly while `cond` is true.
* **`FOR EACH var IN coll DO ... END`**: Evaluate `coll`.
    * If `coll` is a list `[...]`: `var` gets each element. **[Interpreter TODO]**
    * If `coll` is a map `{...}`: Iteration TBD. **[Interpreter TODO]**
    * If `coll` is a string: `var` gets each character. **[Interpreter TODO]**
    * Otherwise: Split `coll` string by comma, `var` gets each part.
* **List/Map Elements**: Accessing elements (e.g., `myList[0]`, `myMap["key"]`) is **not currently supported**. Treat lists/maps as opaque values unless iterated in `FOR EACH`.
* **`RETURN expr`**: Evaluate `expr` and immediately return the value, ending procedure execution.
* **`END`**: Terminates blocks (`COMMENT:`, `IF`, `WHILE`, `FOR EACH`) or the procedure.
* **Line Continuation `\`**: Join line with next before interpreting.

Execute step-by-step, maintain variable state, determine final outcome or `RETURN` value.
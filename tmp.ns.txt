:: Name: Parameter Passing Test Script (Enhanced)
:: Version: 1.2.0

func mainEntry(needs strArg, intArg, boolArg, floatArg returns result) means
  :: description: Simulates entry point receiving CLI-like arguments with varied types.
  emit "mainEntry_recvd:" + strArg + "," + intArg + "," + boolArg + "," + floatArg
  
  call helperProc(strArg + "_to_helper", intArg * 2, not boolArg, floatArg / 2.0) # Corrected: kw_not boolArg
  
  call recursiveProc(strArg, intArg, boolArg, 3) # Start recursion with depth 3
  
  set result = "mainEntry_completed_with_" + strArg
  return result
endfunc

func helperProc(needs pStr, pInt, pBool, pFloat returns result) means
  :: description: Helper procedure to check argument passing with varied types.
  emit "helperProc_recvd:" + pStr + "," + pInt + "," + pBool + "," + pFloat
  set result = "helperProc_completed"
  return result
endfunc

func recursiveProc(needs rStrArg, rIntArg, rBoolArg, rDepth returns result) means
  :: description: Recursive procedure to check argument passing and scope with varied types.
  emit "recursiveProc_recvd:" + rStrArg + "," + rIntArg + "," + rBoolArg + "," + rDepth
  
  if rDepth > 1
    set newDepth = rDepth - 1
    # Pass arguments through, potentially modifying one for variation
    set x = recursiveProc(rStrArg, rIntArg + rDepth, not rBoolArg, newDepth)
  endif

  set result = "recursiveProc_completed_depth_" + rDepth
  return result
endfunc
{
  "componentName": "core",
  "componentPath": "pkg/core",
  "indexSchemaVersion": "component_index_v2.0.0",
  "packages": {
    "github.com/aprice2704/neuroscript/pkg/core": {
      "packagePath": "github.com/aprice2704/neuroscript/pkg/core",
      "packageName": "core",
      "functions": [
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewAIWorkerManager",
          "sourceFile": "ai_wm.go",
          "parameters": [
            {
              "name": "logger",
              "type": "logging.Logger"
            },
            {
              "name": "sandboxDir",
              "type": "string"
            },
            {
              "name": "llmClient",
              "type": "LLMClient"
            },
            {
              "name": "initialDefinitionsContent",
              "type": "string"
            },
            {
              "name": "initialPerformanceContent",
              "type": "string"
            }
          ],
          "returns": [
            "*AIWorkerManager",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.RegisterAIWorkerTools",
          "sourceFile": "ai_wm_tools_register.go",
          "parameters": [
            {
              "name": "i",
              "type": "*Interpreter"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ParseMetadataLine",
          "sourceFile": "ast_builder_helpers.go",
          "parameters": [
            {
              "name": "line",
              "type": "string"
            }
          ],
          "returns": [
            "string",
            "string",
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertInputSchemaToArgSpec",
          "sourceFile": "ast_builder_helpers.go",
          "parameters": [
            {
              "name": "schema",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "[]ArgSpec",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewASTBuilder",
          "sourceFile": "ast_builder_main.go",
          "parameters": [
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*ASTBuilder"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.MapKeysListener",
          "sourceFile": "ast_builder_main.go",
          "parameters": [
            {
              "name": "m",
              "type": "map[string]string"
            }
          ],
          "returns": [
            "[]string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewConversationManager",
          "sourceFile": "conversation.go",
          "parameters": [
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*ConversationManager"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertGenaiContentsToConversationTurns",
          "sourceFile": "conversation_helpers.go",
          "parameters": [
            {
              "name": "genaiHistory",
              "type": "[]*genai.Content"
            }
          ],
          "returns": [
            "[]*ConversationTurn"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertCoreTurnsToGenaiContents",
          "sourceFile": "conversation_helpers.go",
          "parameters": [
            {
              "name": "coreTurns",
              "type": "[]*ConversationTurn"
            }
          ],
          "returns": [
            "[]*genai.Content"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewRuntimeError",
          "sourceFile": "errors.go",
          "parameters": [
            {
              "name": "code",
              "type": "ErrorCode"
            },
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "wrapped",
              "type": "error"
            }
          ],
          "returns": [
            "*RuntimeError"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ToNumeric",
          "sourceFile": "evaluation_helpers.go",
          "parameters": [
            {
              "name": "val",
              "type": "interface{}"
            }
          ],
          "returns": [
            "interface{}",
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertToBool",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "val",
              "type": "interface{}"
            }
          ],
          "returns": [
            "bool",
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertToInt64E",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "value",
              "type": "interface{}"
            }
          ],
          "returns": [
            "int64",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertToSliceOfString",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "rawValue",
              "type": "interface{}"
            }
          ],
          "returns": [
            "[]string",
            "bool",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewTestInterpreter",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "t",
              "type": "*testing.T"
            },
            {
              "name": "vars",
              "type": "map[string]interface{}"
            },
            {
              "name": "lastResult",
              "type": "interface{}"
            }
          ],
          "returns": [
            "*Interpreter",
            "string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewDefaultTestInterpreter",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "t",
              "type": "*testing.T"
            }
          ],
          "returns": [
            "*Interpreter",
            "string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewInterpreter",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "logger",
              "type": "logging.Logger"
            },
            {
              "name": "llmClient",
              "type": "LLMClient"
            },
            {
              "name": "sandboxDir",
              "type": "string"
            },
            {
              "name": "initialVars",
              "type": "map[string]interface{}"
            },
            {
              "name": "libPaths",
              "type": "[]string"
            }
          ],
          "returns": [
            "*Interpreter",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertToolSpecArgsToInputSchema",
          "sourceFile": "interpreter_steps_ask.go",
          "parameters": [
            {
              "name": "args",
              "type": "[]ArgSpec"
            }
          ],
          "returns": [
            "map[string]interface{}",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewLLMClient",
          "sourceFile": "llm.go",
          "parameters": [
            {
              "name": "apiKey",
              "type": "string"
            },
            {
              "name": "apiHost",
              "type": "string"
            },
            {
              "name": "modelID",
              "type": "string"
            },
            {
              "name": "logger",
              "type": "logging.Logger"
            },
            {
              "name": "enabled",
              "type": "bool"
            }
          ],
          "returns": [
            "LLMClient"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.RegisterLLMTools",
          "sourceFile": "llm_tools.go",
          "parameters": [
            {
              "name": "registry",
              "type": "ToolRegistry"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewParserAPI",
          "sourceFile": "parser_api.go",
          "parameters": [
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*ParserAPI"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewErrorListener",
          "sourceFile": "parser_api.go",
          "parameters": [
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*ErrorListener"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewLSPErrorListener",
          "sourceFile": "parser_api.go",
          "parameters": [
            {
              "name": "sourceName",
              "type": "string"
            },
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*ErrorListener"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewSecurityLayer",
          "sourceFile": "security.go",
          "parameters": [
            {
              "name": "allowlistTools",
              "type": "[]string"
            },
            {
              "name": "denylistSet",
              "type": "map[string]bool"
            },
            {
              "name": "sandboxRoot",
              "type": "string"
            },
            {
              "name": "registry",
              "type": "ToolRegistry"
            },
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*SecurityLayer"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.SanitizeFilename",
          "sourceFile": "security.go",
          "parameters": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.CreateErrorFunctionResultPart",
          "sourceFile": "security_helpers.go",
          "parameters": [
            {
              "name": "qualifiedToolName",
              "type": "string"
            },
            {
              "name": "execErr",
              "type": "error"
            }
          ],
          "returns": [
            "genai.Part"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.CreateSuccessFunctionResultPart",
          "sourceFile": "security_helpers.go",
          "parameters": [
            {
              "name": "qualifiedToolName",
              "type": "string"
            },
            {
              "name": "resultValue",
              "type": "interface{}"
            },
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "genai.Part"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.GetSandboxPath",
          "sourceFile": "security_helpers.go",
          "parameters": [
            {
              "name": "sandboxRoot",
              "type": "string"
            },
            {
              "name": "relativePath",
              "type": "string"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.IsPathInSandbox",
          "sourceFile": "security_helpers.go",
          "parameters": [
            {
              "name": "sandboxRoot",
              "type": "string"
            },
            {
              "name": "inputPath",
              "type": "string"
            }
          ],
          "returns": [
            "bool",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ResolveAndSecurePath",
          "sourceFile": "security_helpers.go",
          "parameters": [
            {
              "name": "inputPath",
              "type": "string"
            },
            {
              "name": "allowedRoot",
              "type": "string"
            }
          ],
          "returns": [
            "string",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.SecureFilePath",
          "sourceFile": "security_helpers.go",
          "parameters": [
            {
              "name": "relativePath",
              "type": "string"
            },
            {
              "name": "allowedRoot",
              "type": "string"
            }
          ],
          "returns": [
            "string",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.HelperUploadAndPollFile",
          "sourceFile": "sync_helpers.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "localPath",
              "type": "string"
            },
            {
              "name": "displayName",
              "type": "string"
            },
            {
              "name": "client",
              "type": "*genai.Client"
            },
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*genai.File",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.AssertNoError",
          "sourceFile": "testing_helpers.go",
          "parameters": [
            {
              "name": "t",
              "type": "*testing.T"
            },
            {
              "name": "err",
              "type": "error"
            },
            {
              "name": "msgAndArgs",
              "type": "...interface{}"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewTestStringLiteral",
          "sourceFile": "testing_helpers.go",
          "parameters": [
            {
              "name": "val",
              "type": "string"
            }
          ],
          "returns": [
            "*StringLiteralNode"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewTestNumberLiteral",
          "sourceFile": "testing_helpers.go",
          "parameters": [
            {
              "name": "val",
              "type": "interface{}"
            }
          ],
          "returns": [
            "*NumberLiteralNode"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewTestBooleanLiteral",
          "sourceFile": "testing_helpers.go",
          "parameters": [
            {
              "name": "val",
              "type": "bool"
            }
          ],
          "returns": [
            "*BooleanLiteralNode"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewTestVariableNode",
          "sourceFile": "testing_helpers.go",
          "parameters": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            "*VariableNode"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewFileAPI",
          "sourceFile": "tools_file_api.go",
          "parameters": [
            {
              "name": "sandboxDir",
              "type": "string"
            },
            {
              "name": "logger",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*FileAPI"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.SyncDirectoryUpHelper",
          "sourceFile": "tools_file_api_sync.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "absLocalDir",
              "type": "string"
            },
            {
              "name": "filterPattern",
              "type": "string"
            },
            {
              "name": "ignoreGitignore",
              "type": "bool"
            },
            {
              "name": "interp",
              "type": "*Interpreter"
            }
          ],
          "returns": [
            "map[string]interface{}",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.FindAndParseGoMod",
          "sourceFile": "tools_go_mod.go",
          "parameters": [
            {
              "name": "startDir",
              "type": "string"
            },
            {
              "name": "log",
              "type": "logging.Logger"
            }
          ],
          "returns": [
            "*modfile.File",
            "string",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.MakeArgs",
          "sourceFile": "tools_helpers.go",
          "parameters": [
            {
              "name": "vals",
              "type": "...interface{}"
            }
          ],
          "returns": [
            "[]interface{}"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.RegisterCoreTools",
          "sourceFile": "tools_register.go",
          "parameters": [
            {
              "name": "registry",
              "type": "ToolRegistry"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.AddToolImplementations",
          "sourceFile": "tools_registry.go",
          "parameters": [
            {
              "name": "impls",
              "type": "...ToolImplementation"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewToolRegistry",
          "sourceFile": "tools_registry.go",
          "parameters": [
            {
              "name": "interpreter",
              "type": "*Interpreter"
            }
          ],
          "returns": [
            "*ToolRegistryImpl"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.IsValidCommandPath",
          "sourceFile": "tools_shell.go",
          "parameters": [
            {
              "name": "command",
              "type": "string"
            }
          ],
          "returns": [
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertToFloat64",
          "sourceFile": "tools_tree_find.go",
          "parameters": [
            {
              "name": "val",
              "type": "interface{}"
            }
          ],
          "returns": [
            "float64",
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ValidateAndConvertArgs",
          "sourceFile": "tools_validation.go",
          "parameters": [
            {
              "name": "spec",
              "type": "ToolSpec"
            },
            {
              "name": "rawArgs",
              "type": "[]interface{}"
            }
          ],
          "returns": [
            "[]interface{}",
            "error"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NewGenericTree",
          "sourceFile": "tree_types.go",
          "returns": [
            "*GenericTree"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.LogTest",
          "sourceFile": "universal_test_helpers.go",
          "parameters": [
            {
              "name": "t",
              "type": "*testing.T"
            },
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...interface{}"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NormalizeString",
          "sourceFile": "universal_test_helpers.go",
          "parameters": [
            {
              "name": "content",
              "type": "string"
            },
            {
              "name": "flags",
              "type": "NormalizationFlags"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.DiffStrings",
          "sourceFile": "universal_test_helpers.go",
          "parameters": [
            {
              "name": "t",
              "type": "testing.TB"
            },
            {
              "name": "expected",
              "type": "string"
            },
            {
              "name": "actual",
              "type": "string"
            },
            {
              "name": "normFlags",
              "type": "NormalizationFlags"
            },
            {
              "name": "diffFlags",
              "type": "DiffFlags"
            }
          ],
          "returns": [
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.AssertEqualStrings",
          "sourceFile": "universal_test_helpers.go",
          "parameters": [
            {
              "name": "t",
              "type": "*testing.T"
            },
            {
              "name": "expected",
              "type": "string"
            },
            {
              "name": "actual",
              "type": "string"
            },
            {
              "name": "msgAndArgs",
              "type": "...interface{}"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.ConvertToIntE",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "value",
              "type": "interface{}"
            }
          ],
          "returns": [
            "int",
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.IsTruthy",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "val",
              "type": "interface{}"
            }
          ],
          "returns": [
            "bool"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.InterfaceToString",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "value",
              "type": "interface{}"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.NodeToString",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "node",
              "type": "interface{}"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core.MakeUnimplementedToolFunc",
          "sourceFile": "zz_core_tools_registrar.go",
          "parameters": [
            {
              "name": "toolName",
              "type": "string"
            }
          ],
          "returns": [
            "ToolFunc"
          ]
        }
      ],
      "methods": [
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "FullPathForDefinitions",
          "sourceFile": "ai_wm.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "FullPathForPerformanceData",
          "sourceFile": "ai_wm.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "GetSandboxDir",
          "sourceFile": "ai_wm.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "ListWorkerDefinitionsForDisplay",
          "sourceFile": "ai_wm.go",
          "returns": [
            "[]*AIWorkerDefinitionDisplayInfo",
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "AddWorkerDefinition",
          "sourceFile": "ai_wm_definitions_crud.go",
          "parameters": [
            {
              "name": "def",
              "type": "AIWorkerDefinition"
            }
          ],
          "returns": [
            "string",
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "GetWorkerDefinition",
          "sourceFile": "ai_wm_definitions_crud.go",
          "parameters": [
            {
              "name": "definitionID",
              "type": "string"
            }
          ],
          "returns": [
            "*AIWorkerDefinition",
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "ListWorkerDefinitions",
          "sourceFile": "ai_wm_definitions_crud.go",
          "parameters": [
            {
              "name": "filters",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "[]*AIWorkerDefinition"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "UpdateWorkerDefinition",
          "sourceFile": "ai_wm_definitions_crud.go",
          "parameters": [
            {
              "name": "definitionID",
              "type": "string"
            },
            {
              "name": "updates",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "RemoveWorkerDefinition",
          "sourceFile": "ai_wm_definitions_crud.go",
          "parameters": [
            {
              "name": "definitionID",
              "type": "string"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "LoadWorkerDefinitionsFromFile",
          "sourceFile": "ai_wm_definitions_io.go",
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "SaveWorkerDefinitionsToFile",
          "sourceFile": "ai_wm_definitions_io.go",
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "LoadRetiredInstancePerformanceDataFromFile",
          "sourceFile": "ai_wm_definitions_io.go",
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "SpawnWorkerInstance",
          "sourceFile": "ai_wm_instances.go",
          "parameters": [
            {
              "name": "definitionID",
              "type": "string"
            },
            {
              "name": "instanceConfigOverrides",
              "type": "map[string]interface{}"
            },
            {
              "name": "initialFileContexts",
              "type": "[]string"
            }
          ],
          "returns": [
            "*AIWorkerInstance",
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "GetWorkerInstance",
          "sourceFile": "ai_wm_instances.go",
          "parameters": [
            {
              "name": "instanceID",
              "type": "string"
            }
          ],
          "returns": [
            "*AIWorkerInstance",
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "ListActiveWorkerInstances",
          "sourceFile": "ai_wm_instances.go",
          "parameters": [
            {
              "name": "filters",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "[]*AIWorkerInstance"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "RetireWorkerInstance",
          "sourceFile": "ai_wm_instances.go",
          "parameters": [
            {
              "name": "instanceID",
              "type": "string"
            },
            {
              "name": "reason",
              "type": "string"
            },
            {
              "name": "finalStatus",
              "type": "AIWorkerInstanceStatus"
            },
            {
              "name": "finalSessionUsage",
              "type": "TokenUsageMetrics"
            },
            {
              "name": "instancePerformanceRecords",
              "type": "[]*PerformanceRecord"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "UpdateInstanceStatus",
          "sourceFile": "ai_wm_instances.go",
          "parameters": [
            {
              "name": "instanceID",
              "type": "string"
            },
            {
              "name": "newStatus",
              "type": "AIWorkerInstanceStatus"
            },
            {
              "name": "lastError",
              "type": "string"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "UpdateInstanceSessionTokenUsage",
          "sourceFile": "ai_wm_instances.go",
          "parameters": [
            {
              "name": "instanceID",
              "type": "string"
            },
            {
              "name": "inputTokens",
              "type": "int64"
            },
            {
              "name": "outputTokens",
              "type": "int64"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "GetPerformanceRecordsForDefinition",
          "sourceFile": "ai_wm_performance.go",
          "parameters": [
            {
              "name": "definitionID",
              "type": "string"
            },
            {
              "name": "filters",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "[]*PerformanceRecord",
            "error"
          ]
        },
        {
          "receiverName": "m",
          "receiverType": "*AIWorkerManager",
          "name": "ExecuteStatelessTask",
          "sourceFile": "ai_wm_stateless.go",
          "parameters": [
            {
              "name": "definitionID",
              "type": "string"
            },
            {
              "name": "llmClient",
              "type": "LLMClient"
            },
            {
              "name": "prompt",
              "type": "string"
            },
            {
              "name": "configOverrides",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "string",
            "*PerformanceRecord",
            "error"
          ]
        },
        {
          "receiverName": "instance",
          "receiverType": "*AIWorkerInstance",
          "name": "ProcessChatMessage",
          "sourceFile": "ai_worker_types.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "userMessageText",
              "type": "string"
            }
          ],
          "returns": [
            "*ConversationTurn",
            "error"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*Position",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*Position",
          "name": "String",
          "sourceFile": "ast.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*Program",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*ErrorNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "ct",
          "receiverType": "*CallTarget",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*CallableExprNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*VariableNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*PlaceholderNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*LastNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*EvalNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*StringLiteralNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*NumberLiteralNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*BooleanLiteralNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*ListLiteralNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*MapEntryNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*MapLiteralNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*ElementAccessNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*UnaryOpNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "n",
          "receiverType": "*BinaryOpNode",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*Procedure",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Step",
          "name": "GetPos",
          "sourceFile": "ast.go",
          "returns": [
            "*Position"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "StringLiteralNode",
          "name": "String",
          "sourceFile": "ast.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "CallableExprNode",
          "name": "String",
          "sourceFile": "ast.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterStatement_list",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Statement_listContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitStatement_list",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Statement_listContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterIf_statement",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.If_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitIf_statement",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.If_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterWhile_statement",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.While_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitWhile_statement",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.While_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterFor_each_statement",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.For_each_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitFor_each_statement",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.For_each_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterOnErrorStmt",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.OnErrorStmtContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitOnErrorStmt",
          "sourceFile": "ast_builder_blocks.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.OnErrorStmtContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitList_literal",
          "sourceFile": "ast_builder_collections.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.List_literalContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitMap_entry",
          "sourceFile": "ast_builder_collections.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Map_entryContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitMap_literal",
          "sourceFile": "ast_builder_collections.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Map_literalContext"
            }
          ]
        },
        {
          "receiverName": "b",
          "receiverType": "*ASTBuilder",
          "name": "Build",
          "sourceFile": "ast_builder_main.go",
          "parameters": [
            {
              "name": "tree",
              "type": "antlr.Tree"
            }
          ],
          "returns": [
            "*Program",
            "map[string]string",
            "error"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "GetFileMetadata",
          "sourceFile": "ast_builder_main.go",
          "returns": [
            "map[string]string"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "GetResult",
          "sourceFile": "ast_builder_main.go",
          "returns": [
            "[]*Procedure"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterProgram",
          "sourceFile": "ast_builder_main.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.ProgramContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitProgram",
          "sourceFile": "ast_builder_main.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.ProgramContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterFile_header",
          "sourceFile": "ast_builder_main.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.File_headerContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitFile_header",
          "sourceFile": "ast_builder_main.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.File_headerContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitLogical_or_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Logical_or_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitLogical_and_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Logical_and_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitBitwise_or_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Bitwise_or_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitBitwise_xor_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Bitwise_xor_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitBitwise_and_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Bitwise_and_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitEquality_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Equality_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitRelational_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Relational_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitAdditive_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Additive_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitMultiplicative_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Multiplicative_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitUnary_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Unary_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitPower_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Power_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitAccessor_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Accessor_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitCall_target",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Call_targetContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitCallable_expr",
          "sourceFile": "ast_builder_operators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Callable_exprContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "EnterProcedure_definition",
          "sourceFile": "ast_builder_procedures.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Procedure_definitionContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitProcedure_definition",
          "sourceFile": "ast_builder_procedures.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Procedure_definitionContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitSet_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Set_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitReturn_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Return_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitEmit_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Emit_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitMust_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Must_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitFail_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Fail_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitClearErrorStmt",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.ClearErrorStmtContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitAsk_stmt",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Ask_stmtContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitCall_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Call_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitBreak_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Break_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitContinue_statement",
          "sourceFile": "ast_builder_statements.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Continue_statementContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitExpression",
          "sourceFile": "ast_builder_terminators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.ExpressionContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitPrimary",
          "sourceFile": "ast_builder_terminators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.PrimaryContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitPlaceholder",
          "sourceFile": "ast_builder_terminators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.PlaceholderContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitLiteral",
          "sourceFile": "ast_builder_terminators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.LiteralContext"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*neuroScriptListenerImpl",
          "name": "ExitBoolean_literal",
          "sourceFile": "ast_builder_terminators.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*gen.Boolean_literalContext"
            }
          ]
        },
        {
          "receiverName": "cm",
          "receiverType": "*ConversationManager",
          "name": "AddUserMessage",
          "sourceFile": "conversation.go",
          "parameters": [
            {
              "name": "text",
              "type": "string"
            }
          ]
        },
        {
          "receiverName": "cm",
          "receiverType": "*ConversationManager",
          "name": "AddModelMessage",
          "sourceFile": "conversation.go",
          "parameters": [
            {
              "name": "text",
              "type": "string"
            }
          ]
        },
        {
          "receiverName": "cm",
          "receiverType": "*ConversationManager",
          "name": "AddModelResponse",
          "sourceFile": "conversation.go",
          "parameters": [
            {
              "name": "candidate",
              "type": "*genai.Candidate"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "cm",
          "receiverType": "*ConversationManager",
          "name": "AddFunctionCallMessage",
          "sourceFile": "conversation.go",
          "parameters": [
            {
              "name": "fc",
              "type": "genai.FunctionCall"
            }
          ]
        },
        {
          "receiverName": "cm",
          "receiverType": "*ConversationManager",
          "name": "AddFunctionResultMessage",
          "sourceFile": "conversation.go",
          "parameters": [
            {
              "name": "part",
              "type": "genai.Part"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "cm",
          "receiverType": "*ConversationManager",
          "name": "GetHistory",
          "sourceFile": "conversation.go",
          "returns": [
            "[]*genai.Content"
          ]
        },
        {
          "receiverName": "cm",
          "receiverType": "*ConversationManager",
          "name": "ClearHistory",
          "sourceFile": "conversation.go"
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "GenerateEmbedding",
          "sourceFile": "embeddings.go",
          "parameters": [
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            "[]float32",
            "error"
          ]
        },
        {
          "receiverName": "e",
          "receiverType": "*RuntimeError",
          "name": "Error",
          "sourceFile": "errors.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "e",
          "receiverType": "*RuntimeError",
          "name": "Unwrap",
          "sourceFile": "errors.go",
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Debug",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Info",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Warn",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Error",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "SetLevel",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "level",
              "type": "logging.LogLevel"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Debugf",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Infof",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Warnf",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*TestLogger",
          "name": "Errorf",
          "sourceFile": "helpers.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "SetStdout",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "writer",
              "type": "io.Writer"
            }
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "Stdout",
          "sourceFile": "interpreter.go",
          "returns": [
            "io.Writer"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "ToolRegistry",
          "sourceFile": "interpreter.go",
          "returns": [
            "ToolRegistry"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "RegisterTool",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "impl",
              "type": "ToolImplementation"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "GetTool",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            "ToolImplementation",
            "bool"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "ListTools",
          "sourceFile": "interpreter.go",
          "returns": [
            "[]ToolSpec"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "ExecuteTool",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "toolName",
              "type": "string"
            },
            {
              "name": "args",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "interface{}",
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "SetAIWorkerManager",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "manager",
              "type": "*AIWorkerManager"
            }
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "SandboxDir",
          "sourceFile": "interpreter.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "Logger",
          "sourceFile": "interpreter.go",
          "returns": [
            "logging.Logger"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "FileAPI",
          "sourceFile": "interpreter.go",
          "returns": [
            "*FileAPI"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "SetSandboxDir",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "newSandboxDir",
              "type": "string"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "SetInternalToolRegistry",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "registry",
              "type": "*ToolRegistryImpl"
            }
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "SetVariable",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "value",
              "type": "interface{}"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "GetVariable",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            "interface{}",
            "bool"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "InternalToolRegistry",
          "sourceFile": "interpreter.go",
          "returns": [
            "*ToolRegistryImpl"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "GenAIClient",
          "sourceFile": "interpreter.go",
          "returns": [
            "*genai.Client"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "AddProcedure",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "proc",
              "type": "Procedure"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "KnownProcedures",
          "sourceFile": "interpreter.go",
          "returns": [
            "map[string]Procedure"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "GetVectorIndex",
          "sourceFile": "interpreter.go",
          "returns": [
            "map[string][]float32"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "SetVectorIndex",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "vi",
              "type": "map[string][]float32"
            }
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "RegisterHandle",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "obj",
              "type": "interface{}"
            },
            {
              "name": "typePrefix",
              "type": "string"
            }
          ],
          "returns": [
            "string",
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "GetHandleValue",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "handle",
              "type": "string"
            },
            {
              "name": "expectedTypePrefix",
              "type": "string"
            }
          ],
          "returns": [
            "interface{}",
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "RemoveHandle",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "handle",
              "type": "string"
            }
          ],
          "returns": [
            "bool"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "RunProcedure",
          "sourceFile": "interpreter.go",
          "parameters": [
            {
              "name": "procName",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...interface{}"
            }
          ],
          "returns": [
            "interface{}",
            "error"
          ]
        },
        {
          "receiverName": "i",
          "receiverType": "*Interpreter",
          "name": "AIWorkerManager",
          "sourceFile": "interpreter.go",
          "returns": [
            "*AIWorkerManager"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*concreteLLMClient",
          "name": "Ask",
          "sourceFile": "llm.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "turns",
              "type": "[]*ConversationTurn"
            }
          ],
          "returns": [
            "*ConversationTurn",
            "error"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*concreteLLMClient",
          "name": "AskWithTools",
          "sourceFile": "llm.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "turns",
              "type": "[]*ConversationTurn"
            },
            {
              "name": "tools",
              "type": "[]ToolDefinition"
            }
          ],
          "returns": [
            "*ConversationTurn",
            "[]*ToolCall",
            "error"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*concreteLLMClient",
          "name": "Embed",
          "sourceFile": "llm.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            "[]float32",
            "error"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*concreteLLMClient",
          "name": "Client",
          "sourceFile": "llm.go",
          "returns": [
            "*genai.Client"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*coreInternalNoOpLLMClient",
          "name": "Ask",
          "sourceFile": "llm.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "turns",
              "type": "[]*ConversationTurn"
            }
          ],
          "returns": [
            "*ConversationTurn",
            "error"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*coreInternalNoOpLLMClient",
          "name": "AskWithTools",
          "sourceFile": "llm.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "turns",
              "type": "[]*ConversationTurn"
            },
            {
              "name": "tools",
              "type": "[]ToolDefinition"
            }
          ],
          "returns": [
            "*ConversationTurn",
            "[]*ToolCall",
            "error"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*coreInternalNoOpLLMClient",
          "name": "Embed",
          "sourceFile": "llm.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "context.Context"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            "[]float32",
            "error"
          ]
        },
        {
          "receiverName": "c",
          "receiverType": "*coreInternalNoOpLLMClient",
          "name": "Client",
          "sourceFile": "llm.go",
          "returns": [
            "*genai.Client"
          ]
        },
        {
          "receiverName": "t",
          "receiverType": "*ConversationTurn",
          "name": "String",
          "sourceFile": "llm_types.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*ErrorListener",
          "name": "SyntaxError",
          "sourceFile": "parser_api.go",
          "parameters": [
            {
              "name": "recognizer",
              "type": "antlr.Recognizer"
            },
            {
              "name": "offendingSymbol",
              "type": "interface{}"
            },
            {
              "name": "line",
              "type": "int"
            },
            {
              "name": "column",
              "type": "int"
            },
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "e",
              "type": "antlr.RecognitionException"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*ErrorListener",
          "name": "GetStructuredErrors",
          "sourceFile": "parser_api.go",
          "returns": [
            "[]StructuredSyntaxError"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*ErrorListener",
          "name": "GetRawErrors",
          "sourceFile": "parser_api.go",
          "returns": [
            "[]string"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*ParserAPI",
          "name": "Parse",
          "sourceFile": "parser_api.go",
          "parameters": [
            {
              "name": "source",
              "type": "string"
            }
          ],
          "returns": [
            "antlr.Tree",
            "error"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*ParserAPI",
          "name": "ParseForLSP",
          "sourceFile": "parser_api.go",
          "parameters": [
            {
              "name": "sourceName",
              "type": "string"
            },
            {
              "name": "sourceContent",
              "type": "string"
            }
          ],
          "returns": [
            "antlr.Tree",
            "[]StructuredSyntaxError"
          ]
        },
        {
          "receiverName": "sl",
          "receiverType": "*SecurityLayer",
          "name": "SandboxRoot",
          "sourceFile": "security.go",
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "sl",
          "receiverType": "*SecurityLayer",
          "name": "GetToolDeclarations",
          "sourceFile": "security.go",
          "returns": [
            "[]*genai.Tool",
            "error"
          ]
        },
        {
          "receiverName": "sl",
          "receiverType": "*SecurityLayer",
          "name": "ExecuteToolCall",
          "sourceFile": "security.go",
          "parameters": [
            {
              "name": "interpreter",
              "type": "*Interpreter"
            },
            {
              "name": "fc",
              "type": "genai.FunctionCall"
            }
          ],
          "returns": [
            "genai.Part",
            "error"
          ]
        },
        {
          "receiverName": "sl",
          "receiverType": "*SecurityLayer",
          "name": "ValidateToolCall",
          "sourceFile": "security.go",
          "parameters": [
            {
              "name": "qualifiedToolName",
              "type": "string"
            },
            {
              "name": "rawArgs",
              "type": "map[string]interface{}"
            }
          ],
          "returns": [
            "map[string]interface{}",
            "error"
          ]
        },
        {
          "receiverName": "f",
          "receiverType": "*FileAPI",
          "name": "ResolvePath",
          "sourceFile": "tools_file_api.go",
          "parameters": [
            {
              "name": "relPath",
              "type": "string"
            }
          ],
          "returns": [
            "string",
            "error"
          ]
        },
        {
          "receiverName": "r",
          "receiverType": "*ToolRegistryImpl",
          "name": "RegisterTool",
          "sourceFile": "tools_registry.go",
          "parameters": [
            {
              "name": "impl",
              "type": "ToolImplementation"
            }
          ],
          "returns": [
            "error"
          ]
        },
        {
          "receiverName": "r",
          "receiverType": "*ToolRegistryImpl",
          "name": "GetTool",
          "sourceFile": "tools_registry.go",
          "parameters": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            "ToolImplementation",
            "bool"
          ]
        },
        {
          "receiverName": "r",
          "receiverType": "*ToolRegistryImpl",
          "name": "ListTools",
          "sourceFile": "tools_registry.go",
          "returns": [
            "[]ToolSpec"
          ]
        },
        {
          "receiverName": "at",
          "receiverType": "ArgType",
          "name": "ToGenaiType",
          "sourceFile": "tools_types.go",
          "returns": [
            "genai.Type",
            "error"
          ]
        },
        {
          "receiverName": "gt",
          "receiverType": "*GenericTree",
          "name": "NewNode",
          "sourceFile": "tree_types.go",
          "parameters": [
            {
              "name": "parentID",
              "type": "string"
            },
            {
              "name": "nodeType",
              "type": "string"
            }
          ],
          "returns": [
            "*GenericTreeNode"
          ]
        },
        {
          "receiverName": "tw",
          "receiverType": "testWriter",
          "name": "Write",
          "sourceFile": "universal_test_helpers.go",
          "parameters": [
            {
              "name": "p",
              "type": "[]byte"
            }
          ],
          "returns": [
            "int",
            "error"
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Debug",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Info",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Warn",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Error",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "msg",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Debugf",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Infof",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Warnf",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "Errorf",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "format",
              "type": "string"
            },
            {
              "name": "args",
              "type": "...any"
            }
          ]
        },
        {
          "receiverName": "l",
          "receiverType": "*coreNoOpLogger",
          "name": "SetLevel",
          "sourceFile": "utils.go",
          "parameters": [
            {
              "name": "level",
              "type": "logging.LogLevel"
            }
          ]
        }
      ],
      "structs": [
        {
          "name": "AIWorkerManager",
          "sourceFile": "ai_wm.go"
        },
        {
          "name": "WorkerRateTracker",
          "sourceFile": "ai_wm_ratelimit.go",
          "fields": [
            {
              "name": "DefinitionID",
              "type": "string",
              "exported": true
            },
            {
              "name": "CurrentActiveInstances",
              "type": "int",
              "exported": true
            }
          ]
        },
        {
          "name": "AIWorkerDefinitionDisplayInfo",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "Definition",
              "type": "*AIWorkerDefinition",
              "exported": true
            },
            {
              "name": "IsChatCapable",
              "type": "bool",
              "exported": true
            },
            {
              "name": "APIKeyStatus",
              "type": "APIKeyStatus",
              "exported": true
            }
          ]
        },
        {
          "name": "APIKeySource",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "Method",
              "type": "APIKeySourceMethod",
              "tags": "json:\"method\"",
              "exported": true
            },
            {
              "name": "Value",
              "type": "string",
              "tags": "json:\"value,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "RateLimitPolicy",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "MaxRequestsPerMinute",
              "type": "int",
              "tags": "json:\"max_requests_per_minute,omitempty\"",
              "exported": true
            },
            {
              "name": "MaxTokensPerMinute",
              "type": "int",
              "tags": "json:\"max_tokens_per_minute,omitempty\"",
              "exported": true
            },
            {
              "name": "MaxTokensPerDay",
              "type": "int",
              "tags": "json:\"max_tokens_per_day,omitempty\"",
              "exported": true
            },
            {
              "name": "MaxConcurrentActiveInstances",
              "type": "int",
              "tags": "json:\"max_concurrent_active_instances,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "TokenUsageMetrics",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "InputTokens",
              "type": "int64",
              "tags": "json:\"input_tokens\"",
              "exported": true
            },
            {
              "name": "OutputTokens",
              "type": "int64",
              "tags": "json:\"output_tokens\"",
              "exported": true
            },
            {
              "name": "TotalTokens",
              "type": "int64",
              "tags": "json:\"total_tokens\"",
              "exported": true
            }
          ]
        },
        {
          "name": "SupervisorFeedback",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "Rating",
              "type": "float64",
              "tags": "json:\"rating,omitempty\"",
              "exported": true
            },
            {
              "name": "Comments",
              "type": "string",
              "tags": "json:\"comments,omitempty\"",
              "exported": true
            },
            {
              "name": "CorrectionInstructions",
              "type": "string",
              "tags": "json:\"correction_instructions,omitempty\"",
              "exported": true
            },
            {
              "name": "SupervisorAgentID",
              "type": "string",
              "tags": "json:\"supervisor_agent_id,omitempty\"",
              "exported": true
            },
            {
              "name": "FeedbackTimestamp",
              "type": "time.Time",
              "tags": "json:\"feedback_timestamp,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "AIWorkerPerformanceSummary",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "TotalTasksAttempted",
              "type": "int",
              "tags": "json:\"total_tasks_attempted\"",
              "exported": true
            },
            {
              "name": "SuccessfulTasks",
              "type": "int",
              "tags": "json:\"successful_tasks\"",
              "exported": true
            },
            {
              "name": "FailedTasks",
              "type": "int",
              "tags": "json:\"failed_tasks\"",
              "exported": true
            },
            {
              "name": "AverageSuccessRate",
              "type": "float64",
              "tags": "json:\"average_success_rate\"",
              "exported": true
            },
            {
              "name": "AverageDurationMs",
              "type": "float64",
              "tags": "json:\"average_duration_ms\"",
              "exported": true
            },
            {
              "name": "TotalTokensProcessed",
              "type": "int64",
              "tags": "json:\"total_tokens_processed\"",
              "exported": true
            },
            {
              "name": "TotalCostIncurred",
              "type": "float64",
              "tags": "json:\"total_cost_incurred\"",
              "exported": true
            },
            {
              "name": "AverageQualityScore",
              "type": "float64",
              "tags": "json:\"average_quality_score,omitempty\"",
              "exported": true
            },
            {
              "name": "LastActivityTimestamp",
              "type": "time.Time",
              "tags": "json:\"last_activity_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "TotalInstancesSpawned",
              "type": "int",
              "tags": "json:\"total_instances_spawned,omitempty\"",
              "exported": true
            },
            {
              "name": "ActiveInstancesCount",
              "type": "int",
              "tags": "json:\"active_instances_count,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "GlobalDataSourceDefinition",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "Type",
              "type": "DataSourceType",
              "tags": "json:\"type\"",
              "exported": true
            },
            {
              "name": "Description",
              "type": "string",
              "tags": "json:\"description,omitempty\"",
              "exported": true
            },
            {
              "name": "LocalPath",
              "type": "string",
              "tags": "json:\"local_path,omitempty\"",
              "exported": true
            },
            {
              "name": "AllowExternalReadAccess",
              "type": "bool",
              "tags": "json:\"allow_external_read_access,omitempty\"",
              "exported": true
            },
            {
              "name": "FileAPIPath",
              "type": "string",
              "tags": "json:\"file_api_path,omitempty\"",
              "exported": true
            },
            {
              "name": "RemoteTargetPath",
              "type": "string",
              "tags": "json:\"remote_target_path,omitempty\"",
              "exported": true
            },
            {
              "name": "ReadOnly",
              "type": "bool",
              "tags": "json:\"read_only\"",
              "exported": true
            },
            {
              "name": "Filters",
              "type": "[]string",
              "tags": "json:\"filters,omitempty\"",
              "exported": true
            },
            {
              "name": "Recursive",
              "type": "bool",
              "tags": "json:\"recursive,omitempty\"",
              "exported": true
            },
            {
              "name": "Metadata",
              "type": "map[string]interface{}",
              "tags": "json:\"metadata,omitempty\"",
              "exported": true
            },
            {
              "name": "CreatedTimestamp",
              "type": "time.Time",
              "tags": "json:\"created_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "ModifiedTimestamp",
              "type": "time.Time",
              "tags": "json:\"modified_timestamp,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "AIWorkerDefinition",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "DefinitionID",
              "type": "string",
              "tags": "json:\"definitionID\"",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "Provider",
              "type": "AIWorkerProvider",
              "tags": "json:\"provider\"",
              "exported": true
            },
            {
              "name": "ModelName",
              "type": "string",
              "tags": "json:\"modelName\"",
              "exported": true
            },
            {
              "name": "Auth",
              "type": "APIKeySource",
              "tags": "json:\"auth\"",
              "exported": true
            },
            {
              "name": "InteractionModels",
              "type": "[]InteractionModelType",
              "tags": "json:\"interaction_models,omitempty\"",
              "exported": true
            },
            {
              "name": "Capabilities",
              "type": "[]string",
              "tags": "json:\"capabilities,omitempty\"",
              "exported": true
            },
            {
              "name": "BaseConfig",
              "type": "map[string]interface{}",
              "tags": "json:\"baseConfig,omitempty\"",
              "exported": true
            },
            {
              "name": "CostMetrics",
              "type": "map[string]float64",
              "tags": "json:\"costMetrics,omitempty\"",
              "exported": true
            },
            {
              "name": "RateLimits",
              "type": "RateLimitPolicy",
              "tags": "json:\"rateLimits,omitempty\"",
              "exported": true
            },
            {
              "name": "Status",
              "type": "AIWorkerDefinitionStatus",
              "tags": "json:\"status,omitempty\"",
              "exported": true
            },
            {
              "name": "DefaultFileContexts",
              "type": "[]string",
              "tags": "json:\"defaultFileContexts,omitempty\"",
              "exported": true
            },
            {
              "name": "DataSourceRefs",
              "type": "[]string",
              "tags": "json:\"dataSourceRefs,omitempty\"",
              "exported": true
            },
            {
              "name": "ToolAllowlist",
              "type": "[]string",
              "tags": "json:\"toolAllowlist,omitempty\"",
              "exported": true
            },
            {
              "name": "ToolDenylist",
              "type": "[]string",
              "tags": "json:\"toolDenylist,omitempty\"",
              "exported": true
            },
            {
              "name": "DefaultSupervisoryAIRef",
              "type": "string",
              "tags": "json:\"defaultSupervisoryAIRef,omitempty\"",
              "exported": true
            },
            {
              "name": "AggregatePerformanceSummary",
              "type": "*AIWorkerPerformanceSummary",
              "tags": "json:\"aggregatePerformanceSummary,omitempty\"",
              "exported": true
            },
            {
              "name": "Metadata",
              "type": "map[string]interface{}",
              "tags": "json:\"metadata,omitempty\"",
              "exported": true
            },
            {
              "name": "CreatedTimestamp",
              "type": "time.Time",
              "tags": "json:\"createdTimestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "ModifiedTimestamp",
              "type": "time.Time",
              "tags": "json:\"modifiedTimestamp,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "AIWorkerInstance",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "InstanceID",
              "type": "string",
              "tags": "json:\"instance_id\"",
              "exported": true
            },
            {
              "name": "DefinitionID",
              "type": "string",
              "tags": "json:\"definition_id\"",
              "exported": true
            },
            {
              "name": "Status",
              "type": "AIWorkerInstanceStatus",
              "tags": "json:\"status\"",
              "exported": true
            },
            {
              "name": "ConversationHistory",
              "type": "[]*ConversationTurn",
              "tags": "json:\"-\"",
              "exported": true
            },
            {
              "name": "CreationTimestamp",
              "type": "time.Time",
              "tags": "json:\"creation_timestamp\"",
              "exported": true
            },
            {
              "name": "LastActivityTimestamp",
              "type": "time.Time",
              "tags": "json:\"last_activity_timestamp\"",
              "exported": true
            },
            {
              "name": "SessionTokenUsage",
              "type": "TokenUsageMetrics",
              "tags": "json:\"session_token_usage\"",
              "exported": true
            },
            {
              "name": "CurrentConfig",
              "type": "map[string]interface{}",
              "tags": "json:\"current_config,omitempty\"",
              "exported": true
            },
            {
              "name": "ActiveFileContexts",
              "type": "[]string",
              "tags": "json:\"-\"",
              "exported": true
            },
            {
              "name": "LastError",
              "type": "string",
              "tags": "json:\"last_error,omitempty\"",
              "exported": true
            },
            {
              "name": "RetirementReason",
              "type": "string",
              "tags": "json:\"retirement_reason,omitempty\"",
              "exported": true
            },
            {
              "name": "PoolID",
              "type": "string",
              "tags": "json:\"pool_id,omitempty\"",
              "exported": true
            },
            {
              "name": "CurrentTaskID",
              "type": "string",
              "tags": "json:\"current_task_id,omitempty\"",
              "exported": true
            },
            {
              "name": "DataSourceRefs",
              "type": "[]string",
              "tags": "json:\"data_source_refs,omitempty\"",
              "exported": true
            },
            {
              "name": "SupervisoryAIRef",
              "type": "string",
              "tags": "json:\"supervisory_ai_ref,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "PerformanceRecord",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "TaskID",
              "type": "string",
              "tags": "json:\"task_id\"",
              "exported": true
            },
            {
              "name": "InstanceID",
              "type": "string",
              "tags": "json:\"instance_id\"",
              "exported": true
            },
            {
              "name": "DefinitionID",
              "type": "string",
              "tags": "json:\"definition_id\"",
              "exported": true
            },
            {
              "name": "TimestampStart",
              "type": "time.Time",
              "tags": "json:\"timestamp_start\"",
              "exported": true
            },
            {
              "name": "TimestampEnd",
              "type": "time.Time",
              "tags": "json:\"timestamp_end\"",
              "exported": true
            },
            {
              "name": "DurationMs",
              "type": "int64",
              "tags": "json:\"duration_ms\"",
              "exported": true
            },
            {
              "name": "Success",
              "type": "bool",
              "tags": "json:\"success\"",
              "exported": true
            },
            {
              "name": "InputContext",
              "type": "map[string]interface{}",
              "tags": "json:\"input_context,omitempty\"",
              "exported": true
            },
            {
              "name": "LLMMetrics",
              "type": "map[string]interface{}",
              "tags": "json:\"llm_metrics,omitempty\"",
              "exported": true
            },
            {
              "name": "CostIncurred",
              "type": "float64",
              "tags": "json:\"cost_incurred,omitempty\"",
              "exported": true
            },
            {
              "name": "OutputSummary",
              "type": "string",
              "tags": "json:\"output_summary,omitempty\"",
              "exported": true
            },
            {
              "name": "ErrorDetails",
              "type": "string",
              "tags": "json:\"error_details,omitempty\"",
              "exported": true
            },
            {
              "name": "SupervisorFeedback",
              "type": "*SupervisorFeedback",
              "tags": "json:\"supervisor_feedback,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "RetiredInstanceInfo",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "InstanceID",
              "type": "string",
              "tags": "json:\"instance_id\"",
              "exported": true
            },
            {
              "name": "DefinitionID",
              "type": "string",
              "tags": "json:\"definition_id\"",
              "exported": true
            },
            {
              "name": "CreationTimestamp",
              "type": "time.Time",
              "tags": "json:\"creation_timestamp\"",
              "exported": true
            },
            {
              "name": "RetirementTimestamp",
              "type": "time.Time",
              "tags": "json:\"retirement_timestamp\"",
              "exported": true
            },
            {
              "name": "FinalStatus",
              "type": "AIWorkerInstanceStatus",
              "tags": "json:\"final_status\"",
              "exported": true
            },
            {
              "name": "RetirementReason",
              "type": "string",
              "tags": "json:\"retirement_reason,omitempty\"",
              "exported": true
            },
            {
              "name": "SessionTokenUsage",
              "type": "TokenUsageMetrics",
              "tags": "json:\"session_token_usage\"",
              "exported": true
            },
            {
              "name": "InitialFileContexts",
              "type": "[]string",
              "tags": "json:\"initial_file_contexts,omitempty\"",
              "exported": true
            },
            {
              "name": "PerformanceRecords",
              "type": "[]*PerformanceRecord",
              "tags": "json:\"performance_records\"",
              "exported": true
            }
          ]
        },
        {
          "name": "InstanceRetirementPolicy",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "MaxTasksPerInstance",
              "type": "int",
              "tags": "json:\"max_tasks_per_instance,omitempty\"",
              "exported": true
            },
            {
              "name": "MaxInstanceAgeHours",
              "type": "int",
              "tags": "json:\"max_instance_age_hours,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "AIWorkerPoolDefinition",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "PoolID",
              "type": "string",
              "tags": "json:\"pool_id\"",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "TargetAIWorkerDefinitionName",
              "type": "string",
              "tags": "json:\"target_ai_worker_definition_name\"",
              "exported": true
            },
            {
              "name": "MinIdleInstances",
              "type": "int",
              "tags": "json:\"min_idle_instances,omitempty\"",
              "exported": true
            },
            {
              "name": "MaxTotalInstances",
              "type": "int",
              "tags": "json:\"max_total_instances,omitempty\"",
              "exported": true
            },
            {
              "name": "InstanceRetirementPolicy",
              "type": "InstanceRetirementPolicy",
              "tags": "json:\"instance_retirement_policy,omitempty\"",
              "exported": true
            },
            {
              "name": "DataSourceRefs",
              "type": "[]string",
              "tags": "json:\"data_source_refs,omitempty\"",
              "exported": true
            },
            {
              "name": "SupervisoryAIRef",
              "type": "string",
              "tags": "json:\"supervisory_ai_ref,omitempty\"",
              "exported": true
            },
            {
              "name": "Metadata",
              "type": "map[string]interface{}",
              "tags": "json:\"metadata,omitempty\"",
              "exported": true
            },
            {
              "name": "CreatedTimestamp",
              "type": "time.Time",
              "tags": "json:\"created_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "ModifiedTimestamp",
              "type": "time.Time",
              "tags": "json:\"modified_timestamp,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "RetryPolicy",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "MaxRetries",
              "type": "int",
              "tags": "json:\"max_retries,omitempty\"",
              "exported": true
            },
            {
              "name": "RetryDelaySeconds",
              "type": "int",
              "tags": "json:\"retry_delay_seconds,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "WorkQueueDefinition",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "QueueID",
              "type": "string",
              "tags": "json:\"queue_id\"",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "AssociatedPoolNames",
              "type": "[]string",
              "tags": "json:\"associated_pool_names\"",
              "exported": true
            },
            {
              "name": "DefaultPriority",
              "type": "int",
              "tags": "json:\"default_priority,omitempty\"",
              "exported": true
            },
            {
              "name": "RetryPolicy",
              "type": "RetryPolicy",
              "tags": "json:\"retry_policy,omitempty\"",
              "exported": true
            },
            {
              "name": "PersistTasks",
              "type": "bool",
              "tags": "json:\"persist_tasks,omitempty\"",
              "exported": true
            },
            {
              "name": "DataSourceRefs",
              "type": "[]string",
              "tags": "json:\"data_source_refs,omitempty\"",
              "exported": true
            },
            {
              "name": "SupervisoryAIRef",
              "type": "string",
              "tags": "json:\"supervisory_ai_ref,omitempty\"",
              "exported": true
            },
            {
              "name": "Metadata",
              "type": "map[string]interface{}",
              "tags": "json:\"metadata,omitempty\"",
              "exported": true
            },
            {
              "name": "CreatedTimestamp",
              "type": "time.Time",
              "tags": "json:\"created_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "ModifiedTimestamp",
              "type": "time.Time",
              "tags": "json:\"modified_timestamp,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "WorkItemDefinition",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "WorkItemDefinitionID",
              "type": "string",
              "tags": "json:\"work_item_definition_id\"",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "Description",
              "type": "string",
              "tags": "json:\"description,omitempty\"",
              "exported": true
            },
            {
              "name": "DefaultTargetWorkerCriteria",
              "type": "map[string]interface{}",
              "tags": "json:\"default_target_worker_criteria,omitempty\"",
              "exported": true
            },
            {
              "name": "DefaultPayloadSchema",
              "type": "map[string]interface{}",
              "tags": "json:\"default_payload_schema,omitempty\"",
              "exported": true
            },
            {
              "name": "DefaultDataSourceRefs",
              "type": "[]string",
              "tags": "json:\"default_data_source_refs,omitempty\"",
              "exported": true
            },
            {
              "name": "DefaultPriority",
              "type": "int",
              "tags": "json:\"default_priority,omitempty\"",
              "exported": true
            },
            {
              "name": "DefaultSupervisoryAIRef",
              "type": "string",
              "tags": "json:\"default_supervisory_ai_ref,omitempty\"",
              "exported": true
            },
            {
              "name": "Metadata",
              "type": "map[string]interface{}",
              "tags": "json:\"metadata,omitempty\"",
              "exported": true
            },
            {
              "name": "CreatedTimestamp",
              "type": "time.Time",
              "tags": "json:\"created_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "ModifiedTimestamp",
              "type": "time.Time",
              "tags": "json:\"modified_timestamp,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "WorkItem",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "TaskID",
              "type": "string",
              "tags": "json:\"task_id\"",
              "exported": true
            },
            {
              "name": "WorkItemDefinitionName",
              "type": "string",
              "tags": "json:\"work_item_definition_name,omitempty\"",
              "exported": true
            },
            {
              "name": "QueueName",
              "type": "string",
              "tags": "json:\"queue_name\"",
              "exported": true
            },
            {
              "name": "TargetWorkerCriteria",
              "type": "map[string]interface{}",
              "tags": "json:\"target_worker_criteria,omitempty\"",
              "exported": true
            },
            {
              "name": "Payload",
              "type": "map[string]interface{}",
              "tags": "json:\"payload\"",
              "exported": true
            },
            {
              "name": "DataSourceRefs",
              "type": "[]string",
              "tags": "json:\"data_source_refs,omitempty\"",
              "exported": true
            },
            {
              "name": "Priority",
              "type": "int",
              "tags": "json:\"priority,omitempty\"",
              "exported": true
            },
            {
              "name": "Status",
              "type": "WorkItemStatus",
              "tags": "json:\"status,omitempty\"",
              "exported": true
            },
            {
              "name": "SubmitTimestamp",
              "type": "time.Time",
              "tags": "json:\"submit_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "StartTimestamp",
              "type": "time.Time",
              "tags": "json:\"start_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "EndTimestamp",
              "type": "time.Time",
              "tags": "json:\"end_timestamp,omitempty\"",
              "exported": true
            },
            {
              "name": "RetryCount",
              "type": "int",
              "tags": "json:\"retry_count,omitempty\"",
              "exported": true
            },
            {
              "name": "Result",
              "type": "interface{}",
              "tags": "json:\"result,omitempty\"",
              "exported": true
            },
            {
              "name": "Error",
              "type": "string",
              "tags": "json:\"error,omitempty\"",
              "exported": true
            },
            {
              "name": "PerformanceRecordID",
              "type": "string",
              "tags": "json:\"performance_record_id,omitempty\"",
              "exported": true
            },
            {
              "name": "SupervisoryAIRef",
              "type": "string",
              "tags": "json:\"supervisory_ai_ref,omitempty\"",
              "exported": true
            },
            {
              "name": "Metadata",
              "type": "map[string]interface{}",
              "tags": "json:\"metadata,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "LLMCallMetrics",
          "sourceFile": "ai_worker_types.go",
          "fields": [
            {
              "name": "InputTokens",
              "type": "int64",
              "tags": "json:\"input_tokens\"",
              "exported": true
            },
            {
              "name": "OutputTokens",
              "type": "int64",
              "tags": "json:\"output_tokens\"",
              "exported": true
            },
            {
              "name": "TotalTokens",
              "type": "int64",
              "tags": "json:\"total_tokens\"",
              "exported": true
            },
            {
              "name": "FinishReason",
              "type": "string",
              "tags": "json:\"finish_reason,omitempty\"",
              "exported": true
            },
            {
              "name": "ModelUsed",
              "type": "string",
              "tags": "json:\"model_used,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "Position",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Line",
              "type": "int",
              "exported": true
            },
            {
              "name": "Column",
              "type": "int",
              "exported": true
            },
            {
              "name": "File",
              "type": "string",
              "exported": true
            }
          ]
        },
        {
          "name": "Program",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Metadata",
              "type": "map[string]string",
              "exported": true
            },
            {
              "name": "Procedures",
              "type": "map[string]*Procedure",
              "exported": true
            },
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            }
          ]
        },
        {
          "name": "ErrorNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Message",
              "type": "string",
              "exported": true
            }
          ]
        },
        {
          "name": "CallTarget",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "IsTool",
              "type": "bool",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "exported": true
            }
          ]
        },
        {
          "name": "CallableExprNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Target",
              "type": "CallTarget",
              "exported": true
            },
            {
              "name": "Arguments",
              "type": "[]Expression",
              "exported": true
            }
          ]
        },
        {
          "name": "VariableNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "exported": true
            }
          ]
        },
        {
          "name": "PlaceholderNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "exported": true
            }
          ]
        },
        {
          "name": "LastNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            }
          ]
        },
        {
          "name": "EvalNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Argument",
              "type": "Expression",
              "exported": true
            }
          ]
        },
        {
          "name": "StringLiteralNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Value",
              "type": "string",
              "exported": true
            },
            {
              "name": "IsRaw",
              "type": "bool",
              "exported": true
            }
          ]
        },
        {
          "name": "NumberLiteralNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Value",
              "type": "interface{}",
              "exported": true
            }
          ]
        },
        {
          "name": "BooleanLiteralNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Value",
              "type": "bool",
              "exported": true
            }
          ]
        },
        {
          "name": "ListLiteralNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Elements",
              "type": "[]Expression",
              "exported": true
            }
          ]
        },
        {
          "name": "MapEntryNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Key",
              "type": "*StringLiteralNode",
              "exported": true
            },
            {
              "name": "Value",
              "type": "Expression",
              "exported": true
            }
          ]
        },
        {
          "name": "MapLiteralNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Entries",
              "type": "[]*MapEntryNode",
              "exported": true
            }
          ]
        },
        {
          "name": "ElementAccessNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Collection",
              "type": "Expression",
              "exported": true
            },
            {
              "name": "Accessor",
              "type": "Expression",
              "exported": true
            }
          ]
        },
        {
          "name": "UnaryOpNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Operator",
              "type": "string",
              "exported": true
            },
            {
              "name": "Operand",
              "type": "Expression",
              "exported": true
            }
          ]
        },
        {
          "name": "BinaryOpNode",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Left",
              "type": "Expression",
              "exported": true
            },
            {
              "name": "Operator",
              "type": "string",
              "exported": true
            },
            {
              "name": "Right",
              "type": "Expression",
              "exported": true
            }
          ]
        },
        {
          "name": "ParamSpec",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "exported": true
            },
            {
              "name": "DefaultValue",
              "type": "interface{}",
              "exported": true
            }
          ]
        },
        {
          "name": "Procedure",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "exported": true
            },
            {
              "name": "RequiredParams",
              "type": "[]string",
              "exported": true
            },
            {
              "name": "OptionalParams",
              "type": "[]ParamSpec",
              "exported": true
            },
            {
              "name": "Variadic",
              "type": "bool",
              "exported": true
            },
            {
              "name": "VariadicParamName",
              "type": "string",
              "exported": true
            },
            {
              "name": "ReturnVarNames",
              "type": "[]string",
              "exported": true
            },
            {
              "name": "Steps",
              "type": "[]Step",
              "exported": true
            },
            {
              "name": "OriginalSignature",
              "type": "string",
              "exported": true
            },
            {
              "name": "Metadata",
              "type": "map[string]string",
              "exported": true
            }
          ]
        },
        {
          "name": "Step",
          "sourceFile": "ast.go",
          "fields": [
            {
              "name": "Pos",
              "type": "*Position",
              "exported": true
            },
            {
              "name": "Type",
              "type": "string",
              "exported": true
            },
            {
              "name": "Target",
              "type": "string",
              "exported": true
            },
            {
              "name": "Cond",
              "type": "Expression",
              "exported": true
            },
            {
              "name": "Value",
              "type": "Expression",
              "exported": true
            },
            {
              "name": "Values",
              "type": "[]Expression",
              "exported": true
            },
            {
              "name": "Body",
              "type": "[]Step",
              "exported": true
            },
            {
              "name": "Else",
              "type": "[]Step",
              "exported": true
            },
            {
              "name": "Call",
              "type": "*CallableExprNode",
              "exported": true
            }
          ]
        },
        {
          "name": "ASTBuilder",
          "sourceFile": "ast_builder_main.go"
        },
        {
          "name": "ConversationManager",
          "sourceFile": "conversation.go",
          "fields": [
            {
              "name": "History",
              "type": "[]*genai.Content",
              "exported": true
            }
          ]
        },
        {
          "name": "RuntimeError",
          "sourceFile": "errors.go",
          "fields": [
            {
              "name": "Code",
              "type": "ErrorCode",
              "exported": true
            },
            {
              "name": "Message",
              "type": "string",
              "exported": true
            },
            {
              "name": "Wrapped",
              "type": "error",
              "exported": true
            }
          ]
        },
        {
          "name": "TestLogger",
          "sourceFile": "helpers.go"
        },
        {
          "name": "Interpreter",
          "sourceFile": "interpreter.go",
          "fields": [
            {
              "name": "LibPaths",
              "type": "[]string",
              "exported": true
            }
          ]
        },
        {
          "name": "ConversationTurn",
          "sourceFile": "llm_types.go",
          "fields": [
            {
              "name": "Role",
              "type": "Role",
              "tags": "json:\"role\"",
              "exported": true
            },
            {
              "name": "Content",
              "type": "string",
              "tags": "json:\"content\"",
              "exported": true
            },
            {
              "name": "ToolCalls",
              "type": "[]*ToolCall",
              "tags": "json:\"tool_calls,omitempty\"",
              "exported": true
            },
            {
              "name": "ToolResults",
              "type": "[]*ToolResult",
              "tags": "json:\"tool_results,omitempty\"",
              "exported": true
            },
            {
              "name": "TokenUsage",
              "type": "TokenUsageMetrics",
              "tags": "json:\"token_usage,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "ToolCall",
          "sourceFile": "llm_types.go",
          "fields": [
            {
              "name": "ID",
              "type": "string",
              "tags": "json:\"id\"",
              "exported": true
            },
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "Arguments",
              "type": "map[string]any",
              "tags": "json:\"arguments\"",
              "exported": true
            }
          ]
        },
        {
          "name": "ToolResult",
          "sourceFile": "llm_types.go",
          "fields": [
            {
              "name": "ID",
              "type": "string",
              "tags": "json:\"id\"",
              "exported": true
            },
            {
              "name": "Result",
              "type": "any",
              "tags": "json:\"result\"",
              "exported": true
            },
            {
              "name": "Error",
              "type": "string",
              "tags": "json:\"error,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "ToolDefinition",
          "sourceFile": "llm_types.go",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "Description",
              "type": "string",
              "tags": "json:\"description,omitempty\"",
              "exported": true
            },
            {
              "name": "InputSchema",
              "type": "any",
              "tags": "json:\"input_schema\"",
              "exported": true
            }
          ]
        },
        {
          "name": "StructuredSyntaxError",
          "sourceFile": "parser_api.go",
          "fields": [
            {
              "name": "Line",
              "type": "int",
              "exported": true
            },
            {
              "name": "Column",
              "type": "int",
              "exported": true
            },
            {
              "name": "OffendingSymbol",
              "type": "string",
              "exported": true
            },
            {
              "name": "Msg",
              "type": "string",
              "exported": true
            },
            {
              "name": "SourceName",
              "type": "string",
              "exported": true
            }
          ]
        },
        {
          "name": "ParserAPI",
          "sourceFile": "parser_api.go"
        },
        {
          "name": "ErrorListener",
          "sourceFile": "parser_api.go",
          "fields": [
            {
              "name": "DefaultErrorListener",
              "type": "*antlr.DefaultErrorListener",
              "exported": true
            },
            {
              "name": "RawErrors",
              "type": "[]string",
              "exported": true
            },
            {
              "name": "StructuredErrors",
              "type": "[]StructuredSyntaxError",
              "exported": true
            }
          ]
        },
        {
          "name": "SecurityLayer",
          "sourceFile": "security.go"
        },
        {
          "name": "LocalFileInfo",
          "sourceFile": "sync_types.go",
          "fields": [
            {
              "name": "RelPath",
              "type": "string",
              "exported": true
            },
            {
              "name": "AbsPath",
              "type": "string",
              "exported": true
            },
            {
              "name": "Hash",
              "type": "string",
              "exported": true
            }
          ]
        },
        {
          "name": "SyncActions",
          "sourceFile": "sync_types.go",
          "fields": [
            {
              "name": "FilesToUpload",
              "type": "[]LocalFileInfo",
              "exported": true
            },
            {
              "name": "FilesToUpdate",
              "type": "[]uploadJob",
              "exported": true
            },
            {
              "name": "FilesToDelete",
              "type": "[]*genai.File",
              "exported": true
            }
          ]
        },
        {
          "name": "EvalTestCase",
          "sourceFile": "testing_helpers.go",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "exported": true
            },
            {
              "name": "InputNode",
              "type": "interface{}",
              "exported": true
            },
            {
              "name": "InitialVars",
              "type": "map[string]interface{}",
              "exported": true
            },
            {
              "name": "LastResult",
              "type": "interface{}",
              "exported": true
            },
            {
              "name": "Expected",
              "type": "interface{}",
              "exported": true
            },
            {
              "name": "WantErr",
              "type": "bool",
              "exported": true
            },
            {
              "name": "ExpectedErrorIs",
              "type": "error",
              "exported": true
            }
          ]
        },
        {
          "name": "FileAPI",
          "sourceFile": "tools_file_api.go"
        },
        {
          "name": "ToolRegistryImpl",
          "sourceFile": "tools_registry.go"
        },
        {
          "name": "ArgSpec",
          "sourceFile": "tools_types.go",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "Type",
              "type": "ArgType",
              "tags": "json:\"type\"",
              "exported": true
            },
            {
              "name": "Description",
              "type": "string",
              "tags": "json:\"description\"",
              "exported": true
            },
            {
              "name": "Required",
              "type": "bool",
              "tags": "json:\"required\"",
              "exported": true
            },
            {
              "name": "DefaultValue",
              "type": "interface{}",
              "tags": "json:\"defaultValue,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "ToolSpec",
          "sourceFile": "tools_types.go",
          "fields": [
            {
              "name": "Name",
              "type": "string",
              "tags": "json:\"name\"",
              "exported": true
            },
            {
              "name": "Description",
              "type": "string",
              "tags": "json:\"description\"",
              "exported": true
            },
            {
              "name": "Category",
              "type": "string",
              "tags": "json:\"category,omitempty\"",
              "exported": true
            },
            {
              "name": "Args",
              "type": "[]ArgSpec",
              "tags": "json:\"args,omitempty\"",
              "exported": true
            },
            {
              "name": "ReturnType",
              "type": "ArgType",
              "tags": "json:\"returnType\"",
              "exported": true
            },
            {
              "name": "ReturnHelp",
              "type": "string",
              "tags": "json:\"returnHelp,omitempty\"",
              "exported": true
            },
            {
              "name": "Variadic",
              "type": "bool",
              "tags": "json:\"variadic,omitempty\"",
              "exported": true
            },
            {
              "name": "Example",
              "type": "string",
              "tags": "json:\"example,omitempty\"",
              "exported": true
            },
            {
              "name": "ErrorConditions",
              "type": "string",
              "tags": "json:\"errorConditions,omitempty\"",
              "exported": true
            }
          ]
        },
        {
          "name": "ToolImplementation",
          "sourceFile": "tools_types.go",
          "fields": [
            {
              "name": "Spec",
              "type": "ToolSpec",
              "exported": true
            },
            {
              "name": "Func",
              "type": "ToolFunc",
              "exported": true
            }
          ]
        },
        {
          "name": "SearchResult",
          "sourceFile": "tools_vector.go",
          "fields": [
            {
              "name": "Path",
              "type": "string",
              "tags": "json:\"path\"",
              "exported": true
            },
            {
              "name": "Score",
              "type": "float64",
              "tags": "json:\"score\"",
              "exported": true
            }
          ]
        },
        {
          "name": "GenericTreeNode",
          "sourceFile": "tree_types.go",
          "fields": [
            {
              "name": "ID",
              "type": "string",
              "tags": "json:\"id\"",
              "exported": true
            },
            {
              "name": "Type",
              "type": "string",
              "tags": "json:\"type\"",
              "exported": true
            },
            {
              "name": "Value",
              "type": "interface{}",
              "tags": "json:\"value\"",
              "exported": true
            },
            {
              "name": "Attributes",
              "type": "map[string]string",
              "tags": "json:\"attributes\"",
              "exported": true
            },
            {
              "name": "ChildIDs",
              "type": "[]string",
              "tags": "json:\"children\"",
              "exported": true
            },
            {
              "name": "ParentID",
              "type": "string",
              "tags": "json:\"-\"",
              "exported": true
            },
            {
              "name": "ParentAttributeKey",
              "type": "string",
              "tags": "json:\"-\"",
              "exported": true
            },
            {
              "name": "Tree",
              "type": "*GenericTree",
              "tags": "json:\"-\"",
              "exported": true
            }
          ]
        },
        {
          "name": "GenericTree",
          "sourceFile": "tree_types.go",
          "fields": [
            {
              "name": "RootID",
              "type": "string",
              "tags": "json:\"rootId\"",
              "exported": true
            },
            {
              "name": "NodeMap",
              "type": "map[string]*GenericTreeNode",
              "tags": "json:\"-\"",
              "exported": true
            }
          ]
        }
      ],
      "interfaces": [
        {
          "name": "Expression",
          "sourceFile": "ast.go",
          "methods": [
            {
              "name": "GetPos",
              "sourceFile": "ast.go",
              "returns": [
                "*Position"
              ]
            },
            {
              "name": "expressionNode",
              "sourceFile": "ast.go"
            }
          ]
        },
        {
          "name": "LLMClient",
          "sourceFile": "llm_types.go",
          "methods": [
            {
              "name": "Ask",
              "sourceFile": "llm_types.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "context.Context"
                },
                {
                  "name": "turns",
                  "type": "[]*ConversationTurn"
                }
              ],
              "returns": [
                "*ConversationTurn",
                "error"
              ]
            },
            {
              "name": "AskWithTools",
              "sourceFile": "llm_types.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "context.Context"
                },
                {
                  "name": "turns",
                  "type": "[]*ConversationTurn"
                },
                {
                  "name": "tools",
                  "type": "[]ToolDefinition"
                }
              ],
              "returns": [
                "*ConversationTurn",
                "[]*ToolCall",
                "error"
              ]
            },
            {
              "name": "Embed",
              "sourceFile": "llm_types.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "context.Context"
                },
                {
                  "name": "text",
                  "type": "string"
                }
              ],
              "returns": [
                "[]float32",
                "error"
              ]
            },
            {
              "name": "Client",
              "sourceFile": "llm_types.go",
              "returns": [
                "*genai.Client"
              ]
            }
          ]
        },
        {
          "name": "ToolRegistrar",
          "sourceFile": "tools_types.go",
          "methods": [
            {
              "name": "RegisterTool",
              "sourceFile": "tools_types.go",
              "parameters": [
                {
                  "name": "impl",
                  "type": "ToolImplementation"
                }
              ],
              "returns": [
                "error"
              ]
            }
          ]
        },
        {
          "name": "ToolRegistry",
          "sourceFile": "tools_types.go",
          "methods": [
            {
              "name": "ToolRegistrar",
              "sourceFile": "tools_types.go"
            },
            {
              "name": "GetTool",
              "sourceFile": "tools_types.go",
              "parameters": [
                {
                  "name": "name",
                  "type": "string"
                }
              ],
              "returns": [
                "ToolImplementation",
                "bool"
              ]
            },
            {
              "name": "ListTools",
              "sourceFile": "tools_types.go",
              "returns": [
                "[]ToolSpec"
              ]
            },
            {
              "name": "ExecuteTool",
              "sourceFile": "tools_types.go",
              "parameters": [
                {
                  "name": "toolName",
                  "type": "string"
                },
                {
                  "name": "args",
                  "type": "map[string]interface{}"
                }
              ],
              "returns": [
                "interface{}",
                "error"
              ]
            }
          ]
        }
      ],
      "globalVars": [
        {
          "name": "ErrConfiguration",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrValidationRequiredArgNil",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrValidationRequiredArgMissing",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrValidationTypeMismatch",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrValidationArgCount",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrValidationArgValue",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrMissingArgument",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidArgument",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidInput",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrNullByteInArgument",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrIncorrectArgCount",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrValidationRequired",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrToolDenied",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrToolNotAllowed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrToolBlocked",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrSecurityViolation",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrPathViolation",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInternalSecurity",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidPath",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrHandleInvalid",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrHandleNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrHandleWrongType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInternalTool",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrFailedPrecondition",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrRateLimited",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrNotImplemented",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrToolExecutionFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrFileNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrPathNotFile",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrPathNotDirectory",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrPathExists",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrPermissionDenied",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrIOFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCannotCreateDir",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCannotDelete",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrSkippedBinaryFile",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrTreeConstraintViolation",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrNodeWrongType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrAttributeNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrTreeJSONUnmarshal",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrTreeJSONMarshal",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrTreeInvalidQuery",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCannotSetValueOnType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrTreeNodeNotObject",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrNodeIDExists",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCannotRemoveRoot",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrListIndexOutOfBounds",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrListCannotSortMixedTypes",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrListInvalidIndexType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrListInvalidAccessorType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrMapKeyNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCannotAccessType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCollectionIsNil",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrAccessorIsNil",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoParseFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoModifyFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoFormatFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoModifyInvalidDirectiveValue",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoModifyMissingMapKey",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoModifyEmptyMap",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoModifyUnknownDirective",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrGoInvalidIdentifierFormat",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrRefactoredPathNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrSymbolMappingFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrAmbiguousSymbol",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidHashAlgorithm",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCacheObjectNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrCacheObjectWrongType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidOperandType",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidOperandTypeNumeric",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidOperandTypeInteger",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidOperandTypeString",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidOperandTypeBool",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInvalidFunctionArgument",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrVariableNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrUnsupportedOperator",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrNilOperand",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrUnknownFunction",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrTypeAssertionFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrProcedureNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrArgumentMismatch",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrReturnMismatch",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrProcedureExists",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrMaxCallDepthExceeded",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrUnknownKeyword",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrUnhandledException",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrFailStatement",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrInternal",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrReadOnlyViolation",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrUnsupportedSyntax",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrClearViolation",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrReturnViolation",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrToolNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrLLMError",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrLLMNotConfigured",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrDivisionByZero",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrMustConditionFailed",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrAuthDetailsMissing",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrAPIKeyNotFound",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrFeatureNotImplemented",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrBreak",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ErrContinue",
          "type": "",
          "sourceFile": "errors.go"
        },
        {
          "name": "ArgTypeList",
          "type": "",
          "sourceFile": "tools_types.go"
        }
      ],
      "globalConsts": [
        {
          "name": "AIWorkerDefinitions_Default",
          "type": "string",
          "sourceFile": "ai_wm_default_wdefs.go",
          "value": "`\n[\n  {\n    \"name\": \"gem1.5\",\n    \"provider\": \"google\",\n    \"model_name\": \"gemini-1.5-pro-latest\",\n    \"auth\": {\n      \"method\": \"env_var\",\n      \"value\": \"GOOGLE_API_KEY\"\n    },\n    \"interaction_models\": [\"conversational\", \"stateless_task\"],\n    \"capabilities\": [\"general\", \"text_generation\", \"reasoning\"],\n    \"base_config\": {\n      \"temperature\": 0.7,\n      \"top_p\": 0.9\n    },\n    \"status\": \"active\",\n    \"metadata\": {\n      \"description\": \"Default Google Gemini 1.5 Pro model.\"\n    }\n  },\n  {\n    \"name\": \"gpt4o\",\n    \"provider\": \"openai\",\n    \"model_name\": \"gpt-4o\",\n    \"auth\": {\n      \"method\": \"env_var\",\n      \"value\": \"OPENAI_API_KEY\"\n    },\n    \"interaction_models\": [\"conversational\", \"stateless_task\"],\n    \"capabilities\": [\"general\", \"text_generation\", \"code_generation\", \"reasoning\"],\n    \"base_config\": {\n      \"temperature\": 0.7\n    },\n    \"status\": \"active\",\n    \"metadata\": {\n      \"description\": \"Default OpenAI GPT-4o model.\"\n    }\n  },\n  {\n    \"name\": \"ll3-loc\",\n    \"provider\": \"ollama\",\n    \"model_name\": \"llama3:latest\",\n    \"auth\": {\n      \"method\": \"none\"\n    },\n    \"interaction_models\": [\"conversational\", \"stateless_task\"],\n    \"capabilities\": [\"general\", \"text_generation\", \"local_execution\"],\n    \"base_config\": {\n      \"temperature\": 0.6,\n      \"num_ctx\": 4096\n    },\n    \"status\": \"active\",\n    \"metadata\": {\n      \"description\": \"Local Llama3 model via Ollama. Ensure Ollama server is running and model is pulled.\"\n    }\n  },\n  {\n    \"name\": \"jun-dev\",\n    \"provider\": \"google\",\n    \"model_name\": \"gemini-1.5-pro-latest\",\n    \"auth\": {\n      \"method\": \"env_var\",\n      \"value\": \"GOOGLE_API_KEY\"\n    },\n    \"interaction_models\": [\"stateless_task\"],\n    \"capabilities\": [\"go_code_generation\", \"code_analysis\", \"code_completion\"],\n    \"base_config\": {\n      \"temperature\": 0.3,\n      \"top_p\": 0.8,\n      \"candidate_count\": 1\n    },\n    \"status\": \"active\",\n    \"tool_allowlist\": [\n      \"tool.ReadFile\",\n      \"tool.WriteFile\",\n      \"tool.ListDirectory\",\n      \"tool.Gopls.GetDiagnostics\", \n      \"tool.Gopls.NotifyDidChange\"\n    ],\n    \"metadata\": {\n      \"description\": \"A Gemini-based worker specialized for Go coding tasks, with a restricted toolset.\"\n    }\n  }\n]\n`"
        },
        {
          "name": "InteractionModelConversational",
          "type": "InteractionModelType",
          "sourceFile": "ai_worker_types.go",
          "value": "\"conversational\""
        },
        {
          "name": "InteractionModelStateless",
          "type": "InteractionModelType",
          "sourceFile": "ai_worker_types.go",
          "value": "\"stateless_task\""
        },
        {
          "name": "InteractionModelBoth",
          "type": "InteractionModelType",
          "sourceFile": "ai_worker_types.go",
          "value": "\"both\""
        },
        {
          "name": "APIKeyMethodEnvVar",
          "type": "APIKeySourceMethod",
          "sourceFile": "ai_worker_types.go",
          "value": "\"env_var\""
        },
        {
          "name": "APIKeyMethodInline",
          "type": "APIKeySourceMethod",
          "sourceFile": "ai_worker_types.go",
          "value": "\"inline\""
        },
        {
          "name": "APIKeyMethodConfigPath",
          "type": "APIKeySourceMethod",
          "sourceFile": "ai_worker_types.go",
          "value": "\"config_path\""
        },
        {
          "name": "APIKeyMethodVault",
          "type": "APIKeySourceMethod",
          "sourceFile": "ai_worker_types.go",
          "value": "\"vault\""
        },
        {
          "name": "APIKeyMethodNone",
          "type": "APIKeySourceMethod",
          "sourceFile": "ai_worker_types.go",
          "value": "\"none\""
        },
        {
          "name": "ProviderGoogle",
          "type": "AIWorkerProvider",
          "sourceFile": "ai_worker_types.go",
          "value": "\"google\""
        },
        {
          "name": "ProviderOpenAI",
          "type": "AIWorkerProvider",
          "sourceFile": "ai_worker_types.go",
          "value": "\"openai\""
        },
        {
          "name": "ProviderAnthropic",
          "type": "AIWorkerProvider",
          "sourceFile": "ai_worker_types.go",
          "value": "\"anthropic\""
        },
        {
          "name": "ProviderOllama",
          "type": "AIWorkerProvider",
          "sourceFile": "ai_worker_types.go",
          "value": "\"ollama\""
        },
        {
          "name": "ProviderLocal",
          "type": "AIWorkerProvider",
          "sourceFile": "ai_worker_types.go",
          "value": "\"local\""
        },
        {
          "name": "ProviderCustom",
          "type": "AIWorkerProvider",
          "sourceFile": "ai_worker_types.go",
          "value": "\"custom\""
        },
        {
          "name": "DefinitionStatusActive",
          "type": "AIWorkerDefinitionStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"active\""
        },
        {
          "name": "DefinitionStatusDisabled",
          "type": "AIWorkerDefinitionStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"disabled\""
        },
        {
          "name": "DefinitionStatusArchived",
          "type": "AIWorkerDefinitionStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"archived\""
        },
        {
          "name": "InstanceStatusInitializing",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"initializing\""
        },
        {
          "name": "InstanceStatusIdle",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"idle\""
        },
        {
          "name": "InstanceStatusBusy",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"busy\""
        },
        {
          "name": "InstanceStatusContextFull",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"context_full\""
        },
        {
          "name": "InstanceStatusRateLimited",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"rate_limited\""
        },
        {
          "name": "InstanceStatusTokenLimitReached",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"token_limit_reached\""
        },
        {
          "name": "InstanceStatusRetiredCompleted",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"retired_completed\""
        },
        {
          "name": "InstanceStatusRetiredExhausted",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"retired_exhausted\""
        },
        {
          "name": "InstanceStatusRetiredError",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"retired_error\""
        },
        {
          "name": "InstanceStatusError",
          "type": "AIWorkerInstanceStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"error\""
        },
        {
          "name": "APIKeyStatusUnknown",
          "type": "APIKeyStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"Unknown\""
        },
        {
          "name": "APIKeyStatusFound",
          "type": "APIKeyStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"Found\""
        },
        {
          "name": "APIKeyStatusNotFound",
          "type": "APIKeyStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"Not Found\""
        },
        {
          "name": "APIKeyStatusNotConfigured",
          "type": "APIKeyStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"Not Configured\""
        },
        {
          "name": "APIKeyStatusError",
          "type": "APIKeyStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"Error Resolving\""
        },
        {
          "name": "DataSourceTypeLocalDirectory",
          "type": "DataSourceType",
          "sourceFile": "ai_worker_types.go",
          "value": "\"local_directory\""
        },
        {
          "name": "DataSourceTypeFileAPI",
          "type": "DataSourceType",
          "sourceFile": "ai_worker_types.go",
          "value": "\"file_api\""
        },
        {
          "name": "WorkItemStatusPending",
          "type": "WorkItemStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"pending\""
        },
        {
          "name": "WorkItemStatusProcessing",
          "type": "WorkItemStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"processing\""
        },
        {
          "name": "WorkItemStatusCompleted",
          "type": "WorkItemStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"completed\""
        },
        {
          "name": "WorkItemStatusFailed",
          "type": "WorkItemStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"failed\""
        },
        {
          "name": "WorkItemStatusRetrying",
          "type": "WorkItemStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"retrying\""
        },
        {
          "name": "WorkItemStatusCancelled",
          "type": "WorkItemStatus",
          "sourceFile": "ai_worker_types.go",
          "value": "\"cancelled\""
        },
        {
          "name": "ErrorCodeGeneric",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "0"
        },
        {
          "name": "ErrorCodeFailStatement",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "1"
        },
        {
          "name": "ErrorCodeProcNotFound",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "2"
        },
        {
          "name": "ErrorCodeToolNotFound",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "3"
        },
        {
          "name": "ErrorCodeArgMismatch",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "4"
        },
        {
          "name": "ErrorCodeMustFailed",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "5"
        },
        {
          "name": "ErrorCodeInternal",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "6"
        },
        {
          "name": "ErrorCodeType",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "7"
        },
        {
          "name": "ErrorCodeBounds",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "8"
        },
        {
          "name": "ErrorCodeKeyNotFound",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "9"
        },
        {
          "name": "ErrorCodeSecurity",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "10"
        },
        {
          "name": "ErrorCodeReadOnly",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "11"
        },
        {
          "name": "ErrorCodeReturnViolation",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "12"
        },
        {
          "name": "ErrorCodeClearViolation",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "13"
        },
        {
          "name": "ErrorCodeDivisionByZero",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "14"
        },
        {
          "name": "ErrorCodeSyntax",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "15"
        },
        {
          "name": "ErrorCodeLLMError",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "16"
        },
        {
          "name": "ErrorCodeEvaluation",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "17"
        },
        {
          "name": "ErrorCodeConfiguration",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "18"
        },
        {
          "name": "ErrorCodePreconditionFailed",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "19"
        },
        {
          "name": "ErrorCodeRateLimited",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "20"
        },
        {
          "name": "ErrorCodeToolExecutionFailed",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "21"
        },
        {
          "name": "ErrorCodeNotImplemented",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "30"
        },
        {
          "name": "ErrorCodeFileNotFound",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "22"
        },
        {
          "name": "ErrorCodePathTypeMismatch",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "23"
        },
        {
          "name": "ErrorCodePathExists",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "24"
        },
        {
          "name": "ErrorCodePermissionDenied",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "25"
        },
        {
          "name": "ErrorCodeIOFailed",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "26"
        },
        {
          "name": "ErrorCodeTreeConstraintViolation",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "27"
        },
        {
          "name": "ErrorCodeNodeWrongType",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "28"
        },
        {
          "name": "ErrorCodeAttributeNotFound",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "29"
        },
        {
          "name": "ErrorCodeToolSpecific",
          "type": "ErrorCode",
          "sourceFile": "errors.go",
          "value": "1000"
        },
        {
          "name": "RoleSystem",
          "type": "Role",
          "sourceFile": "llm_types.go",
          "value": "\"system\""
        },
        {
          "name": "RoleUser",
          "type": "Role",
          "sourceFile": "llm_types.go",
          "value": "\"user\""
        },
        {
          "name": "RoleAssistant",
          "type": "Role",
          "sourceFile": "llm_types.go",
          "value": "\"assistant\""
        },
        {
          "name": "RoleTool",
          "type": "Role",
          "sourceFile": "llm_types.go",
          "value": "\"tool\""
        },
        {
          "name": "ArgTypeAny",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"any\""
        },
        {
          "name": "ArgTypeString",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"string\""
        },
        {
          "name": "ArgTypeInt",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"int\""
        },
        {
          "name": "ArgTypeFloat",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"float\""
        },
        {
          "name": "ArgTypeBool",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"bool\""
        },
        {
          "name": "ArgTypeMap",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"map\""
        },
        {
          "name": "ArgTypeSlice",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"slice\""
        },
        {
          "name": "ArgTypeSliceString",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"slice_string\""
        },
        {
          "name": "ArgTypeSliceInt",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"slice_int\""
        },
        {
          "name": "ArgTypeSliceFloat",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"slice_float\""
        },
        {
          "name": "ArgTypeSliceBool",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"slice_bool\""
        },
        {
          "name": "ArgTypeSliceMap",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"slice_map\""
        },
        {
          "name": "ArgTypeSliceAny",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"slice_any\""
        },
        {
          "name": "ArgTypeNil",
          "type": "ArgType",
          "sourceFile": "tools_types.go",
          "value": "\"nil\""
        },
        {
          "name": "ToolPrefix",
          "type": "",
          "sourceFile": "tools_types.go",
          "value": "\"TOOL.\""
        },
        {
          "name": "GenericTreeHandleType",
          "type": "",
          "sourceFile": "tree_types.go",
          "value": "\"GenericTree\""
        },
        {
          "name": "NormTrimSpace",
          "type": "NormalizationFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "NormCompressSpace",
          "type": "NormalizationFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "NormRemoveGoComments",
          "type": "NormalizationFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "NormRemoveNSComments",
          "type": "NormalizationFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "NormRemoveBlankLines",
          "type": "NormalizationFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "NormSpaceAroundTokens",
          "type": "NormalizationFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "NormDefault",
          "type": "NormalizationFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "DefaultNormalization",
          "type": "",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "DiffShowFull",
          "type": "DiffFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "DiffAnsiColor",
          "type": "DiffFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "DiffNoContext",
          "type": "DiffFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "DiffVisibleSpace",
          "type": "DiffFlags",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        },
        {
          "name": "DefaultDiff",
          "type": "",
          "sourceFile": "universal_test_helpers.go",
          "value": ""
        }
      ],
      "typeAliases": [
        {
          "name": "InteractionModelType",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "APIKeySourceMethod",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "AIWorkerProvider",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "AIWorkerDefinitionStatus",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "AIWorkerInstanceStatus",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "APIKeyStatus",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "DataSourceType",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "WorkItemStatus",
          "underlyingType": "string",
          "sourceFile": "ai_worker_types.go"
        },
        {
          "name": "ErrorCode",
          "underlyingType": "int",
          "sourceFile": "errors.go"
        },
        {
          "name": "Role",
          "underlyingType": "string",
          "sourceFile": "llm_types.go"
        },
        {
          "name": "ArgType",
          "underlyingType": "string",
          "sourceFile": "tools_types.go"
        },
        {
          "name": "ToolFunc",
          "underlyingType": "func(interpreter *Interpreter, args []interface{}) (interface{}, error)",
          "sourceFile": "tools_types.go"
        },
        {
          "name": "NormalizationFlags",
          "underlyingType": "uint32",
          "sourceFile": "universal_test_helpers.go"
        },
        {
          "name": "DiffFlags",
          "underlyingType": "uint32",
          "sourceFile": "universal_test_helpers.go"
        }
      ]
    },
    "github.com/aprice2704/neuroscript/pkg/core/generated": {
      "packagePath": "github.com/aprice2704/neuroscript/pkg/core/generated",
      "packageName": "core",
      "functions": [
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NeuroScriptLexerInit",
          "sourceFile": "generated/neuroscript_lexer.go"
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewNeuroScriptLexer",
          "sourceFile": "generated/neuroscript_lexer.go",
          "parameters": [
            {
              "name": "input",
              "type": "antlr.CharStream"
            }
          ],
          "returns": [
            "*NeuroScriptLexer"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NeuroScriptParserInit",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewNeuroScriptParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "input",
              "type": "antlr.TokenStream"
            }
          ],
          "returns": [
            "*NeuroScriptParser"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyProgramContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*ProgramContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyProgramContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*ProgramContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewProgramContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*ProgramContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyFile_headerContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*File_headerContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyFile_headerContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*File_headerContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewFile_headerContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*File_headerContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyProcedure_definitionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Procedure_definitionContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyProcedure_definitionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Procedure_definitionContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewProcedure_definitionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Procedure_definitionContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptySignature_partContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Signature_partContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptySignature_partContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Signature_partContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewSignature_partContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Signature_partContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyNeeds_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Needs_clauseContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyNeeds_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Needs_clauseContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewNeeds_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Needs_clauseContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyOptional_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Optional_clauseContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyOptional_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Optional_clauseContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewOptional_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Optional_clauseContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyReturns_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Returns_clauseContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyReturns_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Returns_clauseContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewReturns_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Returns_clauseContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyParam_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Param_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyParam_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Param_listContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewParam_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Param_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyMetadata_blockContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Metadata_blockContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyMetadata_blockContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Metadata_blockContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewMetadata_blockContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Metadata_blockContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyStatement_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Statement_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyStatement_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Statement_listContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewStatement_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Statement_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyBody_lineContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Body_lineContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyBody_lineContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Body_lineContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewBody_lineContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Body_lineContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*StatementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*StatementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*StatementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptySimple_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Simple_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptySimple_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Simple_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewSimple_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Simple_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyBlock_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Block_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyBlock_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Block_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewBlock_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Block_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyExpressionStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*ExpressionStatementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyExpressionStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*ExpressionStatementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewExpressionStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*ExpressionStatementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptySet_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Set_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptySet_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Set_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewSet_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Set_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyCall_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Call_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyCall_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Call_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewCall_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Call_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyReturn_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Return_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyReturn_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Return_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewReturn_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Return_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyEmit_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Emit_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyEmit_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Emit_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmit_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Emit_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyMust_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Must_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyMust_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Must_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewMust_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Must_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyFail_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Fail_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyFail_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Fail_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewFail_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Fail_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyClearErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*ClearErrorStmtContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyClearErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*ClearErrorStmtContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewClearErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*ClearErrorStmtContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyAsk_stmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Ask_stmtContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyAsk_stmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Ask_stmtContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewAsk_stmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Ask_stmtContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyBreak_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Break_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyBreak_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Break_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewBreak_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Break_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyContinue_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Continue_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyContinue_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Continue_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewContinue_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Continue_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyIf_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*If_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyIf_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*If_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewIf_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*If_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyWhile_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*While_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyWhile_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*While_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewWhile_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*While_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyFor_each_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*For_each_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyFor_each_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*For_each_statementContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewFor_each_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*For_each_statementContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyOnErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*OnErrorStmtContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyOnErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*OnErrorStmtContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewOnErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*OnErrorStmtContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyQualified_identifierContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Qualified_identifierContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyQualified_identifierContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Qualified_identifierContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewQualified_identifierContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Qualified_identifierContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyCall_targetContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Call_targetContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyCall_targetContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Call_targetContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewCall_targetContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Call_targetContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyExpressionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*ExpressionContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyExpressionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*ExpressionContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewExpressionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*ExpressionContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyLogical_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Logical_or_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyLogical_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Logical_or_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewLogical_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Logical_or_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyLogical_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Logical_and_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyLogical_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Logical_and_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewLogical_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Logical_and_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyBitwise_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Bitwise_or_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyBitwise_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Bitwise_or_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewBitwise_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Bitwise_or_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyBitwise_xor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Bitwise_xor_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyBitwise_xor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Bitwise_xor_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewBitwise_xor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Bitwise_xor_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyBitwise_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Bitwise_and_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyBitwise_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Bitwise_and_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewBitwise_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Bitwise_and_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyEquality_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Equality_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyEquality_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Equality_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEquality_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Equality_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyRelational_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Relational_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyRelational_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Relational_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewRelational_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Relational_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyAdditive_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Additive_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyAdditive_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Additive_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewAdditive_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Additive_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyMultiplicative_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Multiplicative_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyMultiplicative_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Multiplicative_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewMultiplicative_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Multiplicative_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyUnary_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Unary_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyUnary_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Unary_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewUnary_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Unary_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyPower_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Power_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyPower_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Power_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewPower_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Power_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyAccessor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Accessor_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyAccessor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Accessor_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewAccessor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Accessor_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyPrimaryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*PrimaryContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyPrimaryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*PrimaryContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewPrimaryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*PrimaryContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyCallable_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Callable_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyCallable_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Callable_exprContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewCallable_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Callable_exprContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyPlaceholderContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*PlaceholderContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyPlaceholderContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*PlaceholderContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewPlaceholderContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*PlaceholderContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyLiteralContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*LiteralContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyLiteralContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*LiteralContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewLiteralContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*LiteralContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyBoolean_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Boolean_literalContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyBoolean_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Boolean_literalContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewBoolean_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Boolean_literalContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyList_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*List_literalContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyList_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*List_literalContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewList_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*List_literalContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyMap_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Map_literalContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyMap_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Map_literalContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewMap_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Map_literalContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyExpression_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Expression_list_optContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyExpression_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Expression_list_optContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewExpression_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Expression_list_optContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyExpression_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Expression_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyExpression_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Expression_listContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewExpression_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Expression_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyMap_entry_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Map_entry_list_optContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyMap_entry_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Map_entry_list_optContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewMap_entry_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Map_entry_list_optContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyMap_entry_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Map_entry_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyMap_entry_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Map_entry_listContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewMap_entry_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Map_entry_listContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewEmptyMap_entryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "*Map_entryContext"
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.InitEmptyMap_entryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "p",
              "type": "*Map_entryContext"
            }
          ]
        },
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/generated.NewMap_entryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "parser",
              "type": "antlr.Parser"
            },
            {
              "name": "parent",
              "type": "antlr.ParserRuleContext"
            },
            {
              "name": "invokingState",
              "type": "int"
            }
          ],
          "returns": [
            "*Map_entryContext"
          ]
        }
      ],
      "methods": [
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "VisitTerminal",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "node",
              "type": "antlr.TerminalNode"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "VisitErrorNode",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "node",
              "type": "antlr.ErrorNode"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterEveryRule",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "antlr.ParserRuleContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitEveryRule",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "antlr.ParserRuleContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterProgram",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ProgramContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitProgram",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ProgramContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterFile_header",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*File_headerContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitFile_header",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*File_headerContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterProcedure_definition",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Procedure_definitionContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitProcedure_definition",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Procedure_definitionContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterSignature_part",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Signature_partContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitSignature_part",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Signature_partContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterNeeds_clause",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Needs_clauseContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitNeeds_clause",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Needs_clauseContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterOptional_clause",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Optional_clauseContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitOptional_clause",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Optional_clauseContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterReturns_clause",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Returns_clauseContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitReturns_clause",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Returns_clauseContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterParam_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Param_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitParam_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Param_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterMetadata_block",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Metadata_blockContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitMetadata_block",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Metadata_blockContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterStatement_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Statement_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitStatement_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Statement_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterBody_line",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Body_lineContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitBody_line",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Body_lineContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterStatement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*StatementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitStatement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*StatementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterSimple_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Simple_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitSimple_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Simple_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterBlock_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Block_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitBlock_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Block_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterExpressionStatement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ExpressionStatementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitExpressionStatement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ExpressionStatementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterSet_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Set_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitSet_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Set_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterCall_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Call_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitCall_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Call_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterReturn_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Return_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitReturn_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Return_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterEmit_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Emit_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitEmit_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Emit_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterMust_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Must_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitMust_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Must_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterFail_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Fail_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitFail_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Fail_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterClearErrorStmt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ClearErrorStmtContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitClearErrorStmt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ClearErrorStmtContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterAsk_stmt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Ask_stmtContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitAsk_stmt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Ask_stmtContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterBreak_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Break_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitBreak_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Break_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterContinue_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Continue_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitContinue_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Continue_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterIf_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*If_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitIf_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*If_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterWhile_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*While_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitWhile_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*While_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterFor_each_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*For_each_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitFor_each_statement",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*For_each_statementContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterOnErrorStmt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*OnErrorStmtContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitOnErrorStmt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*OnErrorStmtContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterQualified_identifier",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Qualified_identifierContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitQualified_identifier",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Qualified_identifierContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterCall_target",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Call_targetContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitCall_target",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Call_targetContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterExpression",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ExpressionContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitExpression",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ExpressionContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterLogical_or_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Logical_or_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitLogical_or_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Logical_or_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterLogical_and_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Logical_and_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitLogical_and_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Logical_and_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterBitwise_or_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_or_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitBitwise_or_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_or_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterBitwise_xor_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_xor_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitBitwise_xor_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_xor_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterBitwise_and_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_and_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitBitwise_and_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_and_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterEquality_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Equality_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitEquality_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Equality_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterRelational_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Relational_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitRelational_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Relational_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterAdditive_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Additive_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitAdditive_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Additive_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterMultiplicative_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Multiplicative_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitMultiplicative_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Multiplicative_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterUnary_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Unary_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitUnary_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Unary_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterPower_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Power_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitPower_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Power_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterAccessor_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Accessor_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitAccessor_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Accessor_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterPrimary",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*PrimaryContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitPrimary",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*PrimaryContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterCallable_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Callable_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitCallable_expr",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Callable_exprContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterPlaceholder",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*PlaceholderContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitPlaceholder",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*PlaceholderContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterLiteral",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*LiteralContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitLiteral",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*LiteralContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterBoolean_literal",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Boolean_literalContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitBoolean_literal",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Boolean_literalContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterList_literal",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*List_literalContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitList_literal",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*List_literalContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterMap_literal",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_literalContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitMap_literal",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_literalContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterExpression_list_opt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Expression_list_optContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitExpression_list_opt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Expression_list_optContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterExpression_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Expression_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitExpression_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Expression_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterMap_entry_list_opt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entry_list_optContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitMap_entry_list_opt",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entry_list_optContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterMap_entry_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entry_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitMap_entry_list",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entry_listContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "EnterMap_entry",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entryContext"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*BaseNeuroScriptListener",
          "name": "ExitMap_entry",
          "sourceFile": "generated/neuroscript_base_listener.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entryContext"
            }
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitProgram",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ProgramContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitFile_header",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*File_headerContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitProcedure_definition",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Procedure_definitionContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitSignature_part",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Signature_partContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitNeeds_clause",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Needs_clauseContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitOptional_clause",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Optional_clauseContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitReturns_clause",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Returns_clauseContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitParam_list",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Param_listContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitMetadata_block",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Metadata_blockContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitStatement_list",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Statement_listContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitBody_line",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Body_lineContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitStatement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*StatementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitSimple_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Simple_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitBlock_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Block_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitExpressionStatement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ExpressionStatementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitSet_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Set_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitCall_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Call_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitReturn_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Return_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitEmit_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Emit_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitMust_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Must_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitFail_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Fail_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitClearErrorStmt",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ClearErrorStmtContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitAsk_stmt",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Ask_stmtContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitBreak_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Break_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitContinue_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Continue_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitIf_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*If_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitWhile_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*While_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitFor_each_statement",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*For_each_statementContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitOnErrorStmt",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*OnErrorStmtContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitQualified_identifier",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Qualified_identifierContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitCall_target",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Call_targetContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitExpression",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*ExpressionContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitLogical_or_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Logical_or_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitLogical_and_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Logical_and_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitBitwise_or_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_or_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitBitwise_xor_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_xor_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitBitwise_and_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Bitwise_and_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitEquality_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Equality_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitRelational_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Relational_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitAdditive_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Additive_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitMultiplicative_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Multiplicative_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitUnary_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Unary_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitPower_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Power_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitAccessor_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Accessor_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitPrimary",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*PrimaryContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitCallable_expr",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Callable_exprContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitPlaceholder",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*PlaceholderContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitLiteral",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*LiteralContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitBoolean_literal",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Boolean_literalContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitList_literal",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*List_literalContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitMap_literal",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_literalContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitExpression_list_opt",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Expression_list_optContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitExpression_list",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Expression_listContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitMap_entry_list_opt",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entry_list_optContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitMap_entry_list",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entry_listContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "v",
          "receiverType": "*BaseNeuroScriptVisitor",
          "name": "VisitMap_entry",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "parameters": [
            {
              "name": "ctx",
              "type": "*Map_entryContext"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverType": "*ProgramContext",
          "name": "IsProgramContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "File_header",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IFile_headerContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "EOF",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "AllProcedure_definition",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IProcedure_definitionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "Procedure_definition",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IProcedure_definitionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "AllNEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ProgramContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Program",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IProgramContext"
          ]
        },
        {
          "receiverType": "*File_headerContext",
          "name": "IsFile_headerContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "AllMETADATA_LINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "METADATA_LINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "AllNEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*File_headerContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "File_header",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IFile_headerContext"
          ]
        },
        {
          "receiverType": "*Procedure_definitionContext",
          "name": "IsProcedure_definitionContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "KW_FUNC",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "Signature_part",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ISignature_partContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "KW_MEANS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "Statement_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IStatement_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "KW_ENDFUNC",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "Metadata_block",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMetadata_blockContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Procedure_definitionContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Procedure_definition",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IProcedure_definitionContext"
          ]
        },
        {
          "receiverType": "*Signature_partContext",
          "name": "IsSignature_partContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "LPAREN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "RPAREN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "Needs_clause",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "INeeds_clauseContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "Optional_clause",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IOptional_clauseContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "Returns_clause",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IReturns_clauseContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Signature_partContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Signature_part",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ISignature_partContext"
          ]
        },
        {
          "receiverType": "*Needs_clauseContext",
          "name": "IsNeeds_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "KW_NEEDS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "Param_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IParam_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Needs_clauseContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Needs_clause",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "INeeds_clauseContext"
          ]
        },
        {
          "receiverType": "*Optional_clauseContext",
          "name": "IsOptional_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "KW_OPTIONAL",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "Param_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IParam_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Optional_clauseContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Optional_clause",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IOptional_clauseContext"
          ]
        },
        {
          "receiverType": "*Returns_clauseContext",
          "name": "IsReturns_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "KW_RETURNS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "Param_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IParam_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Returns_clauseContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Returns_clause",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IReturns_clauseContext"
          ]
        },
        {
          "receiverType": "*Param_listContext",
          "name": "IsParam_listContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "AllIDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "AllCOMMA",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "COMMA",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Param_listContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Param_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IParam_listContext"
          ]
        },
        {
          "receiverType": "*Metadata_blockContext",
          "name": "IsMetadata_blockContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "AllMETADATA_LINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "METADATA_LINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "AllNEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Metadata_blockContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Metadata_block",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMetadata_blockContext"
          ]
        },
        {
          "receiverType": "*Statement_listContext",
          "name": "IsStatement_listContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "AllBody_line",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IBody_lineContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "Body_line",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IBody_lineContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Statement_listContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Statement_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IStatement_listContext"
          ]
        },
        {
          "receiverType": "*Body_lineContext",
          "name": "IsBody_lineContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "Statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IStatementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Body_lineContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Body_line",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBody_lineContext"
          ]
        },
        {
          "receiverType": "*StatementContext",
          "name": "IsStatementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "Simple_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ISimple_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "Block_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBlock_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*StatementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IStatementContext"
          ]
        },
        {
          "receiverType": "*Simple_statementContext",
          "name": "IsSimple_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Set_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ISet_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Call_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICall_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Return_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IReturn_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Emit_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IEmit_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Must_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMust_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Fail_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IFail_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "ClearErrorStmt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IClearErrorStmtContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Ask_stmt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IAsk_stmtContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Break_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBreak_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Continue_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IContinue_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Simple_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Simple_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ISimple_statementContext"
          ]
        },
        {
          "receiverType": "*Block_statementContext",
          "name": "IsBlock_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "If_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IIf_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "While_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IWhile_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "For_each_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IFor_each_statementContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "OnErrorStmt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IOnErrorStmtContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Block_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Block_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBlock_statementContext"
          ]
        },
        {
          "receiverType": "*ExpressionStatementContext",
          "name": "IsExpressionStatementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionStatementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionStatementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionStatementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionStatementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionStatementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionStatementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionStatementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "ExpressionStatement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionStatementContext"
          ]
        },
        {
          "receiverType": "*Set_statementContext",
          "name": "IsSet_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "KW_SET",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "ASSIGN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Set_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Set_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ISet_statementContext"
          ]
        },
        {
          "receiverType": "*Call_statementContext",
          "name": "IsCall_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "KW_CALL",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "Callable_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICallable_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Call_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICall_statementContext"
          ]
        },
        {
          "receiverType": "*Return_statementContext",
          "name": "IsReturn_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "KW_RETURN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "Expression_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpression_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Return_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Return_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IReturn_statementContext"
          ]
        },
        {
          "receiverType": "*Emit_statementContext",
          "name": "IsEmit_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "KW_EMIT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Emit_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Emit_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IEmit_statementContext"
          ]
        },
        {
          "receiverType": "*Must_statementContext",
          "name": "IsMust_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "KW_MUST",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "KW_MUSTBE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "Callable_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICallable_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Must_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Must_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMust_statementContext"
          ]
        },
        {
          "receiverType": "*Fail_statementContext",
          "name": "IsFail_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "KW_FAIL",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Fail_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Fail_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IFail_statementContext"
          ]
        },
        {
          "receiverType": "*ClearErrorStmtContext",
          "name": "IsClearErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*ClearErrorStmtContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ClearErrorStmtContext",
          "name": "KW_CLEAR_ERROR",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ClearErrorStmtContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ClearErrorStmtContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ClearErrorStmtContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ClearErrorStmtContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ClearErrorStmtContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "ClearErrorStmt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IClearErrorStmtContext"
          ]
        },
        {
          "receiverType": "*Ask_stmtContext",
          "name": "IsAsk_stmtContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "KW_ASK",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "KW_INTO",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Ask_stmtContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Ask_stmt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IAsk_stmtContext"
          ]
        },
        {
          "receiverType": "*Break_statementContext",
          "name": "IsBreak_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Break_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Break_statementContext",
          "name": "KW_BREAK",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Break_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Break_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Break_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Break_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Break_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Break_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBreak_statementContext"
          ]
        },
        {
          "receiverType": "*Continue_statementContext",
          "name": "IsContinue_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Continue_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Continue_statementContext",
          "name": "KW_CONTINUE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Continue_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Continue_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Continue_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Continue_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Continue_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Continue_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IContinue_statementContext"
          ]
        },
        {
          "receiverType": "*If_statementContext",
          "name": "IsIf_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "KW_IF",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "AllNEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "AllStatement_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IStatement_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "Statement_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IStatement_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "KW_ENDIF",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "KW_ELSE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*If_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "If_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IIf_statementContext"
          ]
        },
        {
          "receiverType": "*While_statementContext",
          "name": "IsWhile_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "KW_WHILE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "Statement_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IStatement_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "KW_ENDWHILE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*While_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "While_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IWhile_statementContext"
          ]
        },
        {
          "receiverType": "*For_each_statementContext",
          "name": "IsFor_each_statementContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "KW_FOR",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "KW_EACH",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "KW_IN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "Statement_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IStatement_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "KW_ENDFOR",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*For_each_statementContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "For_each_statement",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IFor_each_statementContext"
          ]
        },
        {
          "receiverType": "*OnErrorStmtContext",
          "name": "IsOnErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "KW_ON_ERROR",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "KW_MEANS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "NEWLINE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "Statement_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IStatement_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "KW_ENDON",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*OnErrorStmtContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "OnErrorStmt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IOnErrorStmtContext"
          ]
        },
        {
          "receiverType": "*Qualified_identifierContext",
          "name": "IsQualified_identifierContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "AllIDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "AllDOT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "DOT",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Qualified_identifierContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Qualified_identifier",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IQualified_identifierContext"
          ]
        },
        {
          "receiverType": "*Call_targetContext",
          "name": "IsCall_targetContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "KW_TOOL",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "DOT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "Qualified_identifier",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IQualified_identifierContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Call_targetContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Call_target",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICall_targetContext"
          ]
        },
        {
          "receiverType": "*ExpressionContext",
          "name": "IsExpressionContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionContext",
          "name": "Logical_or_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ILogical_or_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*ExpressionContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverType": "*Logical_or_exprContext",
          "name": "IsLogical_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "AllLogical_and_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]ILogical_and_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "Logical_and_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "ILogical_and_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "AllKW_OR",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "KW_OR",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_or_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Logical_or_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ILogical_or_exprContext"
          ]
        },
        {
          "receiverType": "*Logical_and_exprContext",
          "name": "IsLogical_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "AllBitwise_or_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IBitwise_or_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "Bitwise_or_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IBitwise_or_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "AllKW_AND",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "KW_AND",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Logical_and_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Logical_and_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ILogical_and_exprContext"
          ]
        },
        {
          "receiverType": "*Bitwise_or_exprContext",
          "name": "IsBitwise_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "AllBitwise_xor_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IBitwise_xor_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "Bitwise_xor_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IBitwise_xor_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "AllPIPE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "PIPE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_or_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Bitwise_or_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBitwise_or_exprContext"
          ]
        },
        {
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "IsBitwise_xor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "AllBitwise_and_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IBitwise_and_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "Bitwise_and_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IBitwise_and_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "AllCARET",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "CARET",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_xor_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Bitwise_xor_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBitwise_xor_exprContext"
          ]
        },
        {
          "receiverType": "*Bitwise_and_exprContext",
          "name": "IsBitwise_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "AllEquality_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IEquality_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "Equality_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IEquality_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "AllAMPERSAND",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "AMPERSAND",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Bitwise_and_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Bitwise_and_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBitwise_and_exprContext"
          ]
        },
        {
          "receiverType": "*Equality_exprContext",
          "name": "IsEquality_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "AllRelational_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IRelational_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "Relational_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IRelational_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "AllEQ",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "EQ",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "AllNEQ",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "NEQ",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Equality_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Equality_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IEquality_exprContext"
          ]
        },
        {
          "receiverType": "*Relational_exprContext",
          "name": "IsRelational_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "AllAdditive_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IAdditive_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "Additive_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IAdditive_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "AllGT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "GT",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "AllLT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "LT",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "AllGTE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "GTE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "AllLTE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "LTE",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Relational_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Relational_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IRelational_exprContext"
          ]
        },
        {
          "receiverType": "*Additive_exprContext",
          "name": "IsAdditive_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "AllMultiplicative_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IMultiplicative_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "Multiplicative_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IMultiplicative_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "AllPLUS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "PLUS",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "AllMINUS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "MINUS",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Additive_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Additive_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IAdditive_exprContext"
          ]
        },
        {
          "receiverType": "*Multiplicative_exprContext",
          "name": "IsMultiplicative_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "AllUnary_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IUnary_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "Unary_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IUnary_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "AllSTAR",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "STAR",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "AllSLASH",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "SLASH",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "AllPERCENT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "PERCENT",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Multiplicative_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Multiplicative_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMultiplicative_exprContext"
          ]
        },
        {
          "receiverType": "*Unary_exprContext",
          "name": "IsUnary_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "Unary_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IUnary_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "MINUS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "KW_NOT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "KW_NO",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "KW_SOME",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "TILDE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "Power_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IPower_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Unary_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Unary_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IUnary_exprContext"
          ]
        },
        {
          "receiverType": "*Power_exprContext",
          "name": "IsPower_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "Accessor_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IAccessor_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "STAR_STAR",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "Power_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IPower_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Power_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Power_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IPower_exprContext"
          ]
        },
        {
          "receiverType": "*Accessor_exprContext",
          "name": "IsAccessor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "Primary",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IPrimaryContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "AllLBRACK",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "LBRACK",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "AllExpression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "AllRBRACK",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "RBRACK",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Accessor_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Accessor_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IAccessor_exprContext"
          ]
        },
        {
          "receiverType": "*PrimaryContext",
          "name": "IsPrimaryContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "Literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ILiteralContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "Placeholder",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IPlaceholderContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "KW_LAST",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "Callable_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICallable_exprContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "KW_EVAL",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "LPAREN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "RPAREN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PrimaryContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Primary",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IPrimaryContext"
          ]
        },
        {
          "receiverType": "*Callable_exprContext",
          "name": "IsCallable_exprContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "LPAREN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "Expression_list_opt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpression_list_optContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "RPAREN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "Call_target",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICall_targetContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_LN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_LOG",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_SIN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_COS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_TAN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_ASIN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_ACOS",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "KW_ATAN",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Callable_exprContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Callable_expr",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ICallable_exprContext"
          ]
        },
        {
          "receiverType": "*PlaceholderContext",
          "name": "IsPlaceholderContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "PLACEHOLDER_START",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "PLACEHOLDER_END",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "IDENTIFIER",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "KW_LAST",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*PlaceholderContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Placeholder",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IPlaceholderContext"
          ]
        },
        {
          "receiverType": "*LiteralContext",
          "name": "IsLiteralContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "STRING_LIT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "TRIPLE_BACKTICK_STRING",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "NUMBER_LIT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "List_literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IList_literalContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "Map_literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMap_literalContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "Boolean_literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBoolean_literalContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*LiteralContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "ILiteralContext"
          ]
        },
        {
          "receiverType": "*Boolean_literalContext",
          "name": "IsBoolean_literalContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "KW_TRUE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "KW_FALSE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Boolean_literalContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Boolean_literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IBoolean_literalContext"
          ]
        },
        {
          "receiverType": "*List_literalContext",
          "name": "IsList_literalContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "LBRACK",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "Expression_list_opt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpression_list_optContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "RBRACK",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*List_literalContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "List_literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IList_literalContext"
          ]
        },
        {
          "receiverType": "*Map_literalContext",
          "name": "IsMap_literalContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "LBRACE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "Map_entry_list_opt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMap_entry_list_optContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "RBRACE",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_literalContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Map_literal",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMap_literalContext"
          ]
        },
        {
          "receiverType": "*Expression_list_optContext",
          "name": "IsExpression_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_list_optContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_list_optContext",
          "name": "Expression_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpression_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_list_optContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_list_optContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_list_optContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_list_optContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_list_optContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Expression_list_opt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpression_list_optContext"
          ]
        },
        {
          "receiverType": "*Expression_listContext",
          "name": "IsExpression_listContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "AllExpression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "AllCOMMA",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "COMMA",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Expression_listContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Expression_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpression_listContext"
          ]
        },
        {
          "receiverType": "*Map_entry_list_optContext",
          "name": "IsMap_entry_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_list_optContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_list_optContext",
          "name": "Map_entry_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMap_entry_listContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_list_optContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_list_optContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_list_optContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_list_optContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_list_optContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Map_entry_list_opt",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMap_entry_list_optContext"
          ]
        },
        {
          "receiverType": "*Map_entry_listContext",
          "name": "IsMap_entry_listContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "AllMap_entry",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]IMap_entryContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "Map_entry",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "IMap_entryContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "AllCOMMA",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "[]antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "COMMA",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "i",
              "type": "int"
            }
          ],
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entry_listContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Map_entry_list",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMap_entry_listContext"
          ]
        },
        {
          "receiverType": "*Map_entryContext",
          "name": "IsMap_entryContext",
          "sourceFile": "generated/neuroscript_parser.go"
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "GetParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.Parser"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "STRING_LIT",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "COLON",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.TerminalNode"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "Expression",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IExpressionContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "GetRuleContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "antlr.RuleContext"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "ToStringTree",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "ruleNames",
              "type": "[]string"
            },
            {
              "name": "recog",
              "type": "antlr.Recognizer"
            }
          ],
          "returns": [
            "string"
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "EnterRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "ExitRule",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "listener",
              "type": "antlr.ParseTreeListener"
            }
          ]
        },
        {
          "receiverName": "s",
          "receiverType": "*Map_entryContext",
          "name": "Accept",
          "sourceFile": "generated/neuroscript_parser.go",
          "parameters": [
            {
              "name": "visitor",
              "type": "antlr.ParseTreeVisitor"
            }
          ],
          "returns": [
            "interface{}"
          ]
        },
        {
          "receiverName": "p",
          "receiverType": "*NeuroScriptParser",
          "name": "Map_entry",
          "sourceFile": "generated/neuroscript_parser.go",
          "returns": [
            "IMap_entryContext"
          ]
        }
      ],
      "structs": [
        {
          "name": "BaseNeuroScriptListener",
          "sourceFile": "generated/neuroscript_base_listener.go"
        },
        {
          "name": "BaseNeuroScriptVisitor",
          "sourceFile": "generated/neuroscript_base_visitor.go",
          "fields": [
            {
              "name": "BaseParseTreeVisitor",
              "type": "*antlr.BaseParseTreeVisitor",
              "exported": true
            }
          ]
        },
        {
          "name": "NeuroScriptLexer",
          "sourceFile": "generated/neuroscript_lexer.go",
          "fields": [
            {
              "name": "BaseLexer",
              "type": "*antlr.BaseLexer",
              "exported": true
            }
          ]
        },
        {
          "name": "NeuroScriptParser",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParser",
              "type": "*antlr.BaseParser",
              "exported": true
            }
          ]
        },
        {
          "name": "ProgramContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "File_headerContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Procedure_definitionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Signature_partContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Needs_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Optional_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Returns_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Param_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Metadata_blockContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Statement_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Body_lineContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "StatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Simple_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Block_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "ExpressionStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Set_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Call_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Return_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Emit_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Must_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Fail_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "ClearErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Ask_stmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Break_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Continue_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "If_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "While_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "For_each_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "OnErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Qualified_identifierContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Call_targetContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "ExpressionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Logical_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Logical_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Bitwise_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Bitwise_xor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Bitwise_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Equality_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Relational_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Additive_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Multiplicative_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Unary_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Power_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Accessor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "PrimaryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Callable_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "PlaceholderContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "LiteralContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Boolean_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "List_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Map_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Expression_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Expression_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Map_entry_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Map_entry_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        },
        {
          "name": "Map_entryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "fields": [
            {
              "name": "BaseParserRuleContext",
              "type": "antlr.BaseParserRuleContext",
              "exported": true
            }
          ]
        }
      ],
      "interfaces": [
        {
          "name": "NeuroScriptListener",
          "sourceFile": "generated/neuroscript_listener.go",
          "methods": [
            {
              "name": "antlr.ParseTreeListener",
              "sourceFile": "generated/neuroscript_listener.go"
            },
            {
              "name": "EnterProgram",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ProgramContext"
                }
              ]
            },
            {
              "name": "EnterFile_header",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*File_headerContext"
                }
              ]
            },
            {
              "name": "EnterProcedure_definition",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Procedure_definitionContext"
                }
              ]
            },
            {
              "name": "EnterSignature_part",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Signature_partContext"
                }
              ]
            },
            {
              "name": "EnterNeeds_clause",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Needs_clauseContext"
                }
              ]
            },
            {
              "name": "EnterOptional_clause",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Optional_clauseContext"
                }
              ]
            },
            {
              "name": "EnterReturns_clause",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Returns_clauseContext"
                }
              ]
            },
            {
              "name": "EnterParam_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Param_listContext"
                }
              ]
            },
            {
              "name": "EnterMetadata_block",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Metadata_blockContext"
                }
              ]
            },
            {
              "name": "EnterStatement_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Statement_listContext"
                }
              ]
            },
            {
              "name": "EnterBody_line",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Body_lineContext"
                }
              ]
            },
            {
              "name": "EnterStatement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*StatementContext"
                }
              ]
            },
            {
              "name": "EnterSimple_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Simple_statementContext"
                }
              ]
            },
            {
              "name": "EnterBlock_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Block_statementContext"
                }
              ]
            },
            {
              "name": "EnterExpressionStatement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ExpressionStatementContext"
                }
              ]
            },
            {
              "name": "EnterSet_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Set_statementContext"
                }
              ]
            },
            {
              "name": "EnterCall_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Call_statementContext"
                }
              ]
            },
            {
              "name": "EnterReturn_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Return_statementContext"
                }
              ]
            },
            {
              "name": "EnterEmit_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Emit_statementContext"
                }
              ]
            },
            {
              "name": "EnterMust_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Must_statementContext"
                }
              ]
            },
            {
              "name": "EnterFail_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Fail_statementContext"
                }
              ]
            },
            {
              "name": "EnterClearErrorStmt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ClearErrorStmtContext"
                }
              ]
            },
            {
              "name": "EnterAsk_stmt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Ask_stmtContext"
                }
              ]
            },
            {
              "name": "EnterBreak_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Break_statementContext"
                }
              ]
            },
            {
              "name": "EnterContinue_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Continue_statementContext"
                }
              ]
            },
            {
              "name": "EnterIf_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*If_statementContext"
                }
              ]
            },
            {
              "name": "EnterWhile_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*While_statementContext"
                }
              ]
            },
            {
              "name": "EnterFor_each_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*For_each_statementContext"
                }
              ]
            },
            {
              "name": "EnterOnErrorStmt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*OnErrorStmtContext"
                }
              ]
            },
            {
              "name": "EnterQualified_identifier",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Qualified_identifierContext"
                }
              ]
            },
            {
              "name": "EnterCall_target",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Call_targetContext"
                }
              ]
            },
            {
              "name": "EnterExpression",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ExpressionContext"
                }
              ]
            },
            {
              "name": "EnterLogical_or_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Logical_or_exprContext"
                }
              ]
            },
            {
              "name": "EnterLogical_and_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Logical_and_exprContext"
                }
              ]
            },
            {
              "name": "EnterBitwise_or_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Bitwise_or_exprContext"
                }
              ]
            },
            {
              "name": "EnterBitwise_xor_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Bitwise_xor_exprContext"
                }
              ]
            },
            {
              "name": "EnterBitwise_and_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Bitwise_and_exprContext"
                }
              ]
            },
            {
              "name": "EnterEquality_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Equality_exprContext"
                }
              ]
            },
            {
              "name": "EnterRelational_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Relational_exprContext"
                }
              ]
            },
            {
              "name": "EnterAdditive_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Additive_exprContext"
                }
              ]
            },
            {
              "name": "EnterMultiplicative_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Multiplicative_exprContext"
                }
              ]
            },
            {
              "name": "EnterUnary_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Unary_exprContext"
                }
              ]
            },
            {
              "name": "EnterPower_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Power_exprContext"
                }
              ]
            },
            {
              "name": "EnterAccessor_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Accessor_exprContext"
                }
              ]
            },
            {
              "name": "EnterPrimary",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*PrimaryContext"
                }
              ]
            },
            {
              "name": "EnterCallable_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Callable_exprContext"
                }
              ]
            },
            {
              "name": "EnterPlaceholder",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*PlaceholderContext"
                }
              ]
            },
            {
              "name": "EnterLiteral",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*LiteralContext"
                }
              ]
            },
            {
              "name": "EnterBoolean_literal",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Boolean_literalContext"
                }
              ]
            },
            {
              "name": "EnterList_literal",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*List_literalContext"
                }
              ]
            },
            {
              "name": "EnterMap_literal",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_literalContext"
                }
              ]
            },
            {
              "name": "EnterExpression_list_opt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Expression_list_optContext"
                }
              ]
            },
            {
              "name": "EnterExpression_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Expression_listContext"
                }
              ]
            },
            {
              "name": "EnterMap_entry_list_opt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_entry_list_optContext"
                }
              ]
            },
            {
              "name": "EnterMap_entry_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_entry_listContext"
                }
              ]
            },
            {
              "name": "EnterMap_entry",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_entryContext"
                }
              ]
            },
            {
              "name": "ExitProgram",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ProgramContext"
                }
              ]
            },
            {
              "name": "ExitFile_header",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*File_headerContext"
                }
              ]
            },
            {
              "name": "ExitProcedure_definition",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Procedure_definitionContext"
                }
              ]
            },
            {
              "name": "ExitSignature_part",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Signature_partContext"
                }
              ]
            },
            {
              "name": "ExitNeeds_clause",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Needs_clauseContext"
                }
              ]
            },
            {
              "name": "ExitOptional_clause",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Optional_clauseContext"
                }
              ]
            },
            {
              "name": "ExitReturns_clause",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Returns_clauseContext"
                }
              ]
            },
            {
              "name": "ExitParam_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Param_listContext"
                }
              ]
            },
            {
              "name": "ExitMetadata_block",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Metadata_blockContext"
                }
              ]
            },
            {
              "name": "ExitStatement_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Statement_listContext"
                }
              ]
            },
            {
              "name": "ExitBody_line",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Body_lineContext"
                }
              ]
            },
            {
              "name": "ExitStatement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*StatementContext"
                }
              ]
            },
            {
              "name": "ExitSimple_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Simple_statementContext"
                }
              ]
            },
            {
              "name": "ExitBlock_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Block_statementContext"
                }
              ]
            },
            {
              "name": "ExitExpressionStatement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ExpressionStatementContext"
                }
              ]
            },
            {
              "name": "ExitSet_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Set_statementContext"
                }
              ]
            },
            {
              "name": "ExitCall_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Call_statementContext"
                }
              ]
            },
            {
              "name": "ExitReturn_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Return_statementContext"
                }
              ]
            },
            {
              "name": "ExitEmit_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Emit_statementContext"
                }
              ]
            },
            {
              "name": "ExitMust_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Must_statementContext"
                }
              ]
            },
            {
              "name": "ExitFail_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Fail_statementContext"
                }
              ]
            },
            {
              "name": "ExitClearErrorStmt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ClearErrorStmtContext"
                }
              ]
            },
            {
              "name": "ExitAsk_stmt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Ask_stmtContext"
                }
              ]
            },
            {
              "name": "ExitBreak_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Break_statementContext"
                }
              ]
            },
            {
              "name": "ExitContinue_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Continue_statementContext"
                }
              ]
            },
            {
              "name": "ExitIf_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*If_statementContext"
                }
              ]
            },
            {
              "name": "ExitWhile_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*While_statementContext"
                }
              ]
            },
            {
              "name": "ExitFor_each_statement",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*For_each_statementContext"
                }
              ]
            },
            {
              "name": "ExitOnErrorStmt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*OnErrorStmtContext"
                }
              ]
            },
            {
              "name": "ExitQualified_identifier",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Qualified_identifierContext"
                }
              ]
            },
            {
              "name": "ExitCall_target",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Call_targetContext"
                }
              ]
            },
            {
              "name": "ExitExpression",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*ExpressionContext"
                }
              ]
            },
            {
              "name": "ExitLogical_or_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Logical_or_exprContext"
                }
              ]
            },
            {
              "name": "ExitLogical_and_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Logical_and_exprContext"
                }
              ]
            },
            {
              "name": "ExitBitwise_or_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Bitwise_or_exprContext"
                }
              ]
            },
            {
              "name": "ExitBitwise_xor_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Bitwise_xor_exprContext"
                }
              ]
            },
            {
              "name": "ExitBitwise_and_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Bitwise_and_exprContext"
                }
              ]
            },
            {
              "name": "ExitEquality_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Equality_exprContext"
                }
              ]
            },
            {
              "name": "ExitRelational_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Relational_exprContext"
                }
              ]
            },
            {
              "name": "ExitAdditive_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Additive_exprContext"
                }
              ]
            },
            {
              "name": "ExitMultiplicative_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Multiplicative_exprContext"
                }
              ]
            },
            {
              "name": "ExitUnary_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Unary_exprContext"
                }
              ]
            },
            {
              "name": "ExitPower_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Power_exprContext"
                }
              ]
            },
            {
              "name": "ExitAccessor_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Accessor_exprContext"
                }
              ]
            },
            {
              "name": "ExitPrimary",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*PrimaryContext"
                }
              ]
            },
            {
              "name": "ExitCallable_expr",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Callable_exprContext"
                }
              ]
            },
            {
              "name": "ExitPlaceholder",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*PlaceholderContext"
                }
              ]
            },
            {
              "name": "ExitLiteral",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*LiteralContext"
                }
              ]
            },
            {
              "name": "ExitBoolean_literal",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Boolean_literalContext"
                }
              ]
            },
            {
              "name": "ExitList_literal",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*List_literalContext"
                }
              ]
            },
            {
              "name": "ExitMap_literal",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_literalContext"
                }
              ]
            },
            {
              "name": "ExitExpression_list_opt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Expression_list_optContext"
                }
              ]
            },
            {
              "name": "ExitExpression_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Expression_listContext"
                }
              ]
            },
            {
              "name": "ExitMap_entry_list_opt",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_entry_list_optContext"
                }
              ]
            },
            {
              "name": "ExitMap_entry_list",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_entry_listContext"
                }
              ]
            },
            {
              "name": "ExitMap_entry",
              "sourceFile": "generated/neuroscript_listener.go",
              "parameters": [
                {
                  "name": "c",
                  "type": "*Map_entryContext"
                }
              ]
            }
          ]
        },
        {
          "name": "IProgramContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "File_header",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IFile_headerContext"
              ]
            },
            {
              "name": "EOF",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllProcedure_definition",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IProcedure_definitionContext"
              ]
            },
            {
              "name": "Procedure_definition",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IProcedure_definitionContext"
              ]
            },
            {
              "name": "AllNEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsProgramContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IFile_headerContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllMETADATA_LINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "METADATA_LINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllNEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsFile_headerContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IProcedure_definitionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_FUNC",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Signature_part",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ISignature_partContext"
              ]
            },
            {
              "name": "KW_MEANS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Statement_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IStatement_listContext"
              ]
            },
            {
              "name": "KW_ENDFUNC",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Metadata_block",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IMetadata_blockContext"
              ]
            },
            {
              "name": "IsProcedure_definitionContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ISignature_partContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "LPAREN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "RPAREN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Needs_clause",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "INeeds_clauseContext"
              ]
            },
            {
              "name": "Optional_clause",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IOptional_clauseContext"
              ]
            },
            {
              "name": "Returns_clause",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IReturns_clauseContext"
              ]
            },
            {
              "name": "IsSignature_partContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "INeeds_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_NEEDS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Param_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IParam_listContext"
              ]
            },
            {
              "name": "IsNeeds_clauseContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IOptional_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_OPTIONAL",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Param_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IParam_listContext"
              ]
            },
            {
              "name": "IsOptional_clauseContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IReturns_clauseContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_RETURNS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Param_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IParam_listContext"
              ]
            },
            {
              "name": "IsReturns_clauseContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IParam_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllIDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllCOMMA",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "COMMA",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsParam_listContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IMetadata_blockContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllMETADATA_LINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "METADATA_LINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllNEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsMetadata_blockContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IStatement_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllBody_line",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IBody_lineContext"
              ]
            },
            {
              "name": "Body_line",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IBody_lineContext"
              ]
            },
            {
              "name": "IsStatement_listContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IBody_lineContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IStatementContext"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsBody_lineContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Simple_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ISimple_statementContext"
              ]
            },
            {
              "name": "Block_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IBlock_statementContext"
              ]
            },
            {
              "name": "IsStatementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ISimple_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Set_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ISet_statementContext"
              ]
            },
            {
              "name": "Call_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ICall_statementContext"
              ]
            },
            {
              "name": "Return_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IReturn_statementContext"
              ]
            },
            {
              "name": "Emit_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IEmit_statementContext"
              ]
            },
            {
              "name": "Must_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IMust_statementContext"
              ]
            },
            {
              "name": "Fail_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IFail_statementContext"
              ]
            },
            {
              "name": "ClearErrorStmt",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IClearErrorStmtContext"
              ]
            },
            {
              "name": "Ask_stmt",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IAsk_stmtContext"
              ]
            },
            {
              "name": "Break_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IBreak_statementContext"
              ]
            },
            {
              "name": "Continue_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IContinue_statementContext"
              ]
            },
            {
              "name": "IsSimple_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IBlock_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "If_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IIf_statementContext"
              ]
            },
            {
              "name": "While_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IWhile_statementContext"
              ]
            },
            {
              "name": "For_each_statement",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IFor_each_statementContext"
              ]
            },
            {
              "name": "OnErrorStmt",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IOnErrorStmtContext"
              ]
            },
            {
              "name": "IsBlock_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IExpressionStatementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "IsExpressionStatementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ISet_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_SET",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "ASSIGN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "IsSet_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ICall_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_CALL",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Callable_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ICallable_exprContext"
              ]
            },
            {
              "name": "IsCall_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IReturn_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_RETURN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpression_listContext"
              ]
            },
            {
              "name": "IsReturn_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IEmit_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_EMIT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "IsEmit_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IMust_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_MUST",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "KW_MUSTBE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Callable_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ICallable_exprContext"
              ]
            },
            {
              "name": "IsMust_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IFail_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_FAIL",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "IsFail_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IClearErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_CLEAR_ERROR",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsClearErrorStmtContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IAsk_stmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_ASK",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "KW_INTO",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsAsk_stmtContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IBreak_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_BREAK",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsBreak_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IContinue_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_CONTINUE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsContinue_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IIf_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_IF",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "AllNEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllStatement_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IStatement_listContext"
              ]
            },
            {
              "name": "Statement_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IStatement_listContext"
              ]
            },
            {
              "name": "KW_ENDIF",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_ELSE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsIf_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IWhile_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_WHILE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Statement_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IStatement_listContext"
              ]
            },
            {
              "name": "KW_ENDWHILE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsWhile_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IFor_each_statementContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_FOR",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_EACH",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_IN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Statement_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IStatement_listContext"
              ]
            },
            {
              "name": "KW_ENDFOR",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsFor_each_statementContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IOnErrorStmtContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_ON_ERROR",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_MEANS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "NEWLINE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Statement_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IStatement_listContext"
              ]
            },
            {
              "name": "KW_ENDON",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsOnErrorStmtContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IQualified_identifierContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllIDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllDOT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "DOT",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsQualified_identifierContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ICall_targetContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_TOOL",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "DOT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Qualified_identifier",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IQualified_identifierContext"
              ]
            },
            {
              "name": "IsCall_targetContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IExpressionContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Logical_or_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ILogical_or_exprContext"
              ]
            },
            {
              "name": "IsExpressionContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ILogical_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllLogical_and_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]ILogical_and_exprContext"
              ]
            },
            {
              "name": "Logical_and_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "ILogical_and_exprContext"
              ]
            },
            {
              "name": "AllKW_OR",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_OR",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsLogical_or_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ILogical_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllBitwise_or_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IBitwise_or_exprContext"
              ]
            },
            {
              "name": "Bitwise_or_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IBitwise_or_exprContext"
              ]
            },
            {
              "name": "AllKW_AND",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_AND",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsLogical_and_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IBitwise_or_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllBitwise_xor_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IBitwise_xor_exprContext"
              ]
            },
            {
              "name": "Bitwise_xor_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IBitwise_xor_exprContext"
              ]
            },
            {
              "name": "AllPIPE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "PIPE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsBitwise_or_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IBitwise_xor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllBitwise_and_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IBitwise_and_exprContext"
              ]
            },
            {
              "name": "Bitwise_and_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IBitwise_and_exprContext"
              ]
            },
            {
              "name": "AllCARET",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "CARET",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsBitwise_xor_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IBitwise_and_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllEquality_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IEquality_exprContext"
              ]
            },
            {
              "name": "Equality_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IEquality_exprContext"
              ]
            },
            {
              "name": "AllAMPERSAND",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "AMPERSAND",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsBitwise_and_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IEquality_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllRelational_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IRelational_exprContext"
              ]
            },
            {
              "name": "Relational_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IRelational_exprContext"
              ]
            },
            {
              "name": "AllEQ",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "EQ",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllNEQ",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "NEQ",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsEquality_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IRelational_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllAdditive_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IAdditive_exprContext"
              ]
            },
            {
              "name": "Additive_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IAdditive_exprContext"
              ]
            },
            {
              "name": "AllGT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "GT",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllLT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "LT",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllGTE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "GTE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllLTE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "LTE",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsRelational_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IAdditive_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllMultiplicative_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IMultiplicative_exprContext"
              ]
            },
            {
              "name": "Multiplicative_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IMultiplicative_exprContext"
              ]
            },
            {
              "name": "AllPLUS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "PLUS",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllMINUS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "MINUS",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsAdditive_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IMultiplicative_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllUnary_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IUnary_exprContext"
              ]
            },
            {
              "name": "Unary_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IUnary_exprContext"
              ]
            },
            {
              "name": "AllSTAR",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "STAR",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllSLASH",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "SLASH",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllPERCENT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "PERCENT",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsMultiplicative_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IUnary_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Unary_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IUnary_exprContext"
              ]
            },
            {
              "name": "MINUS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_NOT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_NO",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_SOME",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "TILDE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Power_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IPower_exprContext"
              ]
            },
            {
              "name": "IsUnary_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IPower_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Accessor_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IAccessor_exprContext"
              ]
            },
            {
              "name": "STAR_STAR",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Power_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IPower_exprContext"
              ]
            },
            {
              "name": "IsPower_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IAccessor_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Primary",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IPrimaryContext"
              ]
            },
            {
              "name": "AllLBRACK",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "LBRACK",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "AllExpression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IExpressionContext"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "AllRBRACK",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "RBRACK",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsAccessor_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IPrimaryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Literal",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ILiteralContext"
              ]
            },
            {
              "name": "Placeholder",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IPlaceholderContext"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_LAST",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Callable_expr",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ICallable_exprContext"
              ]
            },
            {
              "name": "KW_EVAL",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "LPAREN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "RPAREN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsPrimaryContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ICallable_exprContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "LPAREN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression_list_opt",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpression_list_optContext"
              ]
            },
            {
              "name": "RPAREN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Call_target",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "ICall_targetContext"
              ]
            },
            {
              "name": "KW_LN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_LOG",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_SIN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_COS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_TAN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_ASIN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_ACOS",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_ATAN",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsCallable_exprContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IPlaceholderContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "PLACEHOLDER_START",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "PLACEHOLDER_END",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IDENTIFIER",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_LAST",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsPlaceholderContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "ILiteralContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "STRING_LIT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "TRIPLE_BACKTICK_STRING",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "NUMBER_LIT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "List_literal",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IList_literalContext"
              ]
            },
            {
              "name": "Map_literal",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IMap_literalContext"
              ]
            },
            {
              "name": "Boolean_literal",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IBoolean_literalContext"
              ]
            },
            {
              "name": "IsLiteralContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IBoolean_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "KW_TRUE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "KW_FALSE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsBoolean_literalContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IList_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "LBRACK",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression_list_opt",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpression_list_optContext"
              ]
            },
            {
              "name": "RBRACK",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsList_literalContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IMap_literalContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "LBRACE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Map_entry_list_opt",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IMap_entry_list_optContext"
              ]
            },
            {
              "name": "RBRACE",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsMap_literalContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IExpression_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Expression_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpression_listContext"
              ]
            },
            {
              "name": "IsExpression_list_optContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IExpression_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllExpression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IExpressionContext"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "AllCOMMA",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "COMMA",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsExpression_listContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IMap_entry_list_optContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "Map_entry_list",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IMap_entry_listContext"
              ]
            },
            {
              "name": "IsMap_entry_list_optContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IMap_entry_listContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "AllMap_entry",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]IMap_entryContext"
              ]
            },
            {
              "name": "Map_entry",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "IMap_entryContext"
              ]
            },
            {
              "name": "AllCOMMA",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "[]antlr.TerminalNode"
              ]
            },
            {
              "name": "COMMA",
              "sourceFile": "generated/neuroscript_parser.go",
              "parameters": [
                {
                  "name": "i",
                  "type": "int"
                }
              ],
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "IsMap_entry_listContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "IMap_entryContext",
          "sourceFile": "generated/neuroscript_parser.go",
          "methods": [
            {
              "name": "antlr.ParserRuleContext",
              "sourceFile": "generated/neuroscript_parser.go"
            },
            {
              "name": "GetParser",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.Parser"
              ]
            },
            {
              "name": "STRING_LIT",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "COLON",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "antlr.TerminalNode"
              ]
            },
            {
              "name": "Expression",
              "sourceFile": "generated/neuroscript_parser.go",
              "returns": [
                "IExpressionContext"
              ]
            },
            {
              "name": "IsMap_entryContext",
              "sourceFile": "generated/neuroscript_parser.go"
            }
          ]
        },
        {
          "name": "NeuroScriptVisitor",
          "sourceFile": "generated/neuroscript_visitor.go",
          "methods": [
            {
              "name": "antlr.ParseTreeVisitor",
              "sourceFile": "generated/neuroscript_visitor.go"
            },
            {
              "name": "VisitProgram",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*ProgramContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitFile_header",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*File_headerContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitProcedure_definition",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Procedure_definitionContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitSignature_part",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Signature_partContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitNeeds_clause",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Needs_clauseContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitOptional_clause",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Optional_clauseContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitReturns_clause",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Returns_clauseContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitParam_list",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Param_listContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitMetadata_block",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Metadata_blockContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitStatement_list",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Statement_listContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitBody_line",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Body_lineContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitStatement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*StatementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitSimple_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Simple_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitBlock_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Block_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitExpressionStatement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*ExpressionStatementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitSet_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Set_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitCall_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Call_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitReturn_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Return_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitEmit_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Emit_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitMust_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Must_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitFail_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Fail_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitClearErrorStmt",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*ClearErrorStmtContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitAsk_stmt",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Ask_stmtContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitBreak_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Break_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitContinue_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Continue_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitIf_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*If_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitWhile_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*While_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitFor_each_statement",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*For_each_statementContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitOnErrorStmt",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*OnErrorStmtContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitQualified_identifier",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Qualified_identifierContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitCall_target",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Call_targetContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitExpression",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*ExpressionContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitLogical_or_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Logical_or_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitLogical_and_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Logical_and_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitBitwise_or_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Bitwise_or_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitBitwise_xor_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Bitwise_xor_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitBitwise_and_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Bitwise_and_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitEquality_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Equality_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitRelational_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Relational_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitAdditive_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Additive_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitMultiplicative_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Multiplicative_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitUnary_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Unary_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitPower_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Power_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitAccessor_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Accessor_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitPrimary",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*PrimaryContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitCallable_expr",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Callable_exprContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitPlaceholder",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*PlaceholderContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitLiteral",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*LiteralContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitBoolean_literal",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Boolean_literalContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitList_literal",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*List_literalContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitMap_literal",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Map_literalContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitExpression_list_opt",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Expression_list_optContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitExpression_list",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Expression_listContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitMap_entry_list_opt",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Map_entry_list_optContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitMap_entry_list",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Map_entry_listContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            },
            {
              "name": "VisitMap_entry",
              "sourceFile": "generated/neuroscript_visitor.go",
              "parameters": [
                {
                  "name": "ctx",
                  "type": "*Map_entryContext"
                }
              ],
              "returns": [
                "interface{}"
              ]
            }
          ]
        }
      ],
      "globalVars": [
        {
          "name": "NeuroScriptLexerLexerStaticData",
          "type": "struct {\n\tonce\t\t\tsync.Once\n\tserializedATN\t\t[]int32\n\tChannelNames\t\t[]string\n\tModeNames\t\t[]string\n\tLiteralNames\t\t[]string\n\tSymbolicNames\t\t[]string\n\tRuleNames\t\t[]string\n\tPredictionContextCache\t*antlr.PredictionContextCache\n\tatn\t\t\t*antlr.ATN\n\tdecisionToDFA\t\t[]*antlr.DFA\n}",
          "sourceFile": "generated/neuroscript_lexer.go"
        },
        {
          "name": "NeuroScriptParserStaticData",
          "type": "struct {\n\tonce\t\t\tsync.Once\n\tserializedATN\t\t[]int32\n\tLiteralNames\t\t[]string\n\tSymbolicNames\t\t[]string\n\tRuleNames\t\t[]string\n\tPredictionContextCache\t*antlr.PredictionContextCache\n\tatn\t\t\t*antlr.ATN\n\tdecisionToDFA\t\t[]*antlr.DFA\n}",
          "sourceFile": "generated/neuroscript_parser.go"
        }
      ],
      "globalConsts": [
        {
          "name": "NeuroScriptLexerKW_CALL",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "1"
        },
        {
          "name": "NeuroScriptLexerKW_FUNC",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "2"
        },
        {
          "name": "NeuroScriptLexerKW_NEEDS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "3"
        },
        {
          "name": "NeuroScriptLexerKW_OPTIONAL",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "4"
        },
        {
          "name": "NeuroScriptLexerKW_RETURNS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "5"
        },
        {
          "name": "NeuroScriptLexerKW_MEANS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "6"
        },
        {
          "name": "NeuroScriptLexerKW_ENDFUNC",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "7"
        },
        {
          "name": "NeuroScriptLexerKW_SET",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "8"
        },
        {
          "name": "NeuroScriptLexerKW_RETURN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "9"
        },
        {
          "name": "NeuroScriptLexerKW_EMIT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "10"
        },
        {
          "name": "NeuroScriptLexerKW_IF",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "11"
        },
        {
          "name": "NeuroScriptLexerKW_ELSE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "12"
        },
        {
          "name": "NeuroScriptLexerKW_ENDIF",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "13"
        },
        {
          "name": "NeuroScriptLexerKW_WHILE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "14"
        },
        {
          "name": "NeuroScriptLexerKW_ENDWHILE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "15"
        },
        {
          "name": "NeuroScriptLexerKW_FOR",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "16"
        },
        {
          "name": "NeuroScriptLexerKW_EACH",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "17"
        },
        {
          "name": "NeuroScriptLexerKW_IN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "18"
        },
        {
          "name": "NeuroScriptLexerKW_ENDFOR",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "19"
        },
        {
          "name": "NeuroScriptLexerKW_ON_ERROR",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "20"
        },
        {
          "name": "NeuroScriptLexerKW_ENDON",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "21"
        },
        {
          "name": "NeuroScriptLexerKW_CLEAR_ERROR",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "22"
        },
        {
          "name": "NeuroScriptLexerKW_MUST",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "23"
        },
        {
          "name": "NeuroScriptLexerKW_MUSTBE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "24"
        },
        {
          "name": "NeuroScriptLexerKW_FAIL",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "25"
        },
        {
          "name": "NeuroScriptLexerKW_NO",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "26"
        },
        {
          "name": "NeuroScriptLexerKW_SOME",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "27"
        },
        {
          "name": "NeuroScriptLexerKW_TOOL",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "28"
        },
        {
          "name": "NeuroScriptLexerKW_LAST",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "29"
        },
        {
          "name": "NeuroScriptLexerKW_EVAL",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "30"
        },
        {
          "name": "NeuroScriptLexerKW_TRUE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "31"
        },
        {
          "name": "NeuroScriptLexerKW_FALSE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "32"
        },
        {
          "name": "NeuroScriptLexerKW_AND",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "33"
        },
        {
          "name": "NeuroScriptLexerKW_OR",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "34"
        },
        {
          "name": "NeuroScriptLexerKW_NOT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "35"
        },
        {
          "name": "NeuroScriptLexerKW_LN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "36"
        },
        {
          "name": "NeuroScriptLexerKW_LOG",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "37"
        },
        {
          "name": "NeuroScriptLexerKW_SIN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "38"
        },
        {
          "name": "NeuroScriptLexerKW_COS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "39"
        },
        {
          "name": "NeuroScriptLexerKW_TAN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "40"
        },
        {
          "name": "NeuroScriptLexerKW_ASIN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "41"
        },
        {
          "name": "NeuroScriptLexerKW_ACOS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "42"
        },
        {
          "name": "NeuroScriptLexerKW_ATAN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "43"
        },
        {
          "name": "NeuroScriptLexerKW_ASK",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "44"
        },
        {
          "name": "NeuroScriptLexerKW_INTO",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "45"
        },
        {
          "name": "NeuroScriptLexerKW_BREAK",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "46"
        },
        {
          "name": "NeuroScriptLexerKW_CONTINUE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "47"
        },
        {
          "name": "NeuroScriptLexerNUMBER_LIT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "48"
        },
        {
          "name": "NeuroScriptLexerSTRING_LIT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "49"
        },
        {
          "name": "NeuroScriptLexerTRIPLE_BACKTICK_STRING",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "50"
        },
        {
          "name": "NeuroScriptLexerASSIGN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "51"
        },
        {
          "name": "NeuroScriptLexerPLUS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "52"
        },
        {
          "name": "NeuroScriptLexerMINUS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "53"
        },
        {
          "name": "NeuroScriptLexerSTAR",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "54"
        },
        {
          "name": "NeuroScriptLexerSLASH",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "55"
        },
        {
          "name": "NeuroScriptLexerPERCENT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "56"
        },
        {
          "name": "NeuroScriptLexerSTAR_STAR",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "57"
        },
        {
          "name": "NeuroScriptLexerAMPERSAND",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "58"
        },
        {
          "name": "NeuroScriptLexerPIPE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "59"
        },
        {
          "name": "NeuroScriptLexerCARET",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "60"
        },
        {
          "name": "NeuroScriptLexerTILDE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "61"
        },
        {
          "name": "NeuroScriptLexerLPAREN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "62"
        },
        {
          "name": "NeuroScriptLexerRPAREN",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "63"
        },
        {
          "name": "NeuroScriptLexerCOMMA",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "64"
        },
        {
          "name": "NeuroScriptLexerLBRACK",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "65"
        },
        {
          "name": "NeuroScriptLexerRBRACK",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "66"
        },
        {
          "name": "NeuroScriptLexerLBRACE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "67"
        },
        {
          "name": "NeuroScriptLexerRBRACE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "68"
        },
        {
          "name": "NeuroScriptLexerCOLON",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "69"
        },
        {
          "name": "NeuroScriptLexerDOT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "70"
        },
        {
          "name": "NeuroScriptLexerPLACEHOLDER_START",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "71"
        },
        {
          "name": "NeuroScriptLexerPLACEHOLDER_END",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "72"
        },
        {
          "name": "NeuroScriptLexerEQ",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "73"
        },
        {
          "name": "NeuroScriptLexerNEQ",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "74"
        },
        {
          "name": "NeuroScriptLexerGT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "75"
        },
        {
          "name": "NeuroScriptLexerLT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "76"
        },
        {
          "name": "NeuroScriptLexerGTE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "77"
        },
        {
          "name": "NeuroScriptLexerLTE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "78"
        },
        {
          "name": "NeuroScriptLexerIDENTIFIER",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "79"
        },
        {
          "name": "NeuroScriptLexerMETADATA_LINE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "80"
        },
        {
          "name": "NeuroScriptLexerLINE_COMMENT",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "81"
        },
        {
          "name": "NeuroScriptLexerNEWLINE",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "82"
        },
        {
          "name": "NeuroScriptLexerWS",
          "type": "",
          "sourceFile": "generated/neuroscript_lexer.go",
          "value": "83"
        },
        {
          "name": "NeuroScriptParserEOF",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": ""
        },
        {
          "name": "NeuroScriptParserKW_CALL",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "1"
        },
        {
          "name": "NeuroScriptParserKW_FUNC",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "2"
        },
        {
          "name": "NeuroScriptParserKW_NEEDS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "3"
        },
        {
          "name": "NeuroScriptParserKW_OPTIONAL",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "4"
        },
        {
          "name": "NeuroScriptParserKW_RETURNS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "5"
        },
        {
          "name": "NeuroScriptParserKW_MEANS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "6"
        },
        {
          "name": "NeuroScriptParserKW_ENDFUNC",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "7"
        },
        {
          "name": "NeuroScriptParserKW_SET",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "8"
        },
        {
          "name": "NeuroScriptParserKW_RETURN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "9"
        },
        {
          "name": "NeuroScriptParserKW_EMIT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "10"
        },
        {
          "name": "NeuroScriptParserKW_IF",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "11"
        },
        {
          "name": "NeuroScriptParserKW_ELSE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "12"
        },
        {
          "name": "NeuroScriptParserKW_ENDIF",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "13"
        },
        {
          "name": "NeuroScriptParserKW_WHILE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "14"
        },
        {
          "name": "NeuroScriptParserKW_ENDWHILE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "15"
        },
        {
          "name": "NeuroScriptParserKW_FOR",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "16"
        },
        {
          "name": "NeuroScriptParserKW_EACH",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "17"
        },
        {
          "name": "NeuroScriptParserKW_IN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "18"
        },
        {
          "name": "NeuroScriptParserKW_ENDFOR",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "19"
        },
        {
          "name": "NeuroScriptParserKW_ON_ERROR",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "20"
        },
        {
          "name": "NeuroScriptParserKW_ENDON",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "21"
        },
        {
          "name": "NeuroScriptParserKW_CLEAR_ERROR",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "22"
        },
        {
          "name": "NeuroScriptParserKW_MUST",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "23"
        },
        {
          "name": "NeuroScriptParserKW_MUSTBE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "24"
        },
        {
          "name": "NeuroScriptParserKW_FAIL",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "25"
        },
        {
          "name": "NeuroScriptParserKW_NO",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "26"
        },
        {
          "name": "NeuroScriptParserKW_SOME",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "27"
        },
        {
          "name": "NeuroScriptParserKW_TOOL",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "28"
        },
        {
          "name": "NeuroScriptParserKW_LAST",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "29"
        },
        {
          "name": "NeuroScriptParserKW_EVAL",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "30"
        },
        {
          "name": "NeuroScriptParserKW_TRUE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "31"
        },
        {
          "name": "NeuroScriptParserKW_FALSE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "32"
        },
        {
          "name": "NeuroScriptParserKW_AND",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "33"
        },
        {
          "name": "NeuroScriptParserKW_OR",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "34"
        },
        {
          "name": "NeuroScriptParserKW_NOT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "35"
        },
        {
          "name": "NeuroScriptParserKW_LN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "36"
        },
        {
          "name": "NeuroScriptParserKW_LOG",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "37"
        },
        {
          "name": "NeuroScriptParserKW_SIN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "38"
        },
        {
          "name": "NeuroScriptParserKW_COS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "39"
        },
        {
          "name": "NeuroScriptParserKW_TAN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "40"
        },
        {
          "name": "NeuroScriptParserKW_ASIN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "41"
        },
        {
          "name": "NeuroScriptParserKW_ACOS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "42"
        },
        {
          "name": "NeuroScriptParserKW_ATAN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "43"
        },
        {
          "name": "NeuroScriptParserKW_ASK",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "44"
        },
        {
          "name": "NeuroScriptParserKW_INTO",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "45"
        },
        {
          "name": "NeuroScriptParserKW_BREAK",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "46"
        },
        {
          "name": "NeuroScriptParserKW_CONTINUE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "47"
        },
        {
          "name": "NeuroScriptParserNUMBER_LIT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "48"
        },
        {
          "name": "NeuroScriptParserSTRING_LIT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "49"
        },
        {
          "name": "NeuroScriptParserTRIPLE_BACKTICK_STRING",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "50"
        },
        {
          "name": "NeuroScriptParserASSIGN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "51"
        },
        {
          "name": "NeuroScriptParserPLUS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "52"
        },
        {
          "name": "NeuroScriptParserMINUS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "53"
        },
        {
          "name": "NeuroScriptParserSTAR",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "54"
        },
        {
          "name": "NeuroScriptParserSLASH",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "55"
        },
        {
          "name": "NeuroScriptParserPERCENT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "56"
        },
        {
          "name": "NeuroScriptParserSTAR_STAR",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "57"
        },
        {
          "name": "NeuroScriptParserAMPERSAND",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "58"
        },
        {
          "name": "NeuroScriptParserPIPE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "59"
        },
        {
          "name": "NeuroScriptParserCARET",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "60"
        },
        {
          "name": "NeuroScriptParserTILDE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "61"
        },
        {
          "name": "NeuroScriptParserLPAREN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "62"
        },
        {
          "name": "NeuroScriptParserRPAREN",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "63"
        },
        {
          "name": "NeuroScriptParserCOMMA",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "64"
        },
        {
          "name": "NeuroScriptParserLBRACK",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "65"
        },
        {
          "name": "NeuroScriptParserRBRACK",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "66"
        },
        {
          "name": "NeuroScriptParserLBRACE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "67"
        },
        {
          "name": "NeuroScriptParserRBRACE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "68"
        },
        {
          "name": "NeuroScriptParserCOLON",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "69"
        },
        {
          "name": "NeuroScriptParserDOT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "70"
        },
        {
          "name": "NeuroScriptParserPLACEHOLDER_START",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "71"
        },
        {
          "name": "NeuroScriptParserPLACEHOLDER_END",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "72"
        },
        {
          "name": "NeuroScriptParserEQ",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "73"
        },
        {
          "name": "NeuroScriptParserNEQ",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "74"
        },
        {
          "name": "NeuroScriptParserGT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "75"
        },
        {
          "name": "NeuroScriptParserLT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "76"
        },
        {
          "name": "NeuroScriptParserGTE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "77"
        },
        {
          "name": "NeuroScriptParserLTE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "78"
        },
        {
          "name": "NeuroScriptParserIDENTIFIER",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "79"
        },
        {
          "name": "NeuroScriptParserMETADATA_LINE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "80"
        },
        {
          "name": "NeuroScriptParserLINE_COMMENT",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "81"
        },
        {
          "name": "NeuroScriptParserNEWLINE",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "82"
        },
        {
          "name": "NeuroScriptParserWS",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "83"
        },
        {
          "name": "NeuroScriptParserRULE_program",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "0"
        },
        {
          "name": "NeuroScriptParserRULE_file_header",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "1"
        },
        {
          "name": "NeuroScriptParserRULE_procedure_definition",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "2"
        },
        {
          "name": "NeuroScriptParserRULE_signature_part",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "3"
        },
        {
          "name": "NeuroScriptParserRULE_needs_clause",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "4"
        },
        {
          "name": "NeuroScriptParserRULE_optional_clause",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "5"
        },
        {
          "name": "NeuroScriptParserRULE_returns_clause",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "6"
        },
        {
          "name": "NeuroScriptParserRULE_param_list",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "7"
        },
        {
          "name": "NeuroScriptParserRULE_metadata_block",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "8"
        },
        {
          "name": "NeuroScriptParserRULE_statement_list",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "9"
        },
        {
          "name": "NeuroScriptParserRULE_body_line",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "10"
        },
        {
          "name": "NeuroScriptParserRULE_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "11"
        },
        {
          "name": "NeuroScriptParserRULE_simple_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "12"
        },
        {
          "name": "NeuroScriptParserRULE_block_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "13"
        },
        {
          "name": "NeuroScriptParserRULE_expressionStatement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "14"
        },
        {
          "name": "NeuroScriptParserRULE_set_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "15"
        },
        {
          "name": "NeuroScriptParserRULE_call_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "16"
        },
        {
          "name": "NeuroScriptParserRULE_return_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "17"
        },
        {
          "name": "NeuroScriptParserRULE_emit_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "18"
        },
        {
          "name": "NeuroScriptParserRULE_must_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "19"
        },
        {
          "name": "NeuroScriptParserRULE_fail_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "20"
        },
        {
          "name": "NeuroScriptParserRULE_clearErrorStmt",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "21"
        },
        {
          "name": "NeuroScriptParserRULE_ask_stmt",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "22"
        },
        {
          "name": "NeuroScriptParserRULE_break_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "23"
        },
        {
          "name": "NeuroScriptParserRULE_continue_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "24"
        },
        {
          "name": "NeuroScriptParserRULE_if_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "25"
        },
        {
          "name": "NeuroScriptParserRULE_while_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "26"
        },
        {
          "name": "NeuroScriptParserRULE_for_each_statement",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "27"
        },
        {
          "name": "NeuroScriptParserRULE_onErrorStmt",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "28"
        },
        {
          "name": "NeuroScriptParserRULE_qualified_identifier",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "29"
        },
        {
          "name": "NeuroScriptParserRULE_call_target",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "30"
        },
        {
          "name": "NeuroScriptParserRULE_expression",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "31"
        },
        {
          "name": "NeuroScriptParserRULE_logical_or_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "32"
        },
        {
          "name": "NeuroScriptParserRULE_logical_and_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "33"
        },
        {
          "name": "NeuroScriptParserRULE_bitwise_or_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "34"
        },
        {
          "name": "NeuroScriptParserRULE_bitwise_xor_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "35"
        },
        {
          "name": "NeuroScriptParserRULE_bitwise_and_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "36"
        },
        {
          "name": "NeuroScriptParserRULE_equality_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "37"
        },
        {
          "name": "NeuroScriptParserRULE_relational_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "38"
        },
        {
          "name": "NeuroScriptParserRULE_additive_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "39"
        },
        {
          "name": "NeuroScriptParserRULE_multiplicative_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "40"
        },
        {
          "name": "NeuroScriptParserRULE_unary_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "41"
        },
        {
          "name": "NeuroScriptParserRULE_power_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "42"
        },
        {
          "name": "NeuroScriptParserRULE_accessor_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "43"
        },
        {
          "name": "NeuroScriptParserRULE_primary",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "44"
        },
        {
          "name": "NeuroScriptParserRULE_callable_expr",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "45"
        },
        {
          "name": "NeuroScriptParserRULE_placeholder",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "46"
        },
        {
          "name": "NeuroScriptParserRULE_literal",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "47"
        },
        {
          "name": "NeuroScriptParserRULE_boolean_literal",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "48"
        },
        {
          "name": "NeuroScriptParserRULE_list_literal",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "49"
        },
        {
          "name": "NeuroScriptParserRULE_map_literal",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "50"
        },
        {
          "name": "NeuroScriptParserRULE_expression_list_opt",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "51"
        },
        {
          "name": "NeuroScriptParserRULE_expression_list",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "52"
        },
        {
          "name": "NeuroScriptParserRULE_map_entry_list_opt",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "53"
        },
        {
          "name": "NeuroScriptParserRULE_map_entry_list",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "54"
        },
        {
          "name": "NeuroScriptParserRULE_map_entry",
          "type": "",
          "sourceFile": "generated/neuroscript_parser.go",
          "value": "55"
        }
      ]
    },
    "github.com/aprice2704/neuroscript/pkg/core/prompts": {
      "packagePath": "github.com/aprice2704/neuroscript/pkg/core/prompts",
      "packageName": "prompts",
      "globalConsts": [
        {
          "name": "PromptDevelop",
          "type": "",
          "sourceFile": "prompts/prompts.go",
          "value": ""
        },
        {
          "name": "PromptExecute",
          "type": "",
          "sourceFile": "prompts/prompts.go",
          "value": ""
        }
      ]
    },
    "github.com/aprice2704/neuroscript/pkg/core/tools": {
      "packagePath": "github.com/aprice2704/neuroscript/pkg/core/tools",
      "packageName": "core"
    },
    "github.com/aprice2704/neuroscript/pkg/core/tools/goast": {
      "packagePath": "github.com/aprice2704/neuroscript/pkg/core/tools/goast",
      "packageName": "goast",
      "functions": [
        {
          "name": "github.com/aprice2704/neuroscript/pkg/core/tools/goast.RegisterGoAstTools",
          "sourceFile": "tools/goast/tools_go_ast.go",
          "parameters": [
            {
              "name": "registry",
              "type": "core.ToolRegistrar"
            }
          ],
          "returns": [
            "error"
          ]
        }
      ],
      "structs": [
        {
          "name": "CachedAst",
          "sourceFile": "tools/goast/tools_go_ast.go",
          "fields": [
            {
              "name": "File",
              "type": "*ast.File",
              "exported": true
            },
            {
              "name": "Fset",
              "type": "*token.FileSet",
              "exported": true
            }
          ]
        }
      ]
    },
    "github.com/aprice2704/neuroscript/pkg/core/tools/gosemantic": {
      "packagePath": "github.com/aprice2704/neuroscript/pkg/core/tools/gosemantic",
      "packageName": "gosemantic",
      "structs": [
        {
          "name": "PackageInfo",
          "sourceFile": "tools/gosemantic/semantic_index.go",
          "fields": [
            {
              "name": "Package",
              "type": "*packages.Package",
              "exported": true
            }
          ]
        },
        {
          "name": "SemanticIndex",
          "sourceFile": "tools/gosemantic/semantic_index.go",
          "fields": [
            {
              "name": "Fset",
              "type": "*token.FileSet",
              "exported": true
            },
            {
              "name": "Packages",
              "type": "[]*PackageInfo",
              "exported": true
            },
            {
              "name": "LoadDir",
              "type": "string",
              "exported": true
            },
            {
              "name": "LoadErrs",
              "type": "[]error",
              "exported": true
            }
          ]
        }
      ],
      "globalVars": [
        {
          "name": "ErrSymbolNotFound",
          "type": "",
          "sourceFile": "tools/gosemantic/errors.go"
        },
        {
          "name": "ErrPackageNotFound",
          "type": "",
          "sourceFile": "tools/gosemantic/errors.go"
        },
        {
          "name": "ErrInvalidQueryFormat",
          "type": "",
          "sourceFile": "tools/gosemantic/errors.go"
        },
        {
          "name": "ErrWrongKind",
          "type": "",
          "sourceFile": "tools/gosemantic/errors.go"
        },
        {
          "name": "ErrAmbiguousQuery",
          "type": "",
          "sourceFile": "tools/gosemantic/errors.go"
        },
        {
          "name": "ErrIndexNotReady",
          "type": "",
          "sourceFile": "tools/gosemantic/errors.go"
        }
      ]
    }
  },
  "lastIndexed": "2025-05-24T23:19:55-07:00",
  "gitBranch": "unknown-branch",
  "gitCommitHash": "unknown-commit"
}
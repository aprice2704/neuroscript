// Code generated from NeuroScript.g4 by ANTLR 4.13.2. DO NOT EDIT.

package core

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type NeuroScriptLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var NeuroScriptLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func neuroscriptlexerLexerInit() {
	staticData := &NeuroScriptLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'SPLAT'", "'PROCEDURE'", "'END'", "'ENDBLOCK'", "'COMMENT:'", "'ENDCOMMENT'",
		"'SET'", "'CALL'", "'RETURN'", "'IF'", "'THEN'", "'ELSE'", "'WHILE'",
		"'DO'", "'FOR'", "'EACH'", "'IN'", "'TOOL'", "'LLM'", "'__last_call_result'",
		"'EMIT'", "", "", "", "'='", "'+'", "'('", "')'", "','", "'['", "']'",
		"'{'", "'}'", "':'", "'.'", "'/'", "'{{'", "'}}'", "'=='", "'!='", "'>'",
		"'<'", "'>='", "'<='",
	}
	staticData.SymbolicNames = []string{
		"", "KW_STARTPROC", "KW_PROCEDURE", "KW_END", "KW_ENDBLOCK", "KW_COMMENT_START",
		"KW_ENDCOMMENT", "KW_SET", "KW_CALL", "KW_RETURN", "KW_IF", "KW_THEN",
		"KW_ELSE", "KW_WHILE", "KW_DO", "KW_FOR", "KW_EACH", "KW_IN", "KW_TOOL",
		"KW_LLM", "KW_LAST_CALL_RESULT", "KW_EMIT", "COMMENT_BLOCK", "NUMBER_LIT",
		"STRING_LIT", "ASSIGN", "PLUS", "LPAREN", "RPAREN", "COMMA", "LBRACK",
		"RBRACK", "LBRACE", "RBRACE", "COLON", "DOT", "SLASH", "PLACEHOLDER_START",
		"PLACEHOLDER_END", "EQ", "NEQ", "GT", "LT", "GTE", "LTE", "IDENTIFIER",
		"LINE_COMMENT", "NEWLINE", "WS",
	}
	staticData.RuleNames = []string{
		"KW_STARTPROC", "KW_PROCEDURE", "KW_END", "KW_ENDBLOCK", "KW_COMMENT_START",
		"KW_ENDCOMMENT", "KW_SET", "KW_CALL", "KW_RETURN", "KW_IF", "KW_THEN",
		"KW_ELSE", "KW_WHILE", "KW_DO", "KW_FOR", "KW_EACH", "KW_IN", "KW_TOOL",
		"KW_LLM", "KW_LAST_CALL_RESULT", "KW_EMIT", "COMMENT_BLOCK", "NUMBER_LIT",
		"STRING_LIT", "ASSIGN", "PLUS", "LPAREN", "RPAREN", "COMMA", "LBRACK",
		"RBRACK", "LBRACE", "RBRACE", "COLON", "DOT", "SLASH", "PLACEHOLDER_START",
		"PLACEHOLDER_END", "EQ", "NEQ", "GT", "LT", "GTE", "LTE", "IDENTIFIER",
		"LINE_COMMENT", "NEWLINE", "WS", "EscapeSequence", "UNICODE_ESC", "HEX_DIGIT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 48, 370, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 1, 0, 1, 0, 1,
		0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,
		5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12,
		1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 5, 21, 238, 8,
		21, 10, 21, 12, 21, 241, 9, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 4, 22,
		248, 8, 22, 11, 22, 12, 22, 249, 1, 22, 1, 22, 4, 22, 254, 8, 22, 11, 22,
		12, 22, 255, 3, 22, 258, 8, 22, 1, 23, 1, 23, 1, 23, 5, 23, 263, 8, 23,
		10, 23, 12, 23, 266, 9, 23, 1, 23, 1, 23, 1, 23, 1, 23, 5, 23, 272, 8,
		23, 10, 23, 12, 23, 275, 9, 23, 1, 23, 3, 23, 278, 8, 23, 1, 24, 1, 24,
		1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1,
		30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35,
		1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1,
		39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 43,
		1, 43, 1, 43, 1, 44, 1, 44, 5, 44, 328, 8, 44, 10, 44, 12, 44, 331, 9,
		44, 1, 45, 1, 45, 1, 45, 3, 45, 336, 8, 45, 1, 45, 5, 45, 339, 8, 45, 10,
		45, 12, 45, 342, 9, 45, 1, 45, 1, 45, 1, 46, 3, 46, 347, 8, 46, 1, 46,
		1, 46, 1, 47, 4, 47, 352, 8, 47, 11, 47, 12, 47, 353, 1, 47, 1, 47, 1,
		48, 1, 48, 1, 48, 3, 48, 361, 8, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49,
		1, 49, 1, 50, 1, 50, 1, 239, 0, 51, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85,
		43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 0, 99, 0, 101, 0, 1, 0,
		9, 1, 0, 48, 57, 2, 0, 34, 34, 92, 92, 2, 0, 39, 39, 92, 92, 3, 0, 65,
		90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 10, 10,
		13, 13, 2, 0, 9, 9, 32, 32, 6, 0, 34, 34, 39, 39, 92, 92, 110, 110, 114,
		114, 116, 116, 3, 0, 48, 57, 65, 70, 97, 102, 381, 0, 1, 1, 0, 0, 0, 0,
		3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0,
		11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0,
		0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0,
		0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0,
		0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1,
		0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49,
		1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0,
		57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0,
		0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0,
		0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0,
		0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1,
		0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95,
		1, 0, 0, 0, 1, 103, 1, 0, 0, 0, 3, 109, 1, 0, 0, 0, 5, 119, 1, 0, 0, 0,
		7, 123, 1, 0, 0, 0, 9, 132, 1, 0, 0, 0, 11, 141, 1, 0, 0, 0, 13, 152, 1,
		0, 0, 0, 15, 156, 1, 0, 0, 0, 17, 161, 1, 0, 0, 0, 19, 168, 1, 0, 0, 0,
		21, 171, 1, 0, 0, 0, 23, 176, 1, 0, 0, 0, 25, 181, 1, 0, 0, 0, 27, 187,
		1, 0, 0, 0, 29, 190, 1, 0, 0, 0, 31, 194, 1, 0, 0, 0, 33, 199, 1, 0, 0,
		0, 35, 202, 1, 0, 0, 0, 37, 207, 1, 0, 0, 0, 39, 211, 1, 0, 0, 0, 41, 230,
		1, 0, 0, 0, 43, 235, 1, 0, 0, 0, 45, 247, 1, 0, 0, 0, 47, 277, 1, 0, 0,
		0, 49, 279, 1, 0, 0, 0, 51, 281, 1, 0, 0, 0, 53, 283, 1, 0, 0, 0, 55, 285,
		1, 0, 0, 0, 57, 287, 1, 0, 0, 0, 59, 289, 1, 0, 0, 0, 61, 291, 1, 0, 0,
		0, 63, 293, 1, 0, 0, 0, 65, 295, 1, 0, 0, 0, 67, 297, 1, 0, 0, 0, 69, 299,
		1, 0, 0, 0, 71, 301, 1, 0, 0, 0, 73, 303, 1, 0, 0, 0, 75, 306, 1, 0, 0,
		0, 77, 309, 1, 0, 0, 0, 79, 312, 1, 0, 0, 0, 81, 315, 1, 0, 0, 0, 83, 317,
		1, 0, 0, 0, 85, 319, 1, 0, 0, 0, 87, 322, 1, 0, 0, 0, 89, 325, 1, 0, 0,
		0, 91, 335, 1, 0, 0, 0, 93, 346, 1, 0, 0, 0, 95, 351, 1, 0, 0, 0, 97, 357,
		1, 0, 0, 0, 99, 362, 1, 0, 0, 0, 101, 368, 1, 0, 0, 0, 103, 104, 5, 83,
		0, 0, 104, 105, 5, 80, 0, 0, 105, 106, 5, 76, 0, 0, 106, 107, 5, 65, 0,
		0, 107, 108, 5, 84, 0, 0, 108, 2, 1, 0, 0, 0, 109, 110, 5, 80, 0, 0, 110,
		111, 5, 82, 0, 0, 111, 112, 5, 79, 0, 0, 112, 113, 5, 67, 0, 0, 113, 114,
		5, 69, 0, 0, 114, 115, 5, 68, 0, 0, 115, 116, 5, 85, 0, 0, 116, 117, 5,
		82, 0, 0, 117, 118, 5, 69, 0, 0, 118, 4, 1, 0, 0, 0, 119, 120, 5, 69, 0,
		0, 120, 121, 5, 78, 0, 0, 121, 122, 5, 68, 0, 0, 122, 6, 1, 0, 0, 0, 123,
		124, 5, 69, 0, 0, 124, 125, 5, 78, 0, 0, 125, 126, 5, 68, 0, 0, 126, 127,
		5, 66, 0, 0, 127, 128, 5, 76, 0, 0, 128, 129, 5, 79, 0, 0, 129, 130, 5,
		67, 0, 0, 130, 131, 5, 75, 0, 0, 131, 8, 1, 0, 0, 0, 132, 133, 5, 67, 0,
		0, 133, 134, 5, 79, 0, 0, 134, 135, 5, 77, 0, 0, 135, 136, 5, 77, 0, 0,
		136, 137, 5, 69, 0, 0, 137, 138, 5, 78, 0, 0, 138, 139, 5, 84, 0, 0, 139,
		140, 5, 58, 0, 0, 140, 10, 1, 0, 0, 0, 141, 142, 5, 69, 0, 0, 142, 143,
		5, 78, 0, 0, 143, 144, 5, 68, 0, 0, 144, 145, 5, 67, 0, 0, 145, 146, 5,
		79, 0, 0, 146, 147, 5, 77, 0, 0, 147, 148, 5, 77, 0, 0, 148, 149, 5, 69,
		0, 0, 149, 150, 5, 78, 0, 0, 150, 151, 5, 84, 0, 0, 151, 12, 1, 0, 0, 0,
		152, 153, 5, 83, 0, 0, 153, 154, 5, 69, 0, 0, 154, 155, 5, 84, 0, 0, 155,
		14, 1, 0, 0, 0, 156, 157, 5, 67, 0, 0, 157, 158, 5, 65, 0, 0, 158, 159,
		5, 76, 0, 0, 159, 160, 5, 76, 0, 0, 160, 16, 1, 0, 0, 0, 161, 162, 5, 82,
		0, 0, 162, 163, 5, 69, 0, 0, 163, 164, 5, 84, 0, 0, 164, 165, 5, 85, 0,
		0, 165, 166, 5, 82, 0, 0, 166, 167, 5, 78, 0, 0, 167, 18, 1, 0, 0, 0, 168,
		169, 5, 73, 0, 0, 169, 170, 5, 70, 0, 0, 170, 20, 1, 0, 0, 0, 171, 172,
		5, 84, 0, 0, 172, 173, 5, 72, 0, 0, 173, 174, 5, 69, 0, 0, 174, 175, 5,
		78, 0, 0, 175, 22, 1, 0, 0, 0, 176, 177, 5, 69, 0, 0, 177, 178, 5, 76,
		0, 0, 178, 179, 5, 83, 0, 0, 179, 180, 5, 69, 0, 0, 180, 24, 1, 0, 0, 0,
		181, 182, 5, 87, 0, 0, 182, 183, 5, 72, 0, 0, 183, 184, 5, 73, 0, 0, 184,
		185, 5, 76, 0, 0, 185, 186, 5, 69, 0, 0, 186, 26, 1, 0, 0, 0, 187, 188,
		5, 68, 0, 0, 188, 189, 5, 79, 0, 0, 189, 28, 1, 0, 0, 0, 190, 191, 5, 70,
		0, 0, 191, 192, 5, 79, 0, 0, 192, 193, 5, 82, 0, 0, 193, 30, 1, 0, 0, 0,
		194, 195, 5, 69, 0, 0, 195, 196, 5, 65, 0, 0, 196, 197, 5, 67, 0, 0, 197,
		198, 5, 72, 0, 0, 198, 32, 1, 0, 0, 0, 199, 200, 5, 73, 0, 0, 200, 201,
		5, 78, 0, 0, 201, 34, 1, 0, 0, 0, 202, 203, 5, 84, 0, 0, 203, 204, 5, 79,
		0, 0, 204, 205, 5, 79, 0, 0, 205, 206, 5, 76, 0, 0, 206, 36, 1, 0, 0, 0,
		207, 208, 5, 76, 0, 0, 208, 209, 5, 76, 0, 0, 209, 210, 5, 77, 0, 0, 210,
		38, 1, 0, 0, 0, 211, 212, 5, 95, 0, 0, 212, 213, 5, 95, 0, 0, 213, 214,
		5, 108, 0, 0, 214, 215, 5, 97, 0, 0, 215, 216, 5, 115, 0, 0, 216, 217,
		5, 116, 0, 0, 217, 218, 5, 95, 0, 0, 218, 219, 5, 99, 0, 0, 219, 220, 5,
		97, 0, 0, 220, 221, 5, 108, 0, 0, 221, 222, 5, 108, 0, 0, 222, 223, 5,
		95, 0, 0, 223, 224, 5, 114, 0, 0, 224, 225, 5, 101, 0, 0, 225, 226, 5,
		115, 0, 0, 226, 227, 5, 117, 0, 0, 227, 228, 5, 108, 0, 0, 228, 229, 5,
		116, 0, 0, 229, 40, 1, 0, 0, 0, 230, 231, 5, 69, 0, 0, 231, 232, 5, 77,
		0, 0, 232, 233, 5, 73, 0, 0, 233, 234, 5, 84, 0, 0, 234, 42, 1, 0, 0, 0,
		235, 239, 3, 9, 4, 0, 236, 238, 9, 0, 0, 0, 237, 236, 1, 0, 0, 0, 238,
		241, 1, 0, 0, 0, 239, 240, 1, 0, 0, 0, 239, 237, 1, 0, 0, 0, 240, 242,
		1, 0, 0, 0, 241, 239, 1, 0, 0, 0, 242, 243, 3, 11, 5, 0, 243, 244, 1, 0,
		0, 0, 244, 245, 6, 21, 0, 0, 245, 44, 1, 0, 0, 0, 246, 248, 7, 0, 0, 0,
		247, 246, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 249, 247, 1, 0, 0, 0, 249,
		250, 1, 0, 0, 0, 250, 257, 1, 0, 0, 0, 251, 253, 5, 46, 0, 0, 252, 254,
		7, 0, 0, 0, 253, 252, 1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 253, 1, 0,
		0, 0, 255, 256, 1, 0, 0, 0, 256, 258, 1, 0, 0, 0, 257, 251, 1, 0, 0, 0,
		257, 258, 1, 0, 0, 0, 258, 46, 1, 0, 0, 0, 259, 264, 5, 34, 0, 0, 260,
		263, 3, 97, 48, 0, 261, 263, 8, 1, 0, 0, 262, 260, 1, 0, 0, 0, 262, 261,
		1, 0, 0, 0, 263, 266, 1, 0, 0, 0, 264, 262, 1, 0, 0, 0, 264, 265, 1, 0,
		0, 0, 265, 267, 1, 0, 0, 0, 266, 264, 1, 0, 0, 0, 267, 278, 5, 34, 0, 0,
		268, 273, 5, 39, 0, 0, 269, 272, 3, 97, 48, 0, 270, 272, 8, 2, 0, 0, 271,
		269, 1, 0, 0, 0, 271, 270, 1, 0, 0, 0, 272, 275, 1, 0, 0, 0, 273, 271,
		1, 0, 0, 0, 273, 274, 1, 0, 0, 0, 274, 276, 1, 0, 0, 0, 275, 273, 1, 0,
		0, 0, 276, 278, 5, 39, 0, 0, 277, 259, 1, 0, 0, 0, 277, 268, 1, 0, 0, 0,
		278, 48, 1, 0, 0, 0, 279, 280, 5, 61, 0, 0, 280, 50, 1, 0, 0, 0, 281, 282,
		5, 43, 0, 0, 282, 52, 1, 0, 0, 0, 283, 284, 5, 40, 0, 0, 284, 54, 1, 0,
		0, 0, 285, 286, 5, 41, 0, 0, 286, 56, 1, 0, 0, 0, 287, 288, 5, 44, 0, 0,
		288, 58, 1, 0, 0, 0, 289, 290, 5, 91, 0, 0, 290, 60, 1, 0, 0, 0, 291, 292,
		5, 93, 0, 0, 292, 62, 1, 0, 0, 0, 293, 294, 5, 123, 0, 0, 294, 64, 1, 0,
		0, 0, 295, 296, 5, 125, 0, 0, 296, 66, 1, 0, 0, 0, 297, 298, 5, 58, 0,
		0, 298, 68, 1, 0, 0, 0, 299, 300, 5, 46, 0, 0, 300, 70, 1, 0, 0, 0, 301,
		302, 5, 47, 0, 0, 302, 72, 1, 0, 0, 0, 303, 304, 5, 123, 0, 0, 304, 305,
		5, 123, 0, 0, 305, 74, 1, 0, 0, 0, 306, 307, 5, 125, 0, 0, 307, 308, 5,
		125, 0, 0, 308, 76, 1, 0, 0, 0, 309, 310, 5, 61, 0, 0, 310, 311, 5, 61,
		0, 0, 311, 78, 1, 0, 0, 0, 312, 313, 5, 33, 0, 0, 313, 314, 5, 61, 0, 0,
		314, 80, 1, 0, 0, 0, 315, 316, 5, 62, 0, 0, 316, 82, 1, 0, 0, 0, 317, 318,
		5, 60, 0, 0, 318, 84, 1, 0, 0, 0, 319, 320, 5, 62, 0, 0, 320, 321, 5, 61,
		0, 0, 321, 86, 1, 0, 0, 0, 322, 323, 5, 60, 0, 0, 323, 324, 5, 61, 0, 0,
		324, 88, 1, 0, 0, 0, 325, 329, 7, 3, 0, 0, 326, 328, 7, 4, 0, 0, 327, 326,
		1, 0, 0, 0, 328, 331, 1, 0, 0, 0, 329, 327, 1, 0, 0, 0, 329, 330, 1, 0,
		0, 0, 330, 90, 1, 0, 0, 0, 331, 329, 1, 0, 0, 0, 332, 336, 5, 35, 0, 0,
		333, 334, 5, 45, 0, 0, 334, 336, 5, 45, 0, 0, 335, 332, 1, 0, 0, 0, 335,
		333, 1, 0, 0, 0, 336, 340, 1, 0, 0, 0, 337, 339, 8, 5, 0, 0, 338, 337,
		1, 0, 0, 0, 339, 342, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0, 340, 341, 1, 0,
		0, 0, 341, 343, 1, 0, 0, 0, 342, 340, 1, 0, 0, 0, 343, 344, 6, 45, 0, 0,
		344, 92, 1, 0, 0, 0, 345, 347, 5, 13, 0, 0, 346, 345, 1, 0, 0, 0, 346,
		347, 1, 0, 0, 0, 347, 348, 1, 0, 0, 0, 348, 349, 5, 10, 0, 0, 349, 94,
		1, 0, 0, 0, 350, 352, 7, 6, 0, 0, 351, 350, 1, 0, 0, 0, 352, 353, 1, 0,
		0, 0, 353, 351, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354, 355, 1, 0, 0, 0,
		355, 356, 6, 47, 0, 0, 356, 96, 1, 0, 0, 0, 357, 360, 5, 92, 0, 0, 358,
		361, 7, 7, 0, 0, 359, 361, 3, 99, 49, 0, 360, 358, 1, 0, 0, 0, 360, 359,
		1, 0, 0, 0, 361, 98, 1, 0, 0, 0, 362, 363, 5, 117, 0, 0, 363, 364, 3, 101,
		50, 0, 364, 365, 3, 101, 50, 0, 365, 366, 3, 101, 50, 0, 366, 367, 3, 101,
		50, 0, 367, 100, 1, 0, 0, 0, 368, 369, 7, 8, 0, 0, 369, 102, 1, 0, 0, 0,
		16, 0, 239, 249, 255, 257, 262, 264, 271, 273, 277, 329, 335, 340, 346,
		353, 360, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// NeuroScriptLexerInit initializes any static state used to implement NeuroScriptLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewNeuroScriptLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func NeuroScriptLexerInit() {
	staticData := &NeuroScriptLexerLexerStaticData
	staticData.once.Do(neuroscriptlexerLexerInit)
}

// NewNeuroScriptLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewNeuroScriptLexer(input antlr.CharStream) *NeuroScriptLexer {
	NeuroScriptLexerInit()
	l := new(NeuroScriptLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &NeuroScriptLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "NeuroScript.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NeuroScriptLexer tokens.
const (
	NeuroScriptLexerKW_STARTPROC        = 1
	NeuroScriptLexerKW_PROCEDURE        = 2
	NeuroScriptLexerKW_END              = 3
	NeuroScriptLexerKW_ENDBLOCK         = 4
	NeuroScriptLexerKW_COMMENT_START    = 5
	NeuroScriptLexerKW_ENDCOMMENT       = 6
	NeuroScriptLexerKW_SET              = 7
	NeuroScriptLexerKW_CALL             = 8
	NeuroScriptLexerKW_RETURN           = 9
	NeuroScriptLexerKW_IF               = 10
	NeuroScriptLexerKW_THEN             = 11
	NeuroScriptLexerKW_ELSE             = 12
	NeuroScriptLexerKW_WHILE            = 13
	NeuroScriptLexerKW_DO               = 14
	NeuroScriptLexerKW_FOR              = 15
	NeuroScriptLexerKW_EACH             = 16
	NeuroScriptLexerKW_IN               = 17
	NeuroScriptLexerKW_TOOL             = 18
	NeuroScriptLexerKW_LLM              = 19
	NeuroScriptLexerKW_LAST_CALL_RESULT = 20
	NeuroScriptLexerKW_EMIT             = 21
	NeuroScriptLexerCOMMENT_BLOCK       = 22
	NeuroScriptLexerNUMBER_LIT          = 23
	NeuroScriptLexerSTRING_LIT          = 24
	NeuroScriptLexerASSIGN              = 25
	NeuroScriptLexerPLUS                = 26
	NeuroScriptLexerLPAREN              = 27
	NeuroScriptLexerRPAREN              = 28
	NeuroScriptLexerCOMMA               = 29
	NeuroScriptLexerLBRACK              = 30
	NeuroScriptLexerRBRACK              = 31
	NeuroScriptLexerLBRACE              = 32
	NeuroScriptLexerRBRACE              = 33
	NeuroScriptLexerCOLON               = 34
	NeuroScriptLexerDOT                 = 35
	NeuroScriptLexerSLASH               = 36
	NeuroScriptLexerPLACEHOLDER_START   = 37
	NeuroScriptLexerPLACEHOLDER_END     = 38
	NeuroScriptLexerEQ                  = 39
	NeuroScriptLexerNEQ                 = 40
	NeuroScriptLexerGT                  = 41
	NeuroScriptLexerLT                  = 42
	NeuroScriptLexerGTE                 = 43
	NeuroScriptLexerLTE                 = 44
	NeuroScriptLexerIDENTIFIER          = 45
	NeuroScriptLexerLINE_COMMENT        = 46
	NeuroScriptLexerNEWLINE             = 47
	NeuroScriptLexerWS                  = 48
)

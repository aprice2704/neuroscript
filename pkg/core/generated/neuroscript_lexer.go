// Code generated from NeuroScript.g4 by ANTLR 4.13.2. DO NOT EDIT.

package core

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type NeuroScriptLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var NeuroScriptLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func neuroscriptlexerLexerInit() {
	staticData := &NeuroScriptLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'DEFINE'", "'PROCEDURE'", "'END'", "'ENDBLOCK'", "'COMMENT:'",
		"'ENDCOMMENT'", "'SET'", "'CALL'", "'RETURN'", "'IF'", "'THEN'", "'ELSE'",
		"'WHILE'", "'DO'", "'FOR'", "'EACH'", "'IN'", "'TOOL'", "'LLM'", "'LAST'",
		"'EVAL'", "'EMIT'", "'true'", "'false'", "", "", "", "'='", "'+'", "'('",
		"')'", "','", "'['", "']'", "'{'", "'}'", "':'", "'.'", "'/'", "'{{'",
		"'}}'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='",
	}
	staticData.SymbolicNames = []string{
		"", "KW_DEFINE", "KW_PROCEDURE", "KW_END", "KW_ENDBLOCK", "KW_COMMENT_START",
		"KW_ENDCOMMENT", "KW_SET", "KW_CALL", "KW_RETURN", "KW_IF", "KW_THEN",
		"KW_ELSE", "KW_WHILE", "KW_DO", "KW_FOR", "KW_EACH", "KW_IN", "KW_TOOL",
		"KW_LLM", "KW_LAST", "KW_EVAL", "KW_EMIT", "KW_TRUE", "KW_FALSE", "COMMENT_BLOCK",
		"NUMBER_LIT", "STRING_LIT", "ASSIGN", "PLUS", "LPAREN", "RPAREN", "COMMA",
		"LBRACK", "RBRACK", "LBRACE", "RBRACE", "COLON", "DOT", "SLASH", "PLACEHOLDER_START",
		"PLACEHOLDER_END", "EQ", "NEQ", "GT", "LT", "GTE", "LTE", "IDENTIFIER",
		"LINE_COMMENT", "NEWLINE", "WS",
	}
	staticData.RuleNames = []string{
		"KW_DEFINE", "KW_PROCEDURE", "KW_END", "KW_ENDBLOCK", "KW_COMMENT_START",
		"KW_ENDCOMMENT", "KW_SET", "KW_CALL", "KW_RETURN", "KW_IF", "KW_THEN",
		"KW_ELSE", "KW_WHILE", "KW_DO", "KW_FOR", "KW_EACH", "KW_IN", "KW_TOOL",
		"KW_LLM", "KW_LAST", "KW_EVAL", "KW_EMIT", "KW_TRUE", "KW_FALSE", "COMMENT_BLOCK",
		"NUMBER_LIT", "STRING_LIT", "ASSIGN", "PLUS", "LPAREN", "RPAREN", "COMMA",
		"LBRACK", "RBRACK", "LBRACE", "RBRACE", "COLON", "DOT", "SLASH", "PLACEHOLDER_START",
		"PLACEHOLDER_END", "EQ", "NEQ", "GT", "LT", "GTE", "LTE", "IDENTIFIER",
		"LINE_COMMENT", "NEWLINE", "WS", "EscapeSequence", "UNICODE_ESC", "HEX_DIGIT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 51, 381, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9,
		1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1,
		16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 5, 24, 247, 8, 24, 10, 24, 12,
		24, 250, 9, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 4, 25, 257, 8, 25, 11,
		25, 12, 25, 258, 1, 25, 1, 25, 4, 25, 263, 8, 25, 11, 25, 12, 25, 264,
		3, 25, 267, 8, 25, 1, 26, 1, 26, 1, 26, 5, 26, 272, 8, 26, 10, 26, 12,
		26, 275, 9, 26, 1, 26, 1, 26, 1, 26, 1, 26, 5, 26, 281, 8, 26, 10, 26,
		12, 26, 284, 9, 26, 1, 26, 3, 26, 287, 8, 26, 1, 27, 1, 27, 1, 28, 1, 28,
		1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1,
		34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39,
		1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1,
		42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46,
		1, 47, 1, 47, 5, 47, 337, 8, 47, 10, 47, 12, 47, 340, 9, 47, 1, 48, 1,
		48, 1, 48, 3, 48, 345, 8, 48, 1, 48, 5, 48, 348, 8, 48, 10, 48, 12, 48,
		351, 9, 48, 1, 48, 1, 48, 1, 49, 3, 49, 356, 8, 49, 1, 49, 1, 49, 3, 49,
		360, 8, 49, 1, 50, 4, 50, 363, 8, 50, 11, 50, 12, 50, 364, 1, 50, 1, 50,
		1, 51, 1, 51, 1, 51, 3, 51, 372, 8, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1,
		52, 1, 52, 1, 53, 1, 53, 1, 248, 0, 54, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11,
		6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
		31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24,
		49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33,
		67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42,
		85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51,
		103, 0, 105, 0, 107, 0, 1, 0, 9, 1, 0, 48, 57, 4, 0, 10, 10, 13, 13, 34,
		34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 3, 0, 65, 90, 95, 95,
		97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 10, 10, 13, 13, 2,
		0, 9, 9, 32, 32, 6, 0, 34, 34, 39, 39, 92, 92, 110, 110, 114, 114, 116,
		116, 3, 0, 48, 57, 65, 70, 97, 102, 393, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
		0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
		0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
		0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27,
		1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0,
		35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0,
		0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0,
		0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0,
		0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1,
		0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73,
		1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0,
		81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0,
		0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0,
		0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 1, 109, 1,
		0, 0, 0, 3, 116, 1, 0, 0, 0, 5, 126, 1, 0, 0, 0, 7, 130, 1, 0, 0, 0, 9,
		139, 1, 0, 0, 0, 11, 148, 1, 0, 0, 0, 13, 159, 1, 0, 0, 0, 15, 163, 1,
		0, 0, 0, 17, 168, 1, 0, 0, 0, 19, 175, 1, 0, 0, 0, 21, 178, 1, 0, 0, 0,
		23, 183, 1, 0, 0, 0, 25, 188, 1, 0, 0, 0, 27, 194, 1, 0, 0, 0, 29, 197,
		1, 0, 0, 0, 31, 201, 1, 0, 0, 0, 33, 206, 1, 0, 0, 0, 35, 209, 1, 0, 0,
		0, 37, 214, 1, 0, 0, 0, 39, 218, 1, 0, 0, 0, 41, 223, 1, 0, 0, 0, 43, 228,
		1, 0, 0, 0, 45, 233, 1, 0, 0, 0, 47, 238, 1, 0, 0, 0, 49, 244, 1, 0, 0,
		0, 51, 256, 1, 0, 0, 0, 53, 286, 1, 0, 0, 0, 55, 288, 1, 0, 0, 0, 57, 290,
		1, 0, 0, 0, 59, 292, 1, 0, 0, 0, 61, 294, 1, 0, 0, 0, 63, 296, 1, 0, 0,
		0, 65, 298, 1, 0, 0, 0, 67, 300, 1, 0, 0, 0, 69, 302, 1, 0, 0, 0, 71, 304,
		1, 0, 0, 0, 73, 306, 1, 0, 0, 0, 75, 308, 1, 0, 0, 0, 77, 310, 1, 0, 0,
		0, 79, 312, 1, 0, 0, 0, 81, 315, 1, 0, 0, 0, 83, 318, 1, 0, 0, 0, 85, 321,
		1, 0, 0, 0, 87, 324, 1, 0, 0, 0, 89, 326, 1, 0, 0, 0, 91, 328, 1, 0, 0,
		0, 93, 331, 1, 0, 0, 0, 95, 334, 1, 0, 0, 0, 97, 344, 1, 0, 0, 0, 99, 359,
		1, 0, 0, 0, 101, 362, 1, 0, 0, 0, 103, 368, 1, 0, 0, 0, 105, 373, 1, 0,
		0, 0, 107, 379, 1, 0, 0, 0, 109, 110, 5, 68, 0, 0, 110, 111, 5, 69, 0,
		0, 111, 112, 5, 70, 0, 0, 112, 113, 5, 73, 0, 0, 113, 114, 5, 78, 0, 0,
		114, 115, 5, 69, 0, 0, 115, 2, 1, 0, 0, 0, 116, 117, 5, 80, 0, 0, 117,
		118, 5, 82, 0, 0, 118, 119, 5, 79, 0, 0, 119, 120, 5, 67, 0, 0, 120, 121,
		5, 69, 0, 0, 121, 122, 5, 68, 0, 0, 122, 123, 5, 85, 0, 0, 123, 124, 5,
		82, 0, 0, 124, 125, 5, 69, 0, 0, 125, 4, 1, 0, 0, 0, 126, 127, 5, 69, 0,
		0, 127, 128, 5, 78, 0, 0, 128, 129, 5, 68, 0, 0, 129, 6, 1, 0, 0, 0, 130,
		131, 5, 69, 0, 0, 131, 132, 5, 78, 0, 0, 132, 133, 5, 68, 0, 0, 133, 134,
		5, 66, 0, 0, 134, 135, 5, 76, 0, 0, 135, 136, 5, 79, 0, 0, 136, 137, 5,
		67, 0, 0, 137, 138, 5, 75, 0, 0, 138, 8, 1, 0, 0, 0, 139, 140, 5, 67, 0,
		0, 140, 141, 5, 79, 0, 0, 141, 142, 5, 77, 0, 0, 142, 143, 5, 77, 0, 0,
		143, 144, 5, 69, 0, 0, 144, 145, 5, 78, 0, 0, 145, 146, 5, 84, 0, 0, 146,
		147, 5, 58, 0, 0, 147, 10, 1, 0, 0, 0, 148, 149, 5, 69, 0, 0, 149, 150,
		5, 78, 0, 0, 150, 151, 5, 68, 0, 0, 151, 152, 5, 67, 0, 0, 152, 153, 5,
		79, 0, 0, 153, 154, 5, 77, 0, 0, 154, 155, 5, 77, 0, 0, 155, 156, 5, 69,
		0, 0, 156, 157, 5, 78, 0, 0, 157, 158, 5, 84, 0, 0, 158, 12, 1, 0, 0, 0,
		159, 160, 5, 83, 0, 0, 160, 161, 5, 69, 0, 0, 161, 162, 5, 84, 0, 0, 162,
		14, 1, 0, 0, 0, 163, 164, 5, 67, 0, 0, 164, 165, 5, 65, 0, 0, 165, 166,
		5, 76, 0, 0, 166, 167, 5, 76, 0, 0, 167, 16, 1, 0, 0, 0, 168, 169, 5, 82,
		0, 0, 169, 170, 5, 69, 0, 0, 170, 171, 5, 84, 0, 0, 171, 172, 5, 85, 0,
		0, 172, 173, 5, 82, 0, 0, 173, 174, 5, 78, 0, 0, 174, 18, 1, 0, 0, 0, 175,
		176, 5, 73, 0, 0, 176, 177, 5, 70, 0, 0, 177, 20, 1, 0, 0, 0, 178, 179,
		5, 84, 0, 0, 179, 180, 5, 72, 0, 0, 180, 181, 5, 69, 0, 0, 181, 182, 5,
		78, 0, 0, 182, 22, 1, 0, 0, 0, 183, 184, 5, 69, 0, 0, 184, 185, 5, 76,
		0, 0, 185, 186, 5, 83, 0, 0, 186, 187, 5, 69, 0, 0, 187, 24, 1, 0, 0, 0,
		188, 189, 5, 87, 0, 0, 189, 190, 5, 72, 0, 0, 190, 191, 5, 73, 0, 0, 191,
		192, 5, 76, 0, 0, 192, 193, 5, 69, 0, 0, 193, 26, 1, 0, 0, 0, 194, 195,
		5, 68, 0, 0, 195, 196, 5, 79, 0, 0, 196, 28, 1, 0, 0, 0, 197, 198, 5, 70,
		0, 0, 198, 199, 5, 79, 0, 0, 199, 200, 5, 82, 0, 0, 200, 30, 1, 0, 0, 0,
		201, 202, 5, 69, 0, 0, 202, 203, 5, 65, 0, 0, 203, 204, 5, 67, 0, 0, 204,
		205, 5, 72, 0, 0, 205, 32, 1, 0, 0, 0, 206, 207, 5, 73, 0, 0, 207, 208,
		5, 78, 0, 0, 208, 34, 1, 0, 0, 0, 209, 210, 5, 84, 0, 0, 210, 211, 5, 79,
		0, 0, 211, 212, 5, 79, 0, 0, 212, 213, 5, 76, 0, 0, 213, 36, 1, 0, 0, 0,
		214, 215, 5, 76, 0, 0, 215, 216, 5, 76, 0, 0, 216, 217, 5, 77, 0, 0, 217,
		38, 1, 0, 0, 0, 218, 219, 5, 76, 0, 0, 219, 220, 5, 65, 0, 0, 220, 221,
		5, 83, 0, 0, 221, 222, 5, 84, 0, 0, 222, 40, 1, 0, 0, 0, 223, 224, 5, 69,
		0, 0, 224, 225, 5, 86, 0, 0, 225, 226, 5, 65, 0, 0, 226, 227, 5, 76, 0,
		0, 227, 42, 1, 0, 0, 0, 228, 229, 5, 69, 0, 0, 229, 230, 5, 77, 0, 0, 230,
		231, 5, 73, 0, 0, 231, 232, 5, 84, 0, 0, 232, 44, 1, 0, 0, 0, 233, 234,
		5, 116, 0, 0, 234, 235, 5, 114, 0, 0, 235, 236, 5, 117, 0, 0, 236, 237,
		5, 101, 0, 0, 237, 46, 1, 0, 0, 0, 238, 239, 5, 102, 0, 0, 239, 240, 5,
		97, 0, 0, 240, 241, 5, 108, 0, 0, 241, 242, 5, 115, 0, 0, 242, 243, 5,
		101, 0, 0, 243, 48, 1, 0, 0, 0, 244, 248, 3, 9, 4, 0, 245, 247, 9, 0, 0,
		0, 246, 245, 1, 0, 0, 0, 247, 250, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 248,
		246, 1, 0, 0, 0, 249, 251, 1, 0, 0, 0, 250, 248, 1, 0, 0, 0, 251, 252,
		3, 11, 5, 0, 252, 253, 1, 0, 0, 0, 253, 254, 6, 24, 0, 0, 254, 50, 1, 0,
		0, 0, 255, 257, 7, 0, 0, 0, 256, 255, 1, 0, 0, 0, 257, 258, 1, 0, 0, 0,
		258, 256, 1, 0, 0, 0, 258, 259, 1, 0, 0, 0, 259, 266, 1, 0, 0, 0, 260,
		262, 5, 46, 0, 0, 261, 263, 7, 0, 0, 0, 262, 261, 1, 0, 0, 0, 263, 264,
		1, 0, 0, 0, 264, 262, 1, 0, 0, 0, 264, 265, 1, 0, 0, 0, 265, 267, 1, 0,
		0, 0, 266, 260, 1, 0, 0, 0, 266, 267, 1, 0, 0, 0, 267, 52, 1, 0, 0, 0,
		268, 273, 5, 34, 0, 0, 269, 272, 3, 103, 51, 0, 270, 272, 8, 1, 0, 0, 271,
		269, 1, 0, 0, 0, 271, 270, 1, 0, 0, 0, 272, 275, 1, 0, 0, 0, 273, 271,
		1, 0, 0, 0, 273, 274, 1, 0, 0, 0, 274, 276, 1, 0, 0, 0, 275, 273, 1, 0,
		0, 0, 276, 287, 5, 34, 0, 0, 277, 282, 5, 39, 0, 0, 278, 281, 3, 103, 51,
		0, 279, 281, 8, 2, 0, 0, 280, 278, 1, 0, 0, 0, 280, 279, 1, 0, 0, 0, 281,
		284, 1, 0, 0, 0, 282, 280, 1, 0, 0, 0, 282, 283, 1, 0, 0, 0, 283, 285,
		1, 0, 0, 0, 284, 282, 1, 0, 0, 0, 285, 287, 5, 39, 0, 0, 286, 268, 1, 0,
		0, 0, 286, 277, 1, 0, 0, 0, 287, 54, 1, 0, 0, 0, 288, 289, 5, 61, 0, 0,
		289, 56, 1, 0, 0, 0, 290, 291, 5, 43, 0, 0, 291, 58, 1, 0, 0, 0, 292, 293,
		5, 40, 0, 0, 293, 60, 1, 0, 0, 0, 294, 295, 5, 41, 0, 0, 295, 62, 1, 0,
		0, 0, 296, 297, 5, 44, 0, 0, 297, 64, 1, 0, 0, 0, 298, 299, 5, 91, 0, 0,
		299, 66, 1, 0, 0, 0, 300, 301, 5, 93, 0, 0, 301, 68, 1, 0, 0, 0, 302, 303,
		5, 123, 0, 0, 303, 70, 1, 0, 0, 0, 304, 305, 5, 125, 0, 0, 305, 72, 1,
		0, 0, 0, 306, 307, 5, 58, 0, 0, 307, 74, 1, 0, 0, 0, 308, 309, 5, 46, 0,
		0, 309, 76, 1, 0, 0, 0, 310, 311, 5, 47, 0, 0, 311, 78, 1, 0, 0, 0, 312,
		313, 5, 123, 0, 0, 313, 314, 5, 123, 0, 0, 314, 80, 1, 0, 0, 0, 315, 316,
		5, 125, 0, 0, 316, 317, 5, 125, 0, 0, 317, 82, 1, 0, 0, 0, 318, 319, 5,
		61, 0, 0, 319, 320, 5, 61, 0, 0, 320, 84, 1, 0, 0, 0, 321, 322, 5, 33,
		0, 0, 322, 323, 5, 61, 0, 0, 323, 86, 1, 0, 0, 0, 324, 325, 5, 62, 0, 0,
		325, 88, 1, 0, 0, 0, 326, 327, 5, 60, 0, 0, 327, 90, 1, 0, 0, 0, 328, 329,
		5, 62, 0, 0, 329, 330, 5, 61, 0, 0, 330, 92, 1, 0, 0, 0, 331, 332, 5, 60,
		0, 0, 332, 333, 5, 61, 0, 0, 333, 94, 1, 0, 0, 0, 334, 338, 7, 3, 0, 0,
		335, 337, 7, 4, 0, 0, 336, 335, 1, 0, 0, 0, 337, 340, 1, 0, 0, 0, 338,
		336, 1, 0, 0, 0, 338, 339, 1, 0, 0, 0, 339, 96, 1, 0, 0, 0, 340, 338, 1,
		0, 0, 0, 341, 345, 5, 35, 0, 0, 342, 343, 5, 45, 0, 0, 343, 345, 5, 45,
		0, 0, 344, 341, 1, 0, 0, 0, 344, 342, 1, 0, 0, 0, 345, 349, 1, 0, 0, 0,
		346, 348, 8, 5, 0, 0, 347, 346, 1, 0, 0, 0, 348, 351, 1, 0, 0, 0, 349,
		347, 1, 0, 0, 0, 349, 350, 1, 0, 0, 0, 350, 352, 1, 0, 0, 0, 351, 349,
		1, 0, 0, 0, 352, 353, 6, 48, 0, 0, 353, 98, 1, 0, 0, 0, 354, 356, 5, 13,
		0, 0, 355, 354, 1, 0, 0, 0, 355, 356, 1, 0, 0, 0, 356, 357, 1, 0, 0, 0,
		357, 360, 5, 10, 0, 0, 358, 360, 5, 13, 0, 0, 359, 355, 1, 0, 0, 0, 359,
		358, 1, 0, 0, 0, 360, 100, 1, 0, 0, 0, 361, 363, 7, 6, 0, 0, 362, 361,
		1, 0, 0, 0, 363, 364, 1, 0, 0, 0, 364, 362, 1, 0, 0, 0, 364, 365, 1, 0,
		0, 0, 365, 366, 1, 0, 0, 0, 366, 367, 6, 50, 0, 0, 367, 102, 1, 0, 0, 0,
		368, 371, 5, 92, 0, 0, 369, 372, 7, 7, 0, 0, 370, 372, 3, 105, 52, 0, 371,
		369, 1, 0, 0, 0, 371, 370, 1, 0, 0, 0, 372, 104, 1, 0, 0, 0, 373, 374,
		5, 117, 0, 0, 374, 375, 3, 107, 53, 0, 375, 376, 3, 107, 53, 0, 376, 377,
		3, 107, 53, 0, 377, 378, 3, 107, 53, 0, 378, 106, 1, 0, 0, 0, 379, 380,
		7, 8, 0, 0, 380, 108, 1, 0, 0, 0, 17, 0, 248, 258, 264, 266, 271, 273,
		280, 282, 286, 338, 344, 349, 355, 359, 364, 371, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// NeuroScriptLexerInit initializes any static state used to implement NeuroScriptLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewNeuroScriptLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func NeuroScriptLexerInit() {
	staticData := &NeuroScriptLexerLexerStaticData
	staticData.once.Do(neuroscriptlexerLexerInit)
}

// NewNeuroScriptLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewNeuroScriptLexer(input antlr.CharStream) *NeuroScriptLexer {
	NeuroScriptLexerInit()
	l := new(NeuroScriptLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &NeuroScriptLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "NeuroScript.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NeuroScriptLexer tokens.
const (
	NeuroScriptLexerKW_DEFINE         = 1
	NeuroScriptLexerKW_PROCEDURE      = 2
	NeuroScriptLexerKW_END            = 3
	NeuroScriptLexerKW_ENDBLOCK       = 4
	NeuroScriptLexerKW_COMMENT_START  = 5
	NeuroScriptLexerKW_ENDCOMMENT     = 6
	NeuroScriptLexerKW_SET            = 7
	NeuroScriptLexerKW_CALL           = 8
	NeuroScriptLexerKW_RETURN         = 9
	NeuroScriptLexerKW_IF             = 10
	NeuroScriptLexerKW_THEN           = 11
	NeuroScriptLexerKW_ELSE           = 12
	NeuroScriptLexerKW_WHILE          = 13
	NeuroScriptLexerKW_DO             = 14
	NeuroScriptLexerKW_FOR            = 15
	NeuroScriptLexerKW_EACH           = 16
	NeuroScriptLexerKW_IN             = 17
	NeuroScriptLexerKW_TOOL           = 18
	NeuroScriptLexerKW_LLM            = 19
	NeuroScriptLexerKW_LAST           = 20
	NeuroScriptLexerKW_EVAL           = 21
	NeuroScriptLexerKW_EMIT           = 22
	NeuroScriptLexerKW_TRUE           = 23
	NeuroScriptLexerKW_FALSE          = 24
	NeuroScriptLexerCOMMENT_BLOCK     = 25
	NeuroScriptLexerNUMBER_LIT        = 26
	NeuroScriptLexerSTRING_LIT        = 27
	NeuroScriptLexerASSIGN            = 28
	NeuroScriptLexerPLUS              = 29
	NeuroScriptLexerLPAREN            = 30
	NeuroScriptLexerRPAREN            = 31
	NeuroScriptLexerCOMMA             = 32
	NeuroScriptLexerLBRACK            = 33
	NeuroScriptLexerRBRACK            = 34
	NeuroScriptLexerLBRACE            = 35
	NeuroScriptLexerRBRACE            = 36
	NeuroScriptLexerCOLON             = 37
	NeuroScriptLexerDOT               = 38
	NeuroScriptLexerSLASH             = 39
	NeuroScriptLexerPLACEHOLDER_START = 40
	NeuroScriptLexerPLACEHOLDER_END   = 41
	NeuroScriptLexerEQ                = 42
	NeuroScriptLexerNEQ               = 43
	NeuroScriptLexerGT                = 44
	NeuroScriptLexerLT                = 45
	NeuroScriptLexerGTE               = 46
	NeuroScriptLexerLTE               = 47
	NeuroScriptLexerIDENTIFIER        = 48
	NeuroScriptLexerLINE_COMMENT      = 49
	NeuroScriptLexerNEWLINE           = 50
	NeuroScriptLexerWS                = 51
)
